/*! tailwindcss v4.1.6 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: Exo, var(--font-serif);
    --font-serif: ui-serif, Georgia, Cambria, "Times New Roman", Times, serif;
    --font-mono: JetBrainsMono, ui-monospace, SFMono-Regular, Menlo, Monaco,
    Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-300: oklch(80.8% 0.114 19.571);
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-800: oklch(44.4% 0.177 26.899);
    --color-yellow-500: oklch(79.5% 0.184 86.047);
    --color-emerald-100: oklch(95% 0.052 163.051);
    --color-emerald-200: oklch(90.5% 0.093 164.15);
    --color-emerald-300: oklch(84.5% 0.143 164.978);
    --color-emerald-400: oklch(76.5% 0.177 163.223);
    --color-emerald-500: oklch(69.6% 0.17 162.48);
    --color-indigo-500: oklch(58.5% 0.233 277.117);
    --color-indigo-700: oklch(45.7% 0.24 277.023);
    --color-indigo-900: oklch(35.9% 0.144 278.697);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-stone-100: oklch(97% 0.001 106.424);
    --color-stone-300: oklch(86.9% 0.005 56.366);
    --color-black: #000;
    --spacing: 0.25rem;
    --container-sm: 24rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --font-weight-bold: 700;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --blur-xs: 4px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .pointer-events-auto {
    pointer-events: auto;
  }
  .pointer-events-none {
    pointer-events: none;
  }
  .visible {
    visibility: visible;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .-top-6 {
    top: calc(var(--spacing) * -6);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .-left-1 {
    left: calc(var(--spacing) * -1);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .z-1 {
    z-index: 1;
  }
  .z-10 {
    z-index: 10;
  }
  .z-11 {
    z-index: 11;
  }
  .z-15 {
    z-index: 15;
  }
  .z-100 {
    z-index: 100;
  }
  .ml-auto {
    margin-left: auto;
  }
  .rounded-square {
    display: flex;
    aspect-ratio: 1 / 1;
    height: 100%;
    align-items: center;
    justify-content: center;
    border-radius: var(--radius-sm);
    padding-inline: calc(var(--spacing) * 2);
    text-align: center;
  }
  .scrollbar-hidden {
    scrollbar-width: none;
    -ms-overflow-style: none;
    &::-webkit-scrollbar {
      display: none;
    }
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .table {
    display: table;
  }
  .h-0 {
    height: calc(var(--spacing) * 0);
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-3 {
    height: calc(var(--spacing) * 3);
  }
  .h-6 {
    height: calc(var(--spacing) * 6);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-auto {
    height: auto;
  }
  .h-dvh {
    height: 100dvh;
  }
  .h-full {
    height: 100%;
  }
  .max-h-3\/4 {
    max-height: calc(3/4 * 100%);
  }
  .max-h-20 {
    max-height: calc(var(--spacing) * 20);
  }
  .max-h-40 {
    max-height: calc(var(--spacing) * 40);
  }
  .max-h-dvh {
    max-height: 100dvh;
  }
  .w-3 {
    width: calc(var(--spacing) * 3);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-7 {
    width: calc(var(--spacing) * 7);
  }
  .w-25 {
    width: calc(var(--spacing) * 25);
  }
  .w-\[56\.5px\] {
    width: 56.5px;
  }
  .w-dvw {
    width: 100dvw;
  }
  .w-full {
    width: 100%;
  }
  .max-w-3\/4 {
    max-width: calc(3/4 * 100%);
  }
  .max-w-70 {
    max-width: calc(var(--spacing) * 70);
  }
  .max-w-dvw {
    max-width: 100dvw;
  }
  .min-w-4 {
    min-width: calc(var(--spacing) * 4);
  }
  .min-w-24 {
    min-width: calc(var(--spacing) * 24);
  }
  .min-w-40 {
    min-width: calc(var(--spacing) * 40);
  }
  .min-w-\[56\.5px\] {
    min-width: 56.5px;
  }
  .min-w-px {
    min-width: 1px;
  }
  .min-w-sm {
    min-width: var(--container-sm);
  }
  .-translate-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-1\/2 {
    --tw-translate-x: calc(1/2 * 100%);
    --tw-translate-y: calc(1/2 * 100%);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-\[calc\(100\%\+30px\)\] {
    --tw-translate-y: calc(calc(100% + 30px) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .cursor-col-resize {
    cursor: col-resize;
  }
  .cursor-grab {
    cursor: grab;
  }
  .cursor-grabbing {
    cursor: grabbing;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .cursor-row-resize {
    cursor: row-resize;
  }
  .resize {
    resize: both;
  }
  .resize-none {
    resize: none;
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .grid-cols-\[1rem_3rem_1rem\] {
    grid-template-columns: 1rem 3rem 1rem;
  }
  .grid-cols-\[auto_1fr_max-content\] {
    grid-template-columns: auto 1fr max-content;
  }
  .grid-cols-\[auto_minmax\(0\,1fr\)\] {
    grid-template-columns: auto minmax(0,1fr);
  }
  .grid-cols-\[max-content_minmax\(0\,1fr\)\] {
    grid-template-columns: max-content minmax(0,1fr);
  }
  .grid-cols-\[minmax\(0\,1fr\)_auto\] {
    grid-template-columns: minmax(0,1fr) auto;
  }
  .grid-rows-\[auto_1fr\] {
    grid-template-rows: auto 1fr;
  }
  .grid-rows-\[auto_1fr_auto\] {
    grid-template-rows: auto 1fr auto;
  }
  .grid-rows-\[auto_minmax\(0\,1fr\)\] {
    grid-template-rows: auto minmax(0,1fr);
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .overflow-auto {
    overflow: auto;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .overflow-visible {
    overflow: visible;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .rounded-b-sm {
    border-bottom-right-radius: var(--radius-sm);
    border-bottom-left-radius: var(--radius-sm);
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-slate-900 {
    border-color: var(--color-slate-900);
  }
  .bg-indigo-500 {
    background-color: var(--color-indigo-500);
  }
  .bg-indigo-500\/50 {
    background-color: color-mix(in srgb, oklch(58.5% 0.233 277.117) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-indigo-500) 50%, transparent);
    }
  }
  .bg-indigo-700 {
    background-color: var(--color-indigo-700);
  }
  .bg-red-800 {
    background-color: var(--color-red-800);
  }
  .bg-rose-500 {
    background-color: var(--color-rose-500);
  }
  .bg-slate-900 {
    background-color: var(--color-slate-900);
  }
  .bg-slate-950\/50 {
    background-color: color-mix(in srgb, oklch(12.9% 0.042 264.695) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-slate-950) 50%, transparent);
    }
  }
  .bg-stone-300 {
    background-color: var(--color-stone-300);
  }
  .bg-yellow-500 {
    background-color: var(--color-yellow-500);
  }
  .bg-zinc-100 {
    background-color: var(--color-zinc-100);
  }
  .bg-zinc-100\/75 {
    background-color: color-mix(in srgb, oklch(96.7% 0.001 286.375) 75%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-100) 75%, transparent);
    }
  }
  .bg-zinc-200 {
    background-color: var(--color-zinc-200);
  }
  .bg-zinc-400 {
    background-color: var(--color-zinc-400);
  }
  .bg-zinc-900\/25 {
    background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 25%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-zinc-900) 25%, transparent);
    }
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .px-8 {
    padding-inline: calc(var(--spacing) * 8);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pr-3 {
    padding-right: calc(var(--spacing) * 3);
  }
  .pb-1 {
    padding-bottom: calc(var(--spacing) * 1);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pl-2 {
    padding-left: calc(var(--spacing) * 2);
  }
  .pl-3 {
    padding-left: calc(var(--spacing) * 3);
  }
  .pl-4 {
    padding-left: calc(var(--spacing) * 4);
  }
  .pl-6 {
    padding-left: calc(var(--spacing) * 6);
  }
  .text-center {
    text-align: center;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-\[27px\] {
    --tw-leading: 27px;
    line-height: 27px;
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .text-wrap {
    text-wrap: wrap;
  }
  .break-all {
    word-break: break-all;
  }
  .whitespace-break-spaces {
    white-space: break-spaces;
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .whitespace-pre-wrap {
    white-space: pre-wrap;
  }
  .text-black {
    color: var(--color-black);
  }
  .text-indigo-500 {
    color: var(--color-indigo-500);
  }
  .text-inherit {
    color: inherit;
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-red-800 {
    color: var(--color-red-800);
  }
  .text-zinc-50 {
    color: var(--color-zinc-50);
  }
  .text-zinc-100 {
    color: var(--color-zinc-100);
  }
  .text-zinc-800 {
    color: var(--color-zinc-800);
  }
  .text-zinc-900 {
    color: var(--color-zinc-900);
  }
  .lowercase {
    text-transform: lowercase;
  }
  .uppercase {
    text-transform: uppercase;
  }
  .italic {
    font-style: italic;
  }
  .not-italic {
    font-style: normal;
  }
  .line-through {
    text-decoration-line: line-through;
  }
  .underline {
    text-decoration-line: underline;
  }
  .opacity-0 {
    opacity: 0%;
  }
  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  .outline-indigo-500 {
    outline-color: var(--color-indigo-500);
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-xs {
    --tw-backdrop-blur: blur(var(--blur-xs));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition-\[translate\] {
    transition-property: translate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-500 {
    --tw-duration: 500ms;
    transition-duration: 500ms;
  }
  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .\*\:w-max {
    :is(& > *) {
      width: max-content;
    }
  }
  .\*\:flex-none {
    :is(& > *) {
      flex: none;
    }
  }
  .not-has-\[\[open\=true\]\]\:hidden {
    &:not(*:has(*:is([open=true]))) {
      display: none;
    }
  }
  .hover\:bg-indigo-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-500);
      }
    }
  }
  .hover\:bg-red-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-red-600);
      }
    }
  }
  .hover\:text-indigo-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-indigo-700);
      }
    }
  }
  .hover\:text-red-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-red-600);
      }
    }
  }
  .has-checked\:bg-indigo-500\! {
    &:has(*:checked) {
      background-color: var(--color-indigo-500) !important;
    }
  }
  .has-checked\:text-zinc-100\! {
    &:has(*:checked) {
      color: var(--color-zinc-100) !important;
    }
  }
  .has-checked\:hover\:bg-indigo-700\! {
    &:has(*:checked) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-indigo-700) !important;
        }
      }
    }
  }
  .min-\[1245px\]\:hidden\! {
    @media (width >= 1245px) {
      display: none !important;
    }
  }
  .min-\[1245px\]\:justify-end {
    @media (width >= 1245px) {
      justify-content: flex-end;
    }
  }
  .dark\:border-emerald-300 {
    &:where(.dark, .dark *) {
      border-color: var(--color-emerald-300);
    }
  }
  .dark\:bg-emerald-300 {
    &:where(.dark, .dark *) {
      background-color: var(--color-emerald-300);
    }
  }
  .dark\:bg-emerald-500 {
    &:where(.dark, .dark *) {
      background-color: var(--color-emerald-500);
    }
  }
  .dark\:bg-emerald-500\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(69.6% 0.17 162.48) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-emerald-500) 50%, transparent);
      }
    }
  }
  .dark\:bg-red-500 {
    &:where(.dark, .dark *) {
      background-color: var(--color-red-500);
    }
  }
  .dark\:bg-zinc-100\/25 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(96.7% 0.001 286.375) 25%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-100) 25%, transparent);
      }
    }
  }
  .dark\:bg-zinc-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-700);
    }
  }
  .dark\:bg-zinc-800 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-800);
    }
  }
  .dark\:bg-zinc-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-900);
    }
  }
  .dark\:bg-zinc-900\/75 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(21% 0.006 285.885) 75%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-zinc-900) 75%, transparent);
      }
    }
  }
  .dark\:bg-zinc-950 {
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-950);
    }
  }
  .dark\:text-emerald-500 {
    &:where(.dark, .dark *) {
      color: var(--color-emerald-500);
    }
  }
  .dark\:text-red-300 {
    &:where(.dark, .dark *) {
      color: var(--color-red-300);
    }
  }
  .dark\:text-stone-100 {
    &:where(.dark, .dark *) {
      color: var(--color-stone-100);
    }
  }
  .dark\:text-zinc-100 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-100);
    }
  }
  .dark\:text-zinc-900 {
    &:where(.dark, .dark *) {
      color: var(--color-zinc-900);
    }
  }
  .dark\:outline-emerald-500 {
    &:where(.dark, .dark *) {
      outline-color: var(--color-emerald-500);
    }
  }
  .dark\:hover\:bg-emerald-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-emerald-400);
        }
      }
    }
  }
  .dark\:hover\:bg-red-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-red-400);
        }
      }
    }
  }
  .dark\:hover\:text-red-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-red-400);
        }
      }
    }
  }
  .hover\:dark\:text-emerald-200 {
    &:hover {
      @media (hover: hover) {
        &:where(.dark, .dark *) {
          color: var(--color-emerald-200);
        }
      }
    }
  }
  .dark\:has-checked\:bg-emerald-500\! {
    &:where(.dark, .dark *) {
      &:has(*:checked) {
        background-color: var(--color-emerald-500) !important;
      }
    }
  }
  .dark\:has-checked\:text-zinc-900\! {
    &:where(.dark, .dark *) {
      &:has(*:checked) {
        color: var(--color-zinc-900) !important;
      }
    }
  }
  .dark\:has-checked\:hover\:bg-emerald-200\! {
    &:where(.dark, .dark *) {
      &:has(*:checked) {
        &:hover {
          @media (hover: hover) {
            background-color: var(--color-emerald-200) !important;
          }
        }
      }
    }
  }
}
@font-face {
  font-family: icon;
  src: url("./fonts/icon/icon.woff2");
  font-weight: 100 900;
}
@font-face {
  font-family: Exo;
  src: url("./fonts/Exo/Exo-VariableFont_wght.ttf");
  font-weight: 100 900;
}
@font-face {
  font-family: Exo;
  src: url("./fonts/Exo/Exo-Italic-VariableFont_wght.ttf");
  font-weight: 100 900;
  font-style: italic;
}
@font-face {
  font-family: JetBrainsMono;
  src: url("./fonts/JetBrainsMono/JetBrainsMono.ttf");
  font-weight: 100 800;
}
@font-face {
  font-family: JetBrainsMono;
  src: url("./fonts/JetBrainsMono/JetBrainsMono-Italic.ttf");
  font-weight: 100 800;
  font-style: italic;
}
html, body {
  position: fixed;
  height: 100dvh;
  width: 100dvw;
  overflow: hidden !important;
  background-color: var(--color-zinc-50);
  color: var(--color-zinc-900);
  accent-color: var(--color-indigo-500);
  &:where(.dark, .dark *) {
    background-color: var(--color-zinc-900);
  }
  &:where(.dark, .dark *) {
    color: var(--color-zinc-50);
  }
  &:where(.dark, .dark *) {
    accent-color: var(--color-emerald-500);
  }
}
::selection {
  background-color: var(--color-indigo-500);
  color: var(--color-zinc-100);
}
.dark ::selection {
  background-color: var(--color-emerald-500);
  color: var(--color-zinc-800);
}
[data-button], button, select {
  cursor: pointer;
}
.outlined, [data-button], button:not(.plain), select {
  outline-style: var(--tw-outline-style);
  outline-width: 1px;
  outline-offset: calc(1px * -1);
  outline-color: var(--color-zinc-300);
  &:where(.dark, .dark *) {
    outline-color: var(--color-zinc-700);
  }
}
[data-button], button:not(.plain), select {
  &:not(.compact) {
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
  }
  &:not(.no-color) {
    background-color: var(--color-zinc-200);
    color: var(--color-zinc-800);
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-indigo-500);
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-zinc-200);
      }
    }
    &:active {
      background-color: var(--color-indigo-900);
    }
    &:active {
      color: var(--color-zinc-200);
    }
    &:where(.dark, .dark *) {
      background-color: var(--color-zinc-800);
    }
    &:where(.dark, .dark *) {
      color: var(--color-zinc-100);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-emerald-500);
        }
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-zinc-800);
        }
      }
    }
    &:where(.dark, .dark *) {
      &:active {
        background-color: var(--color-emerald-100);
      }
    }
    &:where(.dark, .dark *) {
      &:active {
        color: var(--color-zinc-800);
      }
    }
    &.selected {
      background-color: var(--color-zinc-50);
      color: var(--color-zinc-900);
      &:where(.dark, .dark *) {
        background-color: var(--color-zinc-900);
      }
      &:where(.dark, .dark *) {
        color: var(--color-zinc-100);
      }
    }
  }
}
:disabled {
  cursor: not-allowed;
  opacity: 25%;
}
select {
  border-radius: var(--radius-md);
  padding-inline: calc(var(--spacing) * 3);
  padding-block: calc(var(--spacing) * 1);
}
i, [data-icon] {
  font-family: icon, monospace;
  font-style: normal;
  display: inline-block;
  text-align: center;
}
button, input, textarea, select {
  outline-offset: calc(1px * -1);
  &:focus {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  &:focus {
    outline-color: var(--color-indigo-500);
  }
  &:where(.dark, .dark *) {
    &:focus {
      outline-color: var(--color-emerald-500);
    }
  }
}
:invalid {
  outline-color: var(--color-rose-500) !important;
}
.focus-children {
  outline-offset: calc(1px * -1);
  &:has(*:focus) {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  &:has(*:focus) {
    outline-color: var(--color-indigo-500);
  }
  &:where(.dark, .dark *) {
    &:has(*:focus) {
      outline-color: var(--color-emerald-500);
    }
  }
}
.focus-sibling {
  outline-offset: calc(1px * -1);
  &:is(:where(.peer):focus ~ *) {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }
  &:is(:where(.peer):focus ~ *) {
    outline-color: var(--color-indigo-500);
  }
  &:where(.dark, .dark *) {
    &:is(:where(.peer):focus ~ *) {
      outline-color: var(--color-emerald-500);
    }
  }
}
input:not([type=color]), textarea {
  border-radius: var(--radius-xs);
  background-color: var(--color-zinc-50);
  padding-inline: calc(var(--spacing) * 2);
  color: var(--color-zinc-900);
  outline-color: var(--color-indigo-700);
  &:where(.dark, .dark *) {
    background-color: var(--color-zinc-900);
  }
  &:where(.dark, .dark *) {
    color: var(--color-zinc-50);
  }
  &:where(.dark, .dark *) {
    outline-color: var(--color-emerald-400);
  }
}
.slide-enter-from, .slide-leave-to {
  --tw-translate-y: calc(var(--spacing) * 0);
  translate: var(--tw-translate-x) var(--tw-translate-y);
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-border-style: solid;
      --tw-leading: initial;
      --tw-font-weight: initial;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
    }
  }
}
