{
  "version": 3,
  "sources": ["../node_modules/jsx/js/signals.ts", "../node_modules/jsx/js/utils.ts", "../node_modules/jsx/js/jsx.ts", "../build/utils.ts", "../build/config.ts", "../build/math.ts", "../build/instance.ts", "../build/region.ts", "../build/sheetFormula/lexer.ts", "../build/sheetFormula/parser.ts", "../build/sheetFormula/builtin.ts", "../build/sheetFormula/evaluator.ts", "../build/state.ts", "../build/texture.ts", "../build/gl.ts", "../build/Canvas.tsx", "../build/render.ts", "../build/Dialog.tsx", "../node_modules/jsx/js/components/Portal.tsx", "../build/Dbg.tsx", "../node_modules/jsx/js/components/For.tsx", "../node_modules/jsx/js/components/FixedFor.tsx", "../build/ColorPicker.tsx", "../build/Checkbox.tsx", "../build/FontSelector.tsx", "../build/GridControls.tsx", "../build/GridAxes.tsx", "../build/CellInput.tsx", "../build/Alert.tsx", "../build/Toast.tsx", "../build/Tabs.tsx", "../build/CellColorPicker.tsx", "../build/saves.ts", "../build/Header.tsx", "../build/main.tsx"],
  "sourcesContent": ["const context = [] as Running<never>[];\n\nexport type Running<T> = {\n  execute(value: T): void;\n  dependencies: Set<Listeners<T>>;\n};\n\ntype Listeners<T> = Set<Running<T>>;\n\nexport type Reactive<T> = T & {\n  listeners: Listeners<T>,\n};\n\nexport type Ref<T> = [\n  get: (() => T) & { listeners: Listeners<T> },\n  set: ((v: T) => void) & {\n    byRef: (mutFn: (currentV: T) => void) => void;\n    byRefAsync: (mutFn: (currentV: T) => Promise<void>) => Promise<void>;\n  },\n];\n\nexport type BoolAttr = boolean | \"true\" | \"false\";\n\nexport type ReactiveAttr = Ref<string> | Ref<boolean> | string | boolean;\n\nexport function watch<T>(fn: Running<T>[\"execute\"]) {\n  const execute: Running<T>[\"execute\"] = (value) => {\n    cleanup(running);\n    context.push(running);\n    try {\n      fn(value);\n    }\n    finally {\n      context.pop();\n    }\n  };\n\n  const running: Running<T> = {\n    execute,\n    dependencies: new Set(),\n  };\n\n  execute(undefined as T);\n\n  return running;\n}\n\n/**\n * Works like `watch` but it only subscribes to the specified dependencies (deps)\n * and ignores any other accesses from within the callback (fn).\n * */\nexport function watchOnly<T>(deps: ({ listeners: Listeners<unknown> })[], fn: Running<T>[\"execute\"]) {\n  const execute: Running<T>[\"execute\"] = (value) => {\n    cleanup(running);\n\n    deps.forEach(dep => {\n      subscribe(running, dep.listeners);\n    });\n\n    try {\n      fn(value);\n    }\n    finally {\n      context.pop();\n    }\n  };\n\n  const running: Running<T> = {\n    execute,\n    dependencies: new Set(),\n  };\n\n  execute(undefined as T);\n\n  return running;\n}\n\n/**\n * Works like `watchOnly` but only watches the dependencies used in `depsFn`.\n * */\nexport function watchFn<T>(deps: () => unknown, fn: Running<T>[\"execute\"]) {\n  const execute: Running<T>[\"execute\"] = (value) => {\n    cleanup(running);\n    context.push(running);\n\n    try {\n      deps();\n    }\n    finally {\n      context.pop();\n    }\n\n    try {\n      fn(value);\n    }\n    finally {\n      context.pop();\n    }\n  };\n\n  const running: Running<T> = {\n    execute,\n    dependencies: new Set(),\n  };\n\n  execute(undefined as T);\n\n  return running;\n}\n\nexport function ref<T>(value: T = undefined as T): Ref<T> {\n  const listeners: Listeners<T> = new Set;\n  let v = value;\n\n  const get = () => {\n    const running = context[context.length - 1];\n    if (running) { subscribe(running, listeners) }\n    return v;\n  };\n\n  const set = (newV: T) => {\n    const prev = v;\n    v = newV;\n\n    for (const sub of [...listeners]) {\n      sub.execute(prev);\n    }\n  };\n\n  return [\n    Object.assign(get, { listeners }),\n    Object.assign(\n      set,\n      {\n        byRef: (mutFn: (currentV: T) => void) => {\n          mutFn(v);\n          set(v);\n        },\n        byRefAsync: async (mutFn: (currentV: T) => Promise<void>) => {\n          await mutFn(v);\n          set(v);\n        },\n      },\n    ),\n  ];\n}\n\nexport function reactive<T extends object>(objValue: T): Reactive<T> {\n  const obj = objValue as Reactive<T>;\n  Object.defineProperty(obj, \"listeners\", {\n    value: new Set(),\n    enumerable: false,\n    configurable: true,\n  });\n\n  for (const k in obj) {\n    let v = obj[k];\n    Object.defineProperty(obj, k, {\n      get: () => {\n        const running = context[context.length - 1];\n        if (running) { subscribe(running, obj.listeners) }\n        return v;\n      },\n      set: (newV) => {\n        const prev = v;\n        v = newV;\n        for (const sub of [...obj.listeners]) {\n          sub.execute(prev);\n        }\n      },\n    });\n  }\n\n  return obj;\n}\n\nexport function isReactiveObject<T extends object>(value: T): value is Reactive<T> {\n  return \"listeners\" in value && value.listeners instanceof Set;\n}\n\nfunction subscribe<T>(running: Running<T>, subscriptions: Listeners<T>) {\n  subscriptions.add(running);\n  running.dependencies.add(subscriptions);\n}\n\nexport function cleanup<T>(running: Running<T>) {\n  for (const dep of running.dependencies) {\n    dep.delete(running);\n  }\n  running.dependencies.clear();\n}\n\nexport function isBoolAttribute(value: unknown): value is BoolAttr {\n  return typeof value === \"string\" || typeof value === \"boolean\";\n}\n", "export function reverseForEach<T>(arr: T[], cb: (node: T) => boolean | void) {\n  arr.findLast(cb);\n}\n\nexport function swapRemove<T>(a: T[], i: number) {\n  a[i] = a[a.length - 1];\n  a.length--;\n}\n\nexport function swap<T>(arr: T[], idx1: number, idx2: number) {\n  [arr[idx1], arr[idx2]] = [arr[idx2], arr[idx1]];\n}\n\nexport function arrLast<T>(arr: T[]): T {\n  return arr[arr.length - 1];\n}\n\nexport function deepEq<A extends object, B extends object>(a: A | B, b: B | A): boolean {\n  const keys1 = Object.keys(a);\n  const keys2 = Object.keys(b);\n\n  const allKeys = new Set([...keys1, ...keys2]);\n\n  for (const key of allKeys) {\n    const aV = a[key];\n    const bV = b[key];\n\n    if (typeof aV === \"object\" && typeof bV === \"object\") {\n      if (aV instanceof Date && bV instanceof Date) {\n        if (aV.getTime() !== bV.getTime()) {\n          return false;\n        }\n      }\n      else if (aV instanceof Map && bV instanceof Map) {\n        if (aV.size !== bV.size) {\n          return false;\n        }\n\n        for (const [key, value] of aV) {\n          if (!bV.has(key) || bV.get(key) !== value) {\n            return false;\n          }\n        }\n      }\n      else if (aV instanceof Set && bV instanceof Set) {\n        if (aV.size !== bV.size) {\n          return false;\n        }\n\n        for (const item of aV) {\n          if (!bV.has(item)) {\n            return false;\n          }\n        }\n      }\n      else if (!deepEq(aV, bV)) {\n        return false;\n      }\n    }\n    else if (aV !== bV) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function iterChildrenDeep<T extends Node>(node: T, fn: (node: T) => void) {\n  if (node.nodeType === node.ELEMENT_NODE) {\n    for (const c of (node as unknown as Element).getElementsByTagName(\"*\")) {\n      fn(c as unknown as T);\n    }\n  }\n\n  fn(node);\n}\n\nexport function iterChildNodesDeep(node: Node, fn: (node: ChildNode) => void) {\n  fn(node as ChildNode);\n  for (const n of node.childNodes) {\n    iterChildNodesDeep(n, fn);\n  }\n  (node as ChildNode).remove();\n}\n\nexport type ElementPosition = {\n  parent: HTMLElement | null,\n  prevSibling: ChildNode | null,\n  nextSibling: ChildNode | null,\n  setFromElement<T extends Node>(element: T): void,\n  isPositioned(): boolean,\n  getInsertFunction(): InsertNodeFn,\n  insertNode(...nodes: Parameters<InsertNodeFn>): boolean,\n};\n\nexport type InsertNodeFn = ChildNode[\"after\"];\n\nexport function createElementPosition<T extends Node>(elem?: T): ElementPosition {\n  const self: ElementPosition = {\n    parent: null,\n    prevSibling: null,\n    nextSibling: null,\n    setFromElement(element) {\n      this.parent = element.parentElement;\n      this.prevSibling = element.previousSibling;\n      this.nextSibling = element.nextSibling;\n    },\n    isPositioned() {\n      return !!(this.parent || this.prevSibling || this.nextSibling);\n    },\n    getInsertFunction() {\n      if (this.prevSibling && this.prevSibling.parentElement) {\n        return this.prevSibling.after.bind(this.prevSibling);\n      }\n      if (this.nextSibling && this.nextSibling.parentElement) {\n        return this.nextSibling.before.bind(this.nextSibling);\n      }\n      if (this.parent) {\n        if (this.nextSibling) {\n          return this.parent.prepend.bind(this.parent);\n        }\n        return this.parent.append.bind(this.parent);\n      }\n      throw new Error(\"Could not find element position\");\n    },\n    insertNode(...nodes) {\n      try {\n        this.getInsertFunction()(...nodes);\n        return true;\n      }\n      catch (_) {\n        return false;\n      }\n    },\n  };\n\n  if (elem) {\n    queueMicrotask(() => self.setFromElement(elem));\n  }\n\n  return self;\n}\n", "import { cleanup, type Running, watch, watchFn } from \"~/signals\";\nimport type { EventName } from \"./dom-utils\";\nimport { swapRemove, iterChildrenDeep, iterChildNodesDeep } from \"./utils\";\n\nexport * from \"~/signals\";\n\nexport function template(html: string): () => Node {\n  const needsXml = /<select|<ul|<table/i.test(html) && /<slot/i.test(html);\n\n  function xmlToHtml(node: Element) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      return document.createTextNode(node.nodeValue as string);\n    }\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const el = document.createElement(node.localName);\n      for (const { name, value } of Array.from(node.attributes)) {\n        el.setAttribute(name, value);\n      }\n      for (const child of Array.from(node.childNodes)) {\n        el.appendChild(xmlToHtml(child as Element));\n      }\n      return el;\n    }\n\n    return document.createDocumentFragment();\n  }\n\n  function createNode(): Node {\n    if (needsXml) {\n      try {\n        const parser = new DOMParser();\n        const xml = parser.parseFromString(\n          `<root>${html}</root>`,\n          \"application/xml\",\n        );\n        if (xml.getElementsByTagName(\"parsererror\").length) {\n          throw new Error(\"XML parse failed\");\n        }\n        const xmlNode = xml.documentElement.firstChild;\n        return xmlToHtml(xmlNode as Element);\n      } catch {\n        // fall through to HTML parsing\n      }\n    }\n    const templ = document.createElement(\"template\");\n    templ.innerHTML = html;\n    return templ.content.firstChild as Node;\n  }\n\n  let cached: Node | undefined;\n  // biome-ignore lint/suspicious/noAssignInExpressions:\n  return (): Node => (cached || (cached = createNode())).cloneNode(true);\n}\n\ntype EventHandler = (e: Event) => void;\n\ntype GlobalEvent = {\n  fn: EventHandler;\n  target: Element;\n  once?: boolean;\n};\n\nexport function createGlobalEvent(evName: EventName) {\n  const listeners = [] as GlobalEvent[];\n\n  (evName === \"resize\" || evName === \"hashchange\"\n    ? window\n    : document\n  ).addEventListener(evName, (e) => {\n    for (let i = listeners.length - 1; i >= 0; i--) {\n      const l = listeners[i];\n      if (!l.target.isConnected) {\n        continue;\n      }\n      l.fn(e);\n      if (l.once) {\n        swapRemove(listeners, i);\n      }\n    }\n  });\n\n  return listeners;\n}\n\nexport function destroyNode(node: Element) {\n  iterChildNodesDeep(node, (t) => t.dispatchEvent(new CustomEvent(\"destroy\")));\n}\n\nexport function observeTree(\n  observer: MutationObserver,\n  target: Element,\n  isMount: boolean,\n) {\n  queueMicrotask(() => {\n    if (!target.parentNode) {\n      return;\n    }\n    observer.observe(target.parentNode, { childList: true, subtree: true });\n    if (isMount) {\n      target.dispatchEvent(new CustomEvent(\"mount\"));\n    }\n  });\n}\n\nexport function createMutationObserver() {\n  return new MutationObserver((mutations) => {\n    mutations.forEach((mutation) => {\n      if (mutation.type !== \"childList\") {\n        return;\n      }\n\n      for (const node of mutation.addedNodes) {\n        queueMicrotask(() => {\n          iterChildrenDeep(node, (node) =>\n            node.dispatchEvent(new CustomEvent(\"mount\")),\n          );\n        });\n      }\n      for (const node of mutation.removedNodes) {\n        queueMicrotask(() => {\n          iterChildrenDeep(node, (node) =>\n            node.dispatchEvent(new CustomEvent(\"unmount\")),\n          );\n        });\n      }\n    });\n  });\n}\n\nexport function addGlobalEvent(\n  listeners: GlobalEvent[],\n  target: GlobalEvent[\"target\"],\n  value: EventHandler | [EventHandler, AddEventListenerOptions],\n) {\n  let added = false;\n  if (value instanceof Array) {\n    if (value[0]) {\n      listeners.push({ fn: value[0], once: value[1].once, target });\n      added = true;\n    }\n  } else if (value) {\n    listeners.push({ fn: value, target });\n    added = true;\n  }\n\n  if (added) {\n    target.addEventListener(\"destroy\", () => {\n      const i = listeners.findIndex((l) => l.target === target);\n      if (i !== -1) {\n        swapRemove(listeners, i);\n      }\n    });\n  }\n}\n\nexport function addLocalEvent(\n  target: Element,\n  evName: EventName,\n  value: EventHandler | [EventHandler, AddEventListenerOptions],\n) {\n  if (value instanceof Array) {\n    target.addEventListener(evName, value[0], value[1]);\n  } else {\n    target.addEventListener(evName, value);\n  }\n}\n\nfunction applyToNodes(node: Element | Element[], action: (n: Element) => void) {\n  if (node instanceof Array) {\n    node.forEach(action);\n  } else {\n    action(node);\n  }\n}\n\nexport function conditionalRender(\n  anchor: Comment,\n  createNode: () => Element | Element[],\n  condition: () => boolean,\n) {\n  let node: Element | Element[];\n\n  anchor.addEventListener(\"destroy\", () => {\n    if (node) {\n      applyToNodes(node, destroyNode);\n    } else {\n      cleanup(running);\n    }\n  });\n\n  const create = () => {\n    node = createNode();\n    applyToNodes(node, (n) => {\n      n.addEventListener(\"destroy\", () => {\n        cleanup(running);\n        anchor.remove();\n      });\n    });\n\n    return node;\n  };\n\n  const running = watchFn(condition, () => {\n    if (condition()) {\n      const n = node || (node = create());\n      if (n instanceof Array) {\n        anchor.replaceWith(...n);\n      } else {\n        anchor.replaceWith(n);\n      }\n    } else if (node) {\n      applyToNodes(node, (n) => n.replaceWith(anchor));\n    }\n  });\n\n  return condition() ? node! || (node = create()) : anchor;\n}\n\nexport function setAttribute(node: Element, attr: string, value: unknown) {\n  if (value == null || value === false) {\n    node.removeAttribute(attr);\n  } else {\n    node.setAttribute(attr, value as string);\n  }\n}\n\nexport function trackAttribute(\n  node: Element,\n  attr: string,\n  value: () => unknown,\n) {\n  let running: Running<unknown>;\n\n  if (attr === \"value\" || attr === \"checked\") {\n    running = watch(() => {\n      node[attr] = value();\n    });\n  } else {\n    running = watch(() => {\n      setAttribute(node, attr, value());\n    });\n  }\n\n  node.addEventListener(\"destroy\", () => cleanup(running));\n}\n\nexport function trackClass(\n  target: Element,\n  className: string,\n  value: () => boolean,\n) {\n  const running = watch(() => {\n    if (!value()) {\n      target.classList.remove(className);\n    } else {\n      target.classList.add(className);\n    }\n  });\n\n  target.addEventListener(\"destroy\", () => cleanup(running));\n}\n\ntype ToString = { toString(): string };\nexport function trackCssProperty(\n  target: HTMLElement,\n  rule: string,\n  value: (() => ToString) | ToString,\n) {\n  if (typeof value === \"function\") {\n    const running = watch(() => target.style.setProperty(rule, value()));\n    target.addEventListener(\"destroy\", () => cleanup(running));\n  } else {\n    target.style.setProperty(rule, value.toString());\n  }\n}\n\nexport function insertChild(\n  anchor: Comment | HTMLSlotElement,\n  child: Node | (() => { toString(): string }) | number | string | unknown[],\n) {\n  if (anchor instanceof HTMLSlotElement && !child) {\n    anchor.replaceWith(...anchor.childNodes);\n    return anchor.children;\n  } else if (typeof child === \"string\" || typeof child === \"number\") {\n    const textNode = document.createTextNode(\"\");\n    textNode.textContent = child.toString();\n    anchor.replaceWith(textNode);\n    return textNode;\n  } else if (child instanceof Node) {\n    anchor.replaceWith(child);\n    return child;\n  } else if (child instanceof Array) {\n    let next = anchor;\n    let a = anchor;\n    for (let i = 0; i < child.length; i++) {\n      if (i + 1 < child.length) {\n        next = document.createComment(\"\");\n        a.after(next);\n      }\n      insertChild(a, child[i] as Node);\n      a = next;\n    }\n    return child;\n  } else {\n    const textNode = document.createTextNode(\"\");\n    anchor.replaceWith(textNode);\n    const running = watch(() => {\n      const c = child();\n      if (typeof c === \"string\") {\n        textNode.textContent = c;\n      } else if (c != null) {\n        textNode.textContent = c.toString();\n      } else if (c == null) {\n        textNode.textContent = \"\";\n      }\n    });\n    textNode.addEventListener(\"destroy\", () => cleanup(running));\n    return textNode;\n  }\n}\n\nexport function createTransition(\n  anchor: Comment,\n  createNode: () => Element,\n  cond: () => boolean,\n  name = \"jsx\",\n) {\n  let t: Element;\n  anchor.addEventListener(\"destroy\", () => {\n    if (t) {\n      destroyNode(t);\n    } else {\n      cleanup(running);\n    }\n  });\n\n  const enterActive = () => `${name}-enter-active`;\n  const enterFrom = () => `${name}-enter-from`;\n  const enterTo = () => `${name}-enter-to`;\n\n  const leaveActive = () => `${name}-leave-active`;\n  const leaveFrom = () => `${name}-leave-from`;\n  const leaveTo = () => `${name}-leave-to`;\n\n  function nextFrame() {\n    return new Promise((res) => {\n      requestAnimationFrame(() => requestAnimationFrame(res));\n    });\n  }\n\n  const create = () => {\n    t = createNode();\n\n    t.addEventListener(\"destroy\", () => {\n      cleanup(running);\n      anchor.remove();\n    });\n    t.addEventListener(\"transitionend\", () => {\n      removeClasses();\n\n      if (!cond()) {\n        t.replaceWith(anchor);\n      }\n    });\n\n    return t;\n  };\n  const target = () => t || (t = create());\n  let firstRun = true;\n  const running = watchFn(cond, async () => {\n    if (firstRun && !cond()) {\n      firstRun = false;\n      return;\n    }\n    firstRun = false;\n\n    if (target().classList.length) {\n      if (\n        !cond() &&\n        (target().classList.contains(enterFrom()) ||\n          target().classList.contains(enterActive()) ||\n          target().classList.contains(enterTo()))\n      ) {\n        await nextFrame();\n        removeClasses();\n        target().replaceWith(anchor);\n      } else if (\n        cond() &&\n        (target().classList.contains(leaveFrom()) ||\n          target().classList.contains(leaveTo()) ||\n          target().classList.contains(leaveActive()))\n      ) {\n        await nextFrame();\n        removeClasses();\n        target().replaceWith(anchor);\n      }\n    }\n\n    if (cond()) {\n      if (target().isConnected) {\n        return;\n      }\n      target().classList.add(enterFrom());\n      target().classList.add(enterActive());\n\n      anchor.replaceWith(target());\n      await nextFrame();\n\n      target().classList.remove(enterFrom());\n      target().classList.add(enterTo());\n    } else if (target().isConnected) {\n      target().classList.add(leaveFrom());\n      target().classList.add(leaveActive());\n\n      await nextFrame();\n\n      target().classList.remove(leaveFrom());\n      target().classList.add(leaveTo());\n    }\n  });\n\n  function removeClasses() {\n    target().classList.remove(enterActive());\n    target().classList.remove(enterFrom());\n    target().classList.remove(enterTo());\n\n    target().classList.remove(leaveActive());\n    target().classList.remove(leaveFrom());\n    target().classList.remove(leaveTo());\n  }\n\n  return cond() ? target() : anchor;\n}\n", "\n\nimport { MAX_COLS } from \"./config\";\nimport type { Color, OffsetMap, Pos2D } from \"./types\";\n\nexport const [toAlphaUpper, fromAlphaUpper] = asciiNumParser(\n  26,\n  \"A\".charCodeAt(0),\n);\nexport const [toAlphaLower, fromAlphaLower] = asciiNumParser(\n  26,\n  \"a\".charCodeAt(0),\n);\n\nexport function getCellId(col: number, row: number) {\n  return `${toAlphaUpper(col)}${toAlphaLower(row)}`;\n}\n\nexport function getCellIdx(col: number, row: number) {\n  return row * MAX_COLS + col;\n}\n\nexport function totalOffsetsUntil(n: number, offsets: OffsetMap) {\n  let sum = 0;\n  for (const k in offsets) {\n    if (+k <= n) sum += offsets[k];\n  }\n  return sum;\n}\n\nexport function totalOffsetsRange(\n  from: number,\n  to: number,\n  offsets: OffsetMap,\n) {\n  let sum = 0;\n  for (const k in offsets) {\n    const n = +k;\n    if (n <= to && n >= from) sum += offsets[k];\n  }\n  return sum;\n}\n\nexport function totalOffsets(offsets: OffsetMap) {\n  return Object.values(offsets).reduce((cum, n) => cum + n, 0);\n}\n\nexport const isTouchscreen = navigator.maxTouchPoints > 0;\nexport const isSafari = (() => {\n  const ua = navigator.userAgent;\n  const isAppleDevice = /Macintosh|iPad|iPhone/.test(ua);\n  const isWebKit = /WebKit/.test(ua) && !/Chrome|CriOS|FxiOS|Edg|OPR/.test(ua);\n  const isTouchDevice =\n    typeof navigator.maxTouchPoints === \"number\" &&\n    navigator.maxTouchPoints > 0;\n\n  return isAppleDevice && isWebKit && (isTouchDevice || /Safari/.test(ua));\n})();\n\nexport function aligned2(v: number, alignment: number): number {\n  return (v + (alignment - 1)) & ~(alignment - 1);\n}\n\nexport function aligned(v: number, alignment: number): number {\n  return Math.floor(v / alignment) * alignment;\n}\n\nexport function asciiNumParser(base: number, asciiStart: number) {\n  return [\n    (num: number) => {\n      let n = num + 1;\n      let result = \"\";\n      while (n > 0) {\n        const remainder = (n - 1) % base;\n        result = String.fromCharCode(asciiStart + remainder) + result;\n        n = Math.floor((n - 1) / base);\n      }\n      return result;\n    },\n    (s: string) => {\n      let n = 0;\n      for (let i = 0; i < s.length; i++) {\n        n = n * base + (s.charCodeAt(i) - asciiStart + 1);\n      }\n      return n - 1;\n    },\n  ] as const;\n}\n\nexport function getMousePosition(ev: MouseEvent | TouchEvent): Pos2D {\n  let clientX: number;\n  let clientY: number;\n\n  if (ev instanceof MouseEvent) {\n    clientX = ev.clientX;\n    clientY = ev.clientY;\n  } else if (ev instanceof TouchEvent) {\n    const touch = ev.touches[0] || ev.changedTouches[0];\n    if (!touch) return { x: -1, y: -1 };\n    clientX = touch.clientX;\n    clientY = touch.clientY;\n  } else {\n    return { x: -1, y: -1 };\n  }\n\n  return { x: clientX, y: clientY };\n}\n\nexport function getRelativeMousePosition(ev: MouseEvent | TouchEvent) {\n  const element = ev.currentTarget as HTMLElement;\n  const rect = element.getBoundingClientRect();\n  const clientPos = getMousePosition(ev);\n\n  if (clientPos.x === -1 && clientPos.y === -1) {\n    return clientPos;\n  }\n\n  const x = clientPos.x - rect.left;\n  const y = clientPos.y - rect.top;\n\n  return { x, y };\n}\n\nexport function hexToRgba(hexColor: string): Color {\n  let hex = hexColor[0] === \"#\" ? hexColor.slice(1) : hexColor;\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex\n      .split(\"\")\n      .map((x) => x + x)\n      .join(\"\");\n  }\n\n  const r = Number.parseInt(hex.slice(0, 2), 16) / 256;\n  const g = Number.parseInt(hex.slice(2, 4), 16) / 256;\n  const b = Number.parseInt(hex.slice(4, 6), 16) / 256;\n  const a = hex.length === 8 ? Number.parseInt(hex.slice(6, 8), 16) / 255 : 1;\n\n  return [r, g, b, a];\n}\n", "\n\nimport type { Color } from \"./types\";\nimport { hexToRgba } from \"./utils\";\n\nexport const GRID_LINE_SIZE = 1;\n\nexport const COLOR_GRID_LINE_DARK: Color = [0.25, 0.25, 0.27, 1.0]; // zinc-700 #3f3f46\nexport const COLOR_GRID_LINE_LIGHT: Color = [0.89, 0.89, 0.91, 1.0]; // zinc-200 #e4e4e7\n\nexport const COLOR_SELECTED_CELL_DARK: Color = [0.2, 0.83, 0.6, 0.4]; // emerald-400/40 #34d399\nexport const COLOR_SELECTED_CELL_LIGHT: Color = [0.31, 0.27, 0.9, 0.6]; // indigo-600/40 #4f46e5\n\nexport const COLOR_CELL_DARK_HEX = \"#18181b\"; // zinc-900\nexport const COLOR_CELL_LIGHT_HEX = \"#fafafa\"; // zinc-50\nexport const COLOR_CELL_DARK = hexToRgba(COLOR_CELL_DARK_HEX);\nexport const COLOR_CELL_LIGHT = hexToRgba(COLOR_CELL_LIGHT_HEX);\n\nexport const DIVIDER_STYLE = \"h-full min-w-px bg-zinc-400 dark:bg-zinc-700\";\n\nexport const MAX_COLS = 9e4;\nexport const MAX_ROWS = 2e5;\n\nexport const CELL_W = 99;\nexport const CELL_H = 33;\n\nexport const DEFAULT_FONT_FAMILY = \"Roboto\";\nexport const DEFAULT_FONT_SIZE = 16;\nexport const DEFAULT_FONT_COLOR = \"\";\nexport const DEFAULT_BOLD = false;\nexport const DEFAULT_ITALIC = false;\nexport const DEFAULT_UNDERLINE = false;\nexport const DEFAULT_STRIKETHROUGH = false;\nexport const DEFAULT_FONT_FORMAT = \"Number\";\n\nexport const SHEET_NAME_PATTERN_STR = \"[A-Za-z0-9_]\";\nexport const SHEET_NAME_PATTERN = new RegExp(SHEET_NAME_PATTERN_STR);\n", "\n\nexport const Mat4 = {\n  identity() {\n    // biome-ignore format:\n    return new Float32Array([\n      1, 0, 0, 0,\n      0, 1, 0, 0,\n      0, 0, 1, 0,\n      0, 0, 0, 1,\n    ]);\n  },\n\n  ortho(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    nearZ: number,\n    farZ: number,\n    dest: Float32Array,\n  ) {\n    dest.fill(0);\n\n    const rl = 1 / (right - left);\n    const tb = 1 / (top - bottom);\n    const f_n = -1 / (farZ - nearZ);\n\n    dest[0] = 2 * rl;\n    dest[5] = 2 * tb;\n    dest[10] = 2 * f_n;\n    dest[12] = -(right + left) * rl;\n    dest[13] = -(top + bottom) * tb;\n    dest[14] = -(farZ + nearZ) * f_n;\n    dest[15] = 1;\n  },\n\n  mulAdds(\n    tx: number,\n    ty: number,\n    tz: number,\n    tw: number,\n    s: number,\n    dest: Float32Array,\n  ) {\n    dest[0] += tx * s;\n    dest[1] += ty * s;\n    dest[2] += tz * s;\n    dest[3] += tw * s;\n  },\n\n  translate(m4: Float32Array, tx: number, ty: number, tz: number) {\n    m4[12] += tx;\n    m4[13] += ty;\n    m4[14] += tz;\n  },\n\n  translatePx(m4: Float32Array, tx: number, ty: number, tz: number) {\n    return Mat4.translate(m4, tx * m4[0], ty * m4[5], tz * m4[10]);\n  },\n\n  translateTo(m4: Float32Array, tx: number, ty: number, tz: number) {\n    m4[12] = tx;\n    m4[13] = ty;\n    m4[14] = tz;\n  },\n\n  translatePxTo(m4: Float32Array, tx: number, ty: number, tz: number) {\n    return Mat4.translateTo(m4, tx * m4[0], ty * m4[5], tz * m4[10]);\n  },\n\n  scaleIdentity(m4: Float32Array, sx: number, sy: number, sz: number) {\n    m4[0] = sx;\n    m4[5] = sy;\n    m4[10] = sz;\n  },\n\n  scale(m4: Float32Array, sx: number, sy: number, sz: number) {\n    m4[0] *= sx;\n    m4[1] *= sx;\n    m4[2] *= sx;\n    m4[3] *= sx;\n\n    m4[4] *= sy;\n    m4[5] *= sy;\n    m4[6] *= sy;\n    m4[7] *= sy;\n\n    m4[8] *= sz;\n    m4[9] *= sz;\n    m4[10] *= sz;\n    m4[11] *= sz;\n  },\n\n  toString<T extends { length: number; [index: number]: number }>(\n    data: T,\n    rows = 4,\n    cols = 4,\n    decimals = 4,\n  ): string {\n    if (data.length !== rows * cols)\n      throw new Error(\"Invalid matrix dimensions\");\n\n    const colWidths = new Array(cols).fill(0);\n\n    for (let i = 0; i < data.length; i++) {\n      const row = Math.floor(i / cols);\n      const formatted = data[i].toFixed(decimals);\n      colWidths[row] = Math.max(colWidths[row], formatted.length);\n    }\n\n    let result = \"\";\n    for (let c = 0; c < cols; c++) {\n      const column = Array.from({ length: rows }, (_, r) =>\n        data[r * cols + c].toFixed(decimals).padStart(colWidths[r]),\n      ).join(\"  \");\n      result += `[ ${column} ]\\n`;\n    }\n\n    return result.trim();\n  },\n};\n\nexport const Vec = {\n  toString<T extends { length: number; [index: number]: number }>(\n    data: T,\n    decimals = 2,\n  ): string {\n    const colWidths = new Array(data.length).fill(0);\n\n    for (let i = 0; i < data.length; i++) {\n      const formatted = data[i].toFixed(decimals);\n      colWidths[i] = Math.max(colWidths[i], formatted.length);\n    }\n\n    let result = \"[ \";\n    for (let i = 0; i < data.length; i++) {\n      result += `${data[i].toFixed(decimals).padStart(colWidths[i])} `;\n    }\n    result += \"]\";\n\n    return result.trim();\n  },\n};\n\nexport function clamp(min: number, n: number, max: number) {\n  return Math.min(max, Math.max(min, n));\n}\n", "\n\nimport { Mat4 } from \"./math\";\n\nexport const NUM_INST_ATTRS = 25;\nexport const INST_ATTR_SIZE = 4;\nexport const INST_STRIDE = NUM_INST_ATTRS * INST_ATTR_SIZE;\n\nexport type Instances = {\n  data: Float32Array;\n  len: number;\n\n  resize(len: number): boolean;\n  modelAt(index: number): Float32Array;\n  colorAt(index: number): Float32Array;\n  hasUVAt(index: number): Float32Array;\n  uvAt(index: number): Float32Array;\n};\n\nfunction initData(data: Float32Array, len: number) {\n  for (let i = 0; i < len * NUM_INST_ATTRS; i += NUM_INST_ATTRS) {\n    data.set(Mat4.identity(), i);\n    data.set([0, 0, 1, 1], i + 20);\n  }\n}\n\nexport function initInstances(len: number): Instances {\n  const data = new Float32Array(len * NUM_INST_ATTRS);\n  initData(data, len);\n\n  return {\n    data,\n    len,\n    resize(len) {\n      if (len === this.len) return false;\n\n      const size = len * NUM_INST_ATTRS;\n      if (len < this.len) {\n        this.data = this.data.subarray(0, size);\n      } else {\n        const data = new Float32Array(size);\n        data.set(this.data);\n        initData(data.subarray(this.data.length), len - this.len);\n        this.data = data;\n      }\n      this.len = len;\n      return true;\n    },\n    modelAt(index) {\n      const start = index * NUM_INST_ATTRS;\n      return this.data.subarray(start, start + 16);\n    },\n    colorAt(index) {\n      const start = index * NUM_INST_ATTRS + 16;\n      return this.data.subarray(start, start + 4);\n    },\n    uvAt(index) {\n      const start = index * NUM_INST_ATTRS + 20;\n      return this.data.subarray(start, start + 4);\n    },\n    hasUVAt(index) {\n      const start = index * NUM_INST_ATTRS + 24;\n      return this.data.subarray(start, start + 1);\n    },\n  };\n}\n\ntype Mesh = {\n  vertexData: Float32Array;\n  indexData: Uint8Array;\n};\n\nexport const NUM_VERT_ATTRS = 2;\nexport const VERT_ATTR_SIZE = 4;\nexport const VERT_STRIDE = NUM_VERT_ATTRS * VERT_ATTR_SIZE;\n\nexport const QUAD_MESH: Mesh = {\n  // biome-ignore format:\n  vertexData: new Float32Array([\n // position\n    0.0, 0.0,\n    1.0, 0.0,\n    1.0, 1.0,\n    0.0, 1.0,\n  ]),\n  indexData: new Uint8Array([0, 1, 2, 2, 3, 0]),\n};\n", "\n\nimport { CELL_H, CELL_W } from \"./config\";\nimport {\n  getEffectiveCellHeight,\n  getEffectiveCellWidth,\n  currentSheet,\n} from \"./state\";\nimport { totalOffsetsRange } from \"./utils\";\n\nexport type Region = {\n  startCol: number;\n  startRow: number;\n  endCol: number;\n  endRow: number;\n};\n\nexport function addRegionToSet(\n  set: Set<string>,\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n) {\n  const newRegion: Region = { startCol, startRow, endCol, endRow };\n  const allRegions = [...set].map(parseRegion);\n  allRegions.push(newRegion);\n\n  const minimized = fullyMergeRegion(allRegions);\n\n  set.clear();\n  for (const r of minimized) {\n    set.add(serializeRegion(r));\n  }\n}\n\nexport function removeRegionFromSet(\n  set: Set<string>,\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n) {\n  const cut: Region = { startCol, startRow, endCol, endRow };\n  const updated: Region[] = [];\n\n  for (const s of set) {\n    const r = parseRegion(s);\n    if (regionsOverlap(r, cut)) {\n      updated.push(...subtractRect(r, cut));\n    } else {\n      updated.push(r);\n    }\n  }\n\n  const merged = fullyMergeRegion(updated);\n  set.clear();\n  for (const r of merged) {\n    set.add(serializeRegion(r));\n  }\n}\n\nexport function carveRegion(\n  set: Set<string>,\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n) {\n  const input: Region = { startCol, startRow, endCol, endRow };\n  const existing = [...set].map(parseRegion);\n\n  // 1) Chop the input out of all existing rectangles\n  const existingFragments = existing.flatMap((r) =>\n    regionsOverlap(r, input) ? subtractRect(r, input) : [r],\n  );\n\n  // 2) Build the union of all overlapping bits to subtract from the input\n  const overlaps = existing.filter((r) => regionsOverlap(r, input));\n  //    merge overlapping existing regions first\n  const mergedOverlaps = fullyMergeRegion(overlaps);\n\n  // 3) Chop that union out of the input\n  let inputFragments: Region[] = [input];\n  for (const u of mergedOverlaps) {\n    inputFragments = inputFragments.flatMap((f) =>\n      regionsOverlap(f, u) ? subtractRect(f, u) : [f],\n    );\n  }\n\n  // 4) Combine leftovers from existing + leftovers of input, then fully re-merge\n  const result = fullyMergeRegion([...existingFragments, ...inputFragments]);\n\n  set.clear();\n  for (const r of result) set.add(serializeRegion(r));\n}\n\nexport function regionToQuad(region: Region) {\n  const offsetSX = totalOffsetsRange(\n    0,\n    region.startCol - 1,\n    currentSheet().colOffsets(),\n  );\n  const offsetSY = totalOffsetsRange(\n    0,\n    region.startRow - 1,\n    currentSheet().rowOffsets(),\n  );\n  const sx = region.startCol * CELL_W + offsetSX;\n  const sy = region.startRow * CELL_H + offsetSY;\n\n  const offsetEX = totalOffsetsRange(\n    0,\n    region.endCol - 1,\n    currentSheet().colOffsets(),\n  );\n  const offsetEY = totalOffsetsRange(\n    0,\n    region.endRow - 1,\n    currentSheet().rowOffsets(),\n  );\n  const ex =\n    region.endCol * CELL_W + offsetEX + getEffectiveCellWidth(region.endCol);\n  const ey =\n    region.endRow * CELL_H + offsetEY + getEffectiveCellHeight(region.endRow);\n\n  return [sx, sy, ex - sx, ey - sy];\n}\n\nexport function serializeRegion(region: Region): string {\n  return `${region.startCol},${region.startRow}:${region.endCol},${region.endRow}`;\n}\n\nexport function parseRegion(s: string): Region {\n  const [start, end] = s.split(\":\");\n  const [sc, sr] = start.split(\",\").map(Number);\n  const [ec, er] = end.split(\",\").map(Number);\n  return { startCol: sc, startRow: sr, endCol: ec, endRow: er };\n}\n\nexport function regionsOverlap(a: Region, b: Region): boolean {\n  return (\n    a.startCol <= b.endCol &&\n    a.endCol >= b.startCol &&\n    a.startRow <= b.endRow &&\n    a.endRow >= b.startRow\n  );\n}\n\nfunction subtractRect(base: Region, cut: Region): Region[] {\n  const parts: Region[] = [];\n\n  // top band\n  if (cut.startRow > base.startRow) {\n    parts.push({\n      startCol: base.startCol,\n      endCol: base.endCol,\n      startRow: base.startRow,\n      endRow: cut.startRow - 1,\n    });\n  }\n  // bottom band\n  if (cut.endRow < base.endRow) {\n    parts.push({\n      startCol: base.startCol,\n      endCol: base.endCol,\n      startRow: cut.endRow + 1,\n      endRow: base.endRow,\n    });\n  }\n  // middle slice\n  const midTop = Math.max(base.startRow, cut.startRow);\n  const midBottom = Math.min(base.endRow, cut.endRow);\n\n  if (midTop <= midBottom) {\n    // left panel\n    if (cut.startCol > base.startCol) {\n      parts.push({\n        startCol: base.startCol,\n        endCol: cut.startCol - 1,\n        startRow: midTop,\n        endRow: midBottom,\n      });\n    }\n    // right panel\n    if (cut.endCol < base.endCol) {\n      parts.push({\n        startCol: cut.endCol + 1,\n        endCol: base.endCol,\n        startRow: midTop,\n        endRow: midBottom,\n      });\n    }\n  }\n\n  return parts;\n}\n\nfunction fullyMergeRegion(r: Region[]): Region[] {\n  let regions = r;\n  let changed = true;\n  const mergeTwo = (a: Region, b: Region): Region => ({\n    startCol: Math.min(a.startCol, b.startCol),\n    startRow: Math.min(a.startRow, b.startRow),\n    endCol: Math.max(a.endCol, b.endCol),\n    endRow: Math.max(a.endRow, b.endRow),\n  });\n\n  const adjacentOrOverlap = (a: Region, b: Region) =>\n    regionsOverlap(a, b) ||\n    (a.startRow === b.startRow &&\n      a.endRow === b.endRow &&\n      (a.endCol + 1 === b.startCol || b.endCol + 1 === a.startCol)) ||\n    (a.startCol === b.startCol &&\n      a.endCol === b.endCol &&\n      (a.endRow + 1 === b.startRow || b.endRow + 1 === a.startRow));\n\n  while (changed) {\n    changed = false;\n    const out: Region[] = [];\n    while (regions.length > 0) {\n      let curr = regions.shift() as Region;\n      let mergedAny = false;\n      for (let i = 0; i < regions.length; i++) {\n        if (adjacentOrOverlap(curr, regions[i])) {\n          curr = mergeTwo(curr, regions[i]);\n          regions.splice(i, 1);\n          mergedAny = changed = true;\n          break;\n        }\n      }\n      out.push(curr);\n    }\n    regions = out;\n  }\n\n  return regions;\n}\n\nexport function addSubtractingIntersectingUnion(\n  set: Set<string>,\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n) {\n  const input: Region = { startCol, startRow, endCol, endRow };\n  const existing = [...set].map(parseRegion);\n\n  // 1) Chop each existing region by the input if they overlap\n  const existingFragments: Region[] = [];\n  const overlaps: Region[] = [];\n  for (const r of existing) {\n    if (regionsOverlap(r, input)) {\n      overlaps.push(r);\n      existingFragments.push(...subtractRect(r, input));\n    } else {\n      existingFragments.push(r);\n    }\n  }\n\n  // 2) If no overlaps, just behave like addRegionToSet\n  if (overlaps.length === 0) {\n    const merged = fullyMergeRegion([...existingFragments, input]);\n    set.clear();\n    for (const r of merged) set.add(serializeRegion(r));\n    return;\n  }\n\n  // 3) Merge all overlapping existing regions, then carve that union out of the input\n  const mergedOverlaps = fullyMergeRegion(overlaps);\n  let inputFragments: Region[] = [input];\n  for (const u of mergedOverlaps) {\n    inputFragments = inputFragments.flatMap((f) =>\n      regionsOverlap(f, u) ? subtractRect(f, u) : [f],\n    );\n  }\n\n  // 4) Combine the leftover existing fragments + leftover input fragments, then re-merge\n  const finalList = fullyMergeRegion([...existingFragments, ...inputFragments]);\n\n  set.clear();\n  for (const r of finalList) {\n    set.add(serializeRegion(r));\n  }\n}\n", "\n\nimport { SHEET_NAME_PATTERN } from \"~/config\";\n\nexport enum TokenType {\n  Number = 0,\n  Identifier = 1,\n  Operator = 2,\n  LParen = 3,\n  RParen = 4,\n  Colon = 5,\n  Comma = 6,\n  Bang = 7,\n  EOF = 8,\n}\n\nexport interface Token {\n  type: TokenType;\n  text: string;\n}\n\nexport function lex(input: string): Token[] {\n  const tokens: Token[] = [];\n  let i = input[0] === \"=\" ? 1 : 0;\n\n  while (i < input.length) {\n    const c = input[i];\n    if (/\\s/.test(c)) {\n      i++;\n      continue;\n    }\n\n    if (/\\d/.test(c)) {\n      let num = c;\n      i++;\n      while (i < input.length && /[\\d.]/.test(input[i])) num += input[i++];\n      tokens.push({ type: TokenType.Number, text: num });\n      continue;\n    }\n\n    if (/[A-Za-z]/.test(c)) {\n      let id = c;\n      i++;\n      while (i < input.length && SHEET_NAME_PATTERN.test(input[i])) {\n        id += input[i++];\n      }\n      tokens.push({ type: TokenType.Identifier, text: id });\n      continue;\n    }\n\n    switch (c) {\n      case \"+\":\n      case \"-\":\n      case \"*\":\n      case \"/\":\n        tokens.push({ type: TokenType.Operator, text: c });\n        i++;\n        break;\n      case \"(\":\n        tokens.push({ type: TokenType.LParen, text: c });\n        i++;\n        break;\n      case \")\":\n        tokens.push({ type: TokenType.RParen, text: c });\n        i++;\n        break;\n      case \":\":\n        tokens.push({ type: TokenType.Colon, text: c });\n        i++;\n        break;\n      case \",\":\n        tokens.push({ type: TokenType.Comma, text: c });\n        i++;\n        break;\n      case \"!\":\n        tokens.push({ type: TokenType.Bang, text: c });\n        i++;\n        break;\n      default:\n        throw new Error(`Unexpected character: '${c}'`);\n    }\n  }\n\n  tokens.push({ type: TokenType.EOF, text: \"\" });\n  return tokens;\n}\n", "\n\nimport { type Token, TokenType, lex } from \"./lexer\";\n\nconst PRECEDENCE: Record<string, number> = {\n  \"+\": 10,\n  \"-\": 10,\n  \"*\": 20,\n  \"/\": 20,\n};\n\nexport type ASTNode =\n  | { type: \"number\"; value: number }\n  | { type: \"cell\"; id: string; sheet?: string }\n  | { type: \"range\"; start: string; end: string; sheet?: string }\n  | { type: \"binary\"; op: string; left: ASTNode; right: ASTNode }\n  | { type: \"func\"; name: string; args: ASTNode[] };\n\nexport class Parser {\n  private tokens: Token[];\n  private pos = 0;\n\n  constructor(input: string) {\n    this.tokens = lex(input);\n  }\n\n  private peek(): Token {\n    return this.tokens[this.pos];\n  }\n\n  private next(): Token {\n    return this.tokens[this.pos++];\n  }\n\n  // Pratt entry point\n  public parseExpression(rbp = 0): ASTNode {\n    let t = this.next();\n    let left = this.nud(t);\n\n    while (rbp < this.lbp(this.peek())) {\n      t = this.next();\n      left = this.led(t, left);\n    }\n\n    return left;\n  }\n\n  private nud(token: Token): ASTNode {\n    switch (token.type) {\n      case TokenType.Number:\n        return { type: \"number\", value: Number.parseFloat(token.text) };\n      case TokenType.Identifier: {\n        // sheet reference? look for '!'\n        if (this.peek().type === TokenType.Bang) {\n          const sheetName = token.text;\n          this.next(); // consume '!'\n          const nextTok = this.next();\n          if (nextTok.type !== TokenType.Identifier)\n            throw new Error(`Expected cell ref after !, got ${nextTok.text}`);\n          const cellId = nextTok.text;\n          // range?\n          if (this.peek().type === TokenType.Colon) {\n            this.next(); // consume ':'\n            const endTok = this.next();\n            if (endTok.type !== TokenType.Identifier)\n              throw new Error(`Invalid range end: ${endTok.text}`);\n            return {\n              type: \"range\",\n              sheet: sheetName,\n              start: cellId,\n              end: endTok.text,\n            };\n          }\n          return { type: \"cell\", sheet: sheetName, id: cellId };\n        }\n        // function call?\n        if (this.peek().type === TokenType.LParen) {\n          const name = token.text;\n          this.next(); // consume '('\n          const args: ASTNode[] = [];\n          if (this.peek().type !== TokenType.RParen) {\n            do {\n              args.push(this.parseExpression());\n            } while (this.peek().type === TokenType.Comma && this.next());\n          }\n          this.expect(TokenType.RParen);\n          return { type: \"func\", name, args };\n        }\n        return { type: \"cell\", id: token.text };\n      }\n      case TokenType.LParen: {\n        const expr = this.parseExpression();\n        this.expect(TokenType.RParen);\n        return expr;\n      }\n      default:\n        throw new Error(`Unexpected token in nud: ${token.text}`);\n    }\n  }\n\n  private led(token: Token, left: ASTNode): ASTNode {\n    switch (token.type) {\n      case TokenType.Operator: {\n        const prec = PRECEDENCE[token.text] || 0;\n        const right = this.parseExpression(prec);\n        return { type: \"binary\", op: token.text, left, right };\n      }\n      case TokenType.Colon: {\n        const start =\n          left.type === \"cell\"\n            ? left.id\n            : (() => {\n                throw new Error(\"Invalid range start\");\n              })();\n        const sheet = left.sheet;\n        const endTok = this.next();\n        if (endTok.type !== TokenType.Identifier)\n          throw new Error(`Invalid range end: ${endTok.text}`);\n        return { type: \"range\", sheet, start, end: endTok.text };\n      }\n      default:\n        throw new Error(`Unexpected token in led: ${token.text}`);\n    }\n  }\n\n  private lbp(token: Token): number {\n    if (token.type === TokenType.Operator) return PRECEDENCE[token.text] || 0;\n    if (token.type === TokenType.Colon) return 30;\n    return 0;\n  }\n\n  private expect(type: TokenType) {\n    const tok = this.next();\n    if (tok.type !== type)\n      throw new Error(`Expected ${TokenType[type]}, got ${tok.text}`);\n  }\n}\n", "\n\nimport type { EvalResult } from \"./evaluator\";\n\nconst flatten = (arg: EvalResult): number[] =>\n  Array.isArray(arg) ? arg : [arg];\n\nexport const FUNCTIONS: Record<string, (args: EvalResult[]) => number> = {\n  SUM: (args) => args.flatMap(flatten).reduce((sum, v) => sum + v, 0),\n\n  AVERAGE: (args) => {\n    const all = args.flatMap(flatten);\n    if (all.length === 0) throw new Error(\"AVERAGE: no values\");\n    return all.reduce((sum, v) => sum + v, 0) / all.length;\n  },\n\n  MIN: (args) => {\n    const all = args.flatMap(flatten);\n    if (all.length === 0) throw new Error(\"MIN: no values\");\n    return Math.min(...all);\n  },\n\n  MAX: (args) => {\n    const all = args.flatMap(flatten);\n    if (all.length === 0) throw new Error(\"MAX: no values\");\n    return Math.max(...all);\n  },\n\n  COUNT: (args) =>\n    args.flatMap(flatten).filter((v) => typeof v === \"number\").length,\n};\n", "\n\nimport { Parser, type ASTNode } from \"./parser\";\nimport {\n  getCellIdx,\n  fromAlphaUpper,\n  fromAlphaLower,\n  toAlphaUpper,\n  toAlphaLower,\n} from \"../utils\";\nimport type { Sheets } from \"~/types\";\nimport { FUNCTIONS } from \"./builtin\";\n\n/**\n * Evaluate a formula within a named sheet context; returns single number.\n */\nexport function evaluateFormula(\n  formula: string,\n  sheetName: string,\n  sheets: Sheets,\n): number {\n  const ast = new Parser(formula).parseExpression();\n  const result = evaluate(ast, sheetName, sheets);\n  if (typeof result === \"number\") return result;\n  throw new Error(`Formula did not evaluate to a single number: ${formula}`);\n}\n\n// Internal eval can return either number or number[]\nexport type EvalResult = number | number[];\n\n/**\n * Recursively evaluate AST; ranges => number[].\n */\nfunction evaluate(\n  node: ASTNode,\n  sheetName: string,\n  sheets: Sheets,\n): EvalResult {\n  switch (node.type) {\n    case \"number\":\n      return node.value;\n\n    case \"cell\": {\n      const [c, r] = parseCellId(node.id);\n      const targetSheet = node.sheet || sheetName;\n      const sheet = sheets[targetSheet];\n      if (!sheet) throw new Error(`Sheet not found: ${targetSheet}`);\n      const idx = getCellIdx(c, r);\n      const cell = sheet[idx];\n      if (!cell)\n        throw new Error(`Cell ${node.id} not found in sheet ${targetSheet}`);\n      return evaluateFormula(cell.text, targetSheet, sheets);\n    }\n\n    case \"range\":\n      return flattenRange(node, sheetName, sheets);\n\n    case \"binary\": {\n      const L = evaluate(node.left, sheetName, sheets);\n      const R = evaluate(node.right, sheetName, sheets);\n      if (Array.isArray(L) || Array.isArray(R))\n        throw new Error(\"Cannot use + - * / on arrays\");\n      switch (node.op) {\n        case \"+\":\n          return L + R;\n        case \"-\":\n          return L - R;\n        case \"*\":\n          return L * R;\n        case \"/\":\n          return L / R;\n        default:\n          throw new Error(`Unknown operator: ${node.op}`);\n      }\n    }\n\n    case \"func\": {\n      const rawArgs = node.args.map((arg) => evaluate(arg, sheetName, sheets));\n      const name = node.name.toUpperCase();\n\n      const fn = FUNCTIONS[name];\n      if (!fn) throw new Error(`Unknown function: ${node.name}`);\n      return fn(rawArgs);\n    }\n  }\n}\n\n/** Helper: convert Range AST into an array of cell values */\nfunction flattenRange(\n  node: { start: string; end: string; sheet?: string },\n  sheetName: string,\n  sheets: Sheets,\n): number[] {\n  const targetSheet = node.sheet || sheetName;\n  const sheet = sheets[targetSheet];\n  if (!sheet) throw new Error(`Sheet not found: ${targetSheet}`);\n\n  // Detect full column (e.g., A:A)\n  const fullColumn = /^[A-Z]+$/.test(node.start) && node.start === node.end;\n  // Detect full row (e.g., b:b)\n  const fullRow = /^[a-z]+$/.test(node.start) && node.start === node.end;\n\n  let sc: number;\n  let ec: number;\n  let sr: number;\n  let er: number;\n\n  if (fullColumn) {\n    // Column remains constant, rows span all lowercase (a-z)\n    sc = fromAlphaUpper(node.start);\n    ec = sc;\n    sr = fromAlphaLower(\"a\");\n    er = fromAlphaLower(\"z\");\n  } else if (fullRow) {\n    // Row remains constant, columns span all uppercase (A-Z)\n    sr = fromAlphaLower(node.start);\n    er = sr;\n    sc = fromAlphaUpper(\"A\");\n    ec = fromAlphaUpper(\"Z\");\n  } else {\n    // Standard range A1:B2, a:b etc.\n    const [scParsed, srParsed] = parseCellId(node.start);\n    const [ecParsed, erParsed] = parseCellId(node.end);\n    sc = scParsed;\n    sr = srParsed;\n    ec = ecParsed;\n    er = erParsed;\n  }\n\n  const out: number[] = [];\n\n  for (let c = sc; c <= ec; c++) {\n    for (let r = sr; r <= er; r++) {\n      const idx = getCellIdx(c, r);\n      const cell = sheet[idx];\n      if (cell) {\n        const val = evaluateFormula(cell.text, targetSheet, sheets);\n        out.push(val);\n      }\n    }\n  }\n  return out;\n}\n\nexport function stringify(node: ASTNode): string {\n  switch (node.type) {\n    case \"number\":\n      return node.value.toString();\n    case \"cell\": {\n      const [c, r] = parseCellId(node.id);\n      return (\n        (node.sheet ? `${node.sheet}!` : \"\") + toAlphaUpper(c) + toAlphaLower(r)\n      );\n    }\n    case \"range\": {\n      const start = node.start;\n      const end = node.end;\n      return `${node.sheet ? `${node.sheet}!` : \"\"}${start}:${end}`;\n    }\n    case \"binary\":\n      return `${stringify(node.left)}${node.op}${stringify(node.right)}`;\n    case \"func\":\n      return `${node.name}(${node.args.map(stringify).join(\",\")})`;\n  }\n}\n\nexport function shiftAST(\n  node: ASTNode,\n  isRow: boolean,\n  insertAt: number,\n): ASTNode {\n  const shiftCoord = (id: string): string => {\n    const [c0, r0] = parseCellId(id);\n    const c =\n      isRow && r0 >= insertAt ? c0 : !isRow && c0 >= insertAt ? c0 + 1 : c0;\n    const r =\n      isRow && r0 >= insertAt ? r0 + 1 : !isRow && c0 >= insertAt ? r0 : r0;\n    return toAlphaUpper(c) + toAlphaLower(r);\n  };\n\n  switch (node.type) {\n    case \"cell\":\n      return {\n        ...node,\n        id: shiftCoord(node.id),\n      };\n    case \"range\":\n      return {\n        ...node,\n        start: shiftCoord(node.start),\n        end: shiftCoord(node.end),\n      };\n    case \"binary\":\n      return {\n        type: \"binary\",\n        op: node.op,\n        left: shiftAST(node.left, isRow, insertAt),\n        right: shiftAST(node.right, isRow, insertAt),\n      };\n    case \"func\":\n      return {\n        type: \"func\",\n        name: node.name,\n        args: node.args.map((arg) => shiftAST(arg, isRow, insertAt)),\n      };\n    default:\n      return node; // number\n  }\n}\n\nfunction parseCellId(id: string): [number, number] {\n  const m = id.match(/^([A-Z]+)([a-z]+)$/);\n  if (!m) throw new Error(`Invalid cell ID: ${id}`);\n  return [fromAlphaUpper(m[1]), fromAlphaLower(m[2])];\n}\n", "\n\nimport { watch, ref, watchFn } from \"jsx\";\nimport {\n  CELL_H,\n  CELL_W,\n  COLOR_CELL_DARK_HEX,\n  COLOR_CELL_LIGHT_HEX,\n  MAX_COLS,\n} from \"./config\";\nimport { initInstances } from \"./instance\";\nimport type {\n  PartialCell,\n  RegionMap,\n  Sheets,\n  TextCell,\n  TextMap,\n  TextQuad,\n} from \"./types\";\nimport { Mat4 } from \"./math\";\nimport { getCellId } from \"./utils\";\nimport {\n  parseRegion,\n  type Region,\n  regionsOverlap,\n  regionToQuad,\n} from \"./region\";\nimport { evaluateFormula } from \"./sheetFormula/evaluator\";\n\nexport const [canvasRect, setCanvasRect] = ref(new DOMRect());\nexport const [selectedColor, setSelectedColor] = ref(\"\");\nexport const [ctrlPressed, setCtrlPressed] = ref(false);\nexport const [scrollEl, setScrollEl] = ref<HTMLDivElement>();\nexport const [scroll, setScroll] = ref({ x: 0, y: 0 });\nexport const [touchSelecting, setTouchSelecting] = ref(false);\nexport const [cellText, setCellText] = ref(\"\");\n\nexport const [cellInputEl, setCellInputEl] = ref<HTMLTextAreaElement>();\nexport const [isCellInputVisible, setIsCellInputVisible] = ref(false);\nexport const [cellInputInfo, setCellInputInfo] = ref({\n  x: 0,\n  y: 0,\n  col: 0,\n  row: 0,\n  width: CELL_W,\n  height: CELL_H,\n  id: \"Aa\",\n});\n\nexport const lastFormulaRegion = {\n  start: 0,\n  end: 0,\n  text: \"\",\n};\n\nexport function getSelectedRegion() {\n  return parseRegion(\n    currentSheet().selectedRegions().values().next().value || \"0,0:0,0\",\n  );\n}\n\nexport function positionCellInput() {\n  setCellInputInfo.byRef((pos) => {\n    const region = getSelectedRegion();\n    pos.id = getCellId(region.startCol, region.startRow);\n    const quad = regionToQuad({\n      startCol: region.startCol,\n      startRow: region.startRow,\n      endCol: region.startCol,\n      endRow: region.startRow,\n    });\n    pos.col = region.startCol;\n    pos.row = region.startRow;\n    pos.x = quad[0];\n    pos.y = quad[1];\n    pos.width = quad[2];\n    pos.height = quad[3];\n  });\n}\n\nexport const [prefersDark, setPrefersDark] = ref(\n  matchMedia(\"(prefers-color-scheme: dark)\").matches,\n);\n\nexport const [defaultCellColor, setDefaultCellColor] = ref<string>();\nwatch(() => {\n  setDefaultCellColor(\n    prefersDark() ? COLOR_CELL_DARK_HEX : COLOR_CELL_LIGHT_HEX,\n  );\n});\n\nexport const [instances, setInstances] = ref(initInstances(10));\nexport const [projection, setProjection] = ref(Mat4.identity());\n\nexport function createSheet(sheetName: string) {\n  const [name, setName] = ref(sheetName);\n  const [lastSelectedRegions, setLastSelectedRegions] = ref(\n    new Set<string>([\"0,0:0,0\"]),\n  );\n  const [selectedRegions, setSelectedRegions] = ref(new Set<string>());\n  const [selectedQuads, setSelectedQuads] = ref<\n    { x: number; y: number; w: number; h: number }[]\n  >([]);\n  const [colorRegions, setColorRegions] = ref<RegionMap>({});\n  const [colorQuads, setColorQuads] = ref<Record<string, number[]>>({});\n  const [textCells, setTextCells] = ref<TextMap>({});\n  const [textQuads, setTextQuads] = ref<TextQuad[]>([]);\n  const [colOffsets, setColOffsets] = ref<Record<number, number>>({});\n  const [rowOffsets, setRowOffsets] = ref<Record<number, number>>({});\n\n  return {\n    name,\n    setName,\n    lastSelectedRegions,\n    setLastSelectedRegions,\n    selectedRegions,\n    setSelectedRegions,\n    selectedQuads,\n    setSelectedQuads,\n    colorRegions,\n    setColorRegions,\n    colorQuads,\n    setColorQuads,\n    textCells,\n    setTextCells,\n    textQuads,\n    setTextQuads,\n    colOffsets,\n    setColOffsets,\n    rowOffsets,\n    setRowOffsets,\n  };\n}\n\nexport function computeCells(cells: TextMap) {\n  const sheetRecord: Sheets = {};\n  for (const sheet of sheets()) {\n    sheetRecord[sheet.name()] = sheet.textCells();\n  }\n\n  for (const value of Object.values(cells)) {\n    try {\n      value.computed =\n        value.text[0] === \"=\"\n          ? evaluateFormula(\n              value.text.slice(1),\n              currentSheet().name(),\n              sheetRecord,\n            ).toString()\n          : value.text;\n    } catch (e) {\n      value.computed = e;\n    }\n  }\n}\n\nexport function forEachSelectedTextCell(\n  textCells: TextMap,\n  callback: (textCell: TextCell, idx: number) => void,\n) {\n  const selectedRegions = currentSheet().selectedRegions();\n  const parsedRegions: Record<string, Region> = {};\n  for (const t in textCells) {\n    const idx = +t;\n    const col = idx % MAX_COLS;\n    const row = Math.floor(idx / MAX_COLS);\n    const region: Region = {\n      startCol: col,\n      startRow: row,\n      endCol: col,\n      endRow: row,\n    };\n\n    for (const s of selectedRegions) {\n      if (!parsedRegions[s]) parsedRegions[s] = parseRegion(s);\n      if (regionsOverlap(region, parsedRegions[s]))\n        callback(textCells[idx], idx);\n    }\n  }\n}\n\nexport type Sheet = ReturnType<typeof createSheet>;\n\nlet lastSheetIdx = 0;\nexport const [sheets, setSheets] = ref<Sheet[]>([\n  createSheet(`sheet${lastSheetIdx++}`),\n]);\nexport const [currentSheet, setCurrentSheet] = ref(sheets()[0]);\n\nwatchFn(\n  () => currentSheet().name(),\n  () => {\n    location.hash = `#${encodeURIComponent(currentSheet().name())}`;\n  },\n);\n\nexport function addSheet() {\n  setSheets.byRef((sheets) => {\n    const idx = sheets.length;\n    sheets.push(createSheet(`sheet${lastSheetIdx++}`));\n    setCurrentSheet(sheets[idx]);\n  });\n}\n\nexport function delSheet(idx: number) {\n  if (sheets()[idx] === currentSheet()) {\n    setCurrentSheet(idx === 0 ? sheets()[1] : sheets()[idx - 1]);\n  }\n\n  setSheets.byRef((sheets) => sheets.splice(idx, 1));\n}\n\nexport function setSheet(idx: number) {\n  setCurrentSheet(sheets()[idx]);\n}\n\nwatch(() => {\n  document.documentElement.classList[prefersDark() ? \"add\" : \"remove\"](\"dark\");\n});\n\nexport function getEffectiveCellWidth(index: number): number {\n  return CELL_W + (currentSheet().colOffsets()[index] ?? 0);\n}\n\nexport function getEffectiveCellHeight(index: number): number {\n  return CELL_H + (currentSheet().rowOffsets()[index] ?? 0);\n}\n\nexport function computeFirstVisible(\n  scroll: number,\n  offsets: Record<number, number>,\n  cellSize: number,\n  getEffectiveSize: (index: number) => number,\n): PartialCell {\n  const nonDefault = Object.keys(offsets)\n    .map(Number)\n    .sort((a, b) => a - b);\n\n  let i = 0;\n  let cum = 0;\n\n  for (const idx of nonDefault) {\n    if (idx > i) {\n      const gapCount = idx - i;\n      const gapSize = gapCount * cellSize;\n      if (cum + gapSize >= scroll) {\n        const defaultIndexOffset = Math.floor((scroll - cum) / cellSize);\n        return {\n          index: i + defaultIndexOffset,\n          remainder: (scroll - cum) % cellSize,\n        };\n      }\n      cum += gapSize;\n      i = idx;\n    }\n    const effective = getEffectiveSize(idx);\n    if (cum + effective >= scroll) {\n      return { index: idx, remainder: scroll - cum };\n    }\n    cum += effective;\n    i = idx + 1;\n  }\n\n  const defaultCells = Math.floor((scroll - cum) / cellSize);\n  return { index: i + defaultCells, remainder: (scroll - cum) % cellSize };\n}\n\nexport function computeFirstVisibleColumn(scrollX: number): PartialCell {\n  return computeFirstVisible(\n    scrollX,\n    currentSheet().colOffsets(),\n    CELL_W,\n    getEffectiveCellWidth,\n  );\n}\n\nexport function computeFirstVisibleRow(scrollY: number): PartialCell {\n  return computeFirstVisible(\n    scrollY,\n    currentSheet().rowOffsets(),\n    CELL_H,\n    getEffectiveCellHeight,\n  );\n}\n", "\n\nfunction createCanvas2d() {\n  const canvas = document.createElement(\"canvas\");\n  canvas.style.background = \"transparent\";\n  const ctx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  if (!ctx) throw new Error(\"Failed to create canvas 2d context\");\n  return [canvas, ctx] as const;\n}\n\nlet [imgCanvas, imgCtx] = createCanvas2d();\n\nfunction resizeCtx(\n  canvas: HTMLCanvasElement,\n  w: number,\n  h: number,\n  ctx: CanvasRenderingContext2D,\n) {\n  if (canvas.width === w && canvas.height === h) return ctx;\n\n  canvas.width = w;\n  canvas.height = h;\n\n  const newCtx = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\n  if (!newCtx) throw new Error(\"2D context not available after resizing\");\n  newCtx.font = ctx.font;\n  newCtx.fillStyle = ctx.fillStyle;\n  newCtx.textAlign = ctx.textAlign;\n  newCtx.textBaseline = ctx.textBaseline;\n\n  return newCtx;\n}\n\ninterface TextStyle {\n  font?: string;\n  fillStyle?: string;\n  textAlign?: CanvasTextAlign;\n  textBaseline?: CanvasTextBaseline;\n  backgroundColor?: string;\n}\n\nexport function renderTextToImage(\n  text: string,\n  style: TextStyle = {},\n): Promise<HTMLImageElement> {\n  const font = style.font || \"16px sans-serif\";\n  const fillStyle = style.fillStyle || \"white\";\n  const textAlign: CanvasTextAlign = style.textAlign || \"start\";\n  const textBaseline: CanvasTextBaseline = style.textBaseline || \"top\";\n  const backgroundColor = style.backgroundColor;\n\n  imgCtx.font = font;\n  const padding = 10;\n  const fontSizeMatch = font.match(/(\\d+)px/);\n  const fontSize = fontSizeMatch ? Number.parseInt(fontSizeMatch[1], 10) : 16;\n  const lineHeight = fontSize * 1.2;\n\n  const lines = text.split(\"\\n\");\n  const textWidth =\n    Math.max(...lines.map((line) => imgCtx.measureText(line).width)) +\n    padding * 2;\n  const textHeight = lines.length * lineHeight;\n\n  imgCtx = resizeCtx(imgCanvas, textWidth, textHeight + padding * 2, imgCtx);\n  imgCtx.clearRect(0, 0, imgCanvas.width, imgCanvas.height);\n\n  if (backgroundColor) {\n    imgCtx.fillStyle = backgroundColor;\n    imgCtx.fillRect(0, 0, imgCanvas.width, imgCanvas.height);\n  }\n\n  imgCtx.font = font;\n  imgCtx.fillStyle = fillStyle;\n  imgCtx.textAlign = textAlign;\n  imgCtx.textBaseline = \"top\"; // Use top internally for stacking lines\n\n  let x: number;\n  if (textAlign === \"center\") {\n    x = imgCanvas.width / 2;\n  } else if (textAlign === \"right\" || textAlign === \"end\") {\n    x = imgCanvas.width - padding;\n  } else {\n    x = padding;\n  }\n\n  // Adjust Y according to requested textBaseline\n  let yOffset: number;\n  switch (textBaseline) {\n    case \"top\":\n    case \"hanging\":\n      yOffset = padding;\n      break;\n    case \"middle\":\n      yOffset = (imgCanvas.height - textHeight) / 2;\n      break;\n    case \"bottom\":\n    case \"ideographic\":\n      yOffset = imgCanvas.height - textHeight - padding;\n      break;\n    default:\n      yOffset = padding;\n      break;\n  }\n\n  lines.forEach((line, i) => {\n    const y = yOffset + i * lineHeight;\n    imgCtx.fillText(line, x, y);\n  });\n\n  const image = new Image();\n\n  return new Promise((res) => {\n    image.onload = () => {\n      res(image);\n      imgCtx.clearRect(0, 0, imgCanvas.width, imgCanvas.height);\n    };\n    image.src = imgCanvas.toDataURL(\"image/png\");\n  });\n}\n\nexport function loadTextureAtlas(gl: WebGL2RenderingContext) {\n  const texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n\n  gl.texImage2D(\n    gl.TEXTURE_2D,\n    0,\n    gl.RGBA,\n    gl.RGBA,\n    gl.UNSIGNED_BYTE,\n    atlasCanvas,\n  );\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n  return texture;\n}\n\nconst [atlasCanvas, atlasCtx] = createCanvas2d();\n\nexport type Atlas = {\n  uvCoords: Record<string, Float32Array>;\n  width: number;\n  height: number;\n};\n\nexport type TileMap = Record<string, HTMLImageElement>;\ntype Node = { x: number; y: number; width: number };\ntype Placement = { x: number; y: number; width: number; height: number };\n\nfunction findPositionForNode(\n  skyline: Node[],\n  nodeIndex: number,\n  imgWidth: number,\n  imgHeight: number,\n): { x: number; y: number } | null {\n  const node = skyline[nodeIndex];\n  const x = node.x;\n  const y = node.y;\n\n  if (x + imgWidth > atlasCanvas.width) {\n    return null;\n  }\n\n  let widthLeft = imgWidth;\n  let i = nodeIndex;\n  let maxY = y;\n\n  while (widthLeft > 0) {\n    if (i >= skyline.length) {\n      return null;\n    }\n    maxY = Math.max(maxY, skyline[i].y);\n    widthLeft -= skyline[i].width;\n    i++;\n  }\n\n  let maxHeight = y;\n  for (let k = nodeIndex; k < i; k++) {\n    maxHeight = Math.max(maxHeight, skyline[k].y);\n  }\n\n  if (maxHeight + imgHeight > maxY + imgHeight) {\n    return null;\n  }\n\n  return { x, y: maxY };\n}\n\nfunction addSkylineLevel(\n  skyline: Node[],\n  nodeIndex: number,\n  x: number,\n  y: number,\n  imgWidth: number,\n  imgHeight: number,\n) {\n  const newNode: Node = { x, y: y + imgHeight, width: imgWidth };\n  skyline.splice(nodeIndex, 0, newNode);\n\n  for (let i = nodeIndex + 1; i < skyline.length; i++) {\n    const node = skyline[i];\n    const prev = skyline[i - 1];\n    if (node.x < prev.x + prev.width) {\n      const overlap = prev.x + prev.width - node.x;\n      skyline[i] = {\n        x: node.x + overlap,\n        y: node.y,\n        width: node.width - overlap,\n      };\n      if (skyline[i].width <= 0) {\n        skyline.splice(i, 1);\n        i--;\n      } else {\n        break;\n      }\n    } else {\n      break;\n    }\n  }\n\n  for (let i = 0; i < skyline.length - 1; i++) {\n    if (skyline[i].y === skyline[i + 1].y) {\n      skyline[i].width += skyline[i + 1].width;\n      skyline.splice(i + 1, 1);\n      i--;\n    }\n  }\n}\n\nfunction updateAtlasData(\n  atlas: Atlas,\n  placements: Placement[],\n  keys: string[],\n  images: HTMLImageElement[],\n) {\n  const uvCoords = new Float32Array(images.length * 4);\n\n  for (let i = 0; i < images.length; i++) {\n    const p = placements[i];\n    const u0 = p.x / atlasCanvas.width;\n    const v0 = p.y / atlasCanvas.height;\n    const u1 = (p.x + p.width) / atlasCanvas.width;\n    const v1 = (p.y + p.height) / atlasCanvas.height;\n    uvCoords.set([u0, v0, u1, v1], i * 4);\n    atlas.uvCoords[keys[i]] = uvCoords.subarray(i * 4, i * 4 + 4);\n  }\n}\n\nexport function createTextureAtlas(tiles: TileMap): Atlas {\n  const images = Object.values(tiles);\n\n  const totalArea = images.reduce(\n    (sum, img) => sum + img.width * img.height,\n    0,\n  );\n  const maxImageWidth = Math.max(...images.map((img) => img.width));\n  const estimatedWidth = Math.max(\n    maxImageWidth,\n    Math.ceil(Math.sqrt(totalArea)),\n  );\n  atlasCanvas.width = estimatedWidth;\n\n  const skyline: Node[] = [{ x: 0, y: 0, width: atlasCanvas.width }];\n  const placements: Placement[] = new Array(images.length);\n  let atlasHeight = 0;\n\n  const indices = images.map((_, i) => i);\n  indices.sort((a, b) => images[b].height - images[a].height);\n\n  for (const i of indices) {\n    const img = images[i];\n    let bestY = Number.POSITIVE_INFINITY;\n    let bestX = 0;\n    let bestNodeIndex = -1;\n    let bestPos: { x: number; y: number } | null = null;\n\n    for (let j = 0; j < skyline.length; j++) {\n      const pos = findPositionForNode(skyline, j, img.width, img.height);\n      if (pos !== null) {\n        if (\n          pos.y < bestY ||\n          (pos.y === bestY &&\n            skyline[j].width <\n              (skyline[bestNodeIndex]?.width ?? Number.POSITIVE_INFINITY))\n        ) {\n          bestY = pos.y;\n          bestX = pos.x;\n          bestNodeIndex = j;\n          bestPos = pos;\n        }\n      }\n    }\n\n    if (bestPos === null) {\n      bestX = 0;\n      bestY = atlasHeight;\n      bestNodeIndex = skyline.length;\n      bestPos = { x: bestX, y: bestY };\n    }\n\n    placements[i] = {\n      x: bestX,\n      y: bestY,\n      width: img.width,\n      height: img.height,\n    };\n    atlasHeight = Math.max(atlasHeight, bestY + img.height);\n    addSkylineLevel(\n      skyline,\n      bestNodeIndex,\n      bestX,\n      bestY,\n      img.width,\n      img.height,\n    );\n  }\n\n  atlasCanvas.height = atlasHeight;\n\n  atlasCtx.clearRect(0, 0, atlasCanvas.width, atlasCanvas.height);\n  for (let i = 0; i < images.length; i++) {\n    const p = placements[i];\n    atlasCtx.drawImage(images[i], p.x, p.y, p.width, p.height);\n  }\n\n  const atlas: Atlas = {\n    uvCoords: {},\n    width: atlasCanvas.width,\n    height: atlasCanvas.height,\n  };\n\n  updateAtlasData(atlas, placements, Object.keys(tiles), images);\n  return atlas;\n}\n", "\n\nimport {\n  NUM_INST_ATTRS,\n  INST_ATTR_SIZE,\n  INST_STRIDE,\n  VERT_STRIDE,\n} from \"./instance\";\nimport { aligned2 } from \"./utils\";\nimport type { KeysWithValue } from \"./types\";\nimport { loadTextureAtlas } from \"./texture\";\n\nexport function compileShader(\n  gl: WebGLRenderingContext,\n  source: string,\n  type: GLenum,\n): WebGLShader | Error {\n  const shader = gl.createShader(type);\n  if (shader == null) {\n    return new Error(\n      `Could not create shader\\n\\ttype: ${type}\\n\\tsource: ${source}`,\n    );\n  }\n\n  gl.shaderSource(shader, source);\n  gl.compileShader(shader);\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    const compileLog = gl.getShaderInfoLog(shader);\n    gl.deleteShader(shader);\n    return new Error(\n      `[${glEnumToString(type)}] Shader compilation failed: ${compileLog}`,\n    );\n  }\n\n  return shader;\n}\n\nexport function initWebGL(\n  canvas: HTMLCanvasElement,\n  vsSource: string,\n  fsSource: string,\n) {\n  const gl = canvas.getContext(\"webgl2\") as WebGL2RenderingContext;\n  if (!gl) return new Error(\"WebGL not supported.\");\n\n  gl.enable(gl.BLEND);\n  gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n  gl.enable(gl.DEPTH_TEST);\n  gl.clearColor(0.0, 0.0, 0.0, 0.0);\n\n  const vert = compileShader(gl, vsSource, gl.VERTEX_SHADER);\n  if (vert instanceof Error) return vert;\n  const frag = compileShader(gl, fsSource, gl.FRAGMENT_SHADER);\n  if (frag instanceof Error) return frag;\n\n  const program = gl.createProgram();\n  gl.attachShader(program, vert);\n  gl.attachShader(program, frag);\n  gl.linkProgram(program);\n\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    return new Error(`Program link failed: ${gl.getProgramInfoLog(program)}`);\n  }\n\n  gl.useProgram(program);\n\n  return { gl, program };\n}\n\ntype ShaderData = {\n  drawMode: KeysWithValue<WebGL2RenderingContext, GLenum>;\n  vertex: Float32Array;\n  index: Uint8Array;\n  instance: Float32Array;\n};\n\nexport type Shader = {\n  id: WebGLVertexArrayObject;\n  drawMode: GLenum;\n  instanceData: Float32Array;\n  numInstances: number;\n  numIndices: number;\n};\n\ntype ShaderInputs = {\n  position: GLint;\n  color: GLint;\n  model: GLint;\n  projection: WebGLUniformLocation;\n  uv: GLint;\n  hasUV: GLint;\n};\n\nfunction mapShader(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram,\n): ShaderInputs | Error {\n  const projection = gl.getUniformLocation(program, \"projection\");\n  if (!projection) return new Error(\"Missing shader projection\");\n\n  return {\n    projection,\n    position: gl.getAttribLocation(program, \"position\"),\n    model: gl.getAttribLocation(program, \"instModel\"),\n    color: gl.getAttribLocation(program, \"instColor\"),\n    hasUV: gl.getAttribLocation(program, \"instHasUV\"),\n    uv: gl.getAttribLocation(program, \"instUV\"),\n  };\n}\n\nexport type ShaderSystem = {\n  gl: WebGL2RenderingContext;\n  inputs: ShaderInputs;\n  shader: Shader;\n  staticBuf: WebGLBuffer;\n  indexBuf: WebGLBuffer;\n  dynamicBuf: WebGLBuffer;\n  dynamicCap: number;\n  shouldRedraw: boolean;\n\n  requestRedraw(): void;\n  draw(): void;\n  render(): void;\n  initDynamicBuffer(this: ShaderSystem): void;\n  resizeDynamicBuffer(newSize: number, usage: GLenum): WebGLBuffer;\n  resizeInstances(shader: Shader, instances: Float32Array): void;\n};\n\nexport async function initShaderSystem(\n  canvas: HTMLCanvasElement,\n  vert: string,\n  frag: string,\n  data: ShaderData,\n): Promise<ShaderSystem | Error> {\n  const result = initWebGL(canvas, vert, frag);\n  if (result instanceof Error) return result;\n  loadTextureAtlas(result.gl);\n\n  const inputs = mapShader(result.gl, result.program);\n  if (inputs instanceof Error) return inputs;\n  const gl = result.gl;\n  const staticBuf = gl.createBuffer();\n  const indexBuf = gl.createBuffer();\n  const dynamicBuf = gl.createBuffer();\n\n  let staticBufSize = 0;\n  let indexBufSize = 0;\n\n  staticBufSize = aligned2(staticBufSize + data.vertex.byteLength, 16);\n  indexBufSize = aligned2(indexBufSize + data.index.byteLength, 16);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, staticBuf);\n  gl.bufferData(gl.ARRAY_BUFFER, staticBufSize, gl.STATIC_DRAW);\n\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuf);\n  gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indexBufSize, gl.STATIC_DRAW);\n\n  const shader: Shader = {\n    id: gl.createVertexArray(),\n    drawMode: gl[data.drawMode],\n    instanceData: data.instance,\n    numInstances: data.instance.length / NUM_INST_ATTRS,\n    numIndices: data.index.length,\n  };\n\n  gl.bindVertexArray(shader.id);\n\n  gl.bindBuffer(gl.ARRAY_BUFFER, staticBuf);\n  gl.bufferSubData(gl.ARRAY_BUFFER, 0, data.vertex);\n\n  gl.enableVertexAttribArray(inputs.position);\n  gl.vertexAttribPointer(inputs.position, 2, gl.FLOAT, false, VERT_STRIDE, 0);\n\n  gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuf);\n  gl.bufferSubData(gl.ELEMENT_ARRAY_BUFFER, 0, data.index);\n\n  const self: ShaderSystem = {\n    gl: result.gl,\n    inputs,\n    shader,\n    staticBuf,\n    indexBuf,\n    dynamicBuf,\n    dynamicCap: INST_STRIDE * 10000,\n    shouldRedraw: false,\n    initDynamicBuffer,\n    resizeDynamicBuffer,\n    resizeInstances,\n    requestRedraw,\n    draw,\n    render,\n  };\n\n  self.initDynamicBuffer();\n\n  return self;\n}\n\nfunction resizeDynamicBuffer(\n  this: ShaderSystem,\n  newSize: number,\n  usage: GLenum,\n) {\n  const buffer = this.dynamicBuf;\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n  const newBuffer = this.gl.createBuffer();\n  if (!newBuffer) throw new Error(\"Failed to create a new buffer\");\n\n  console.log(\"RESIZE FROM %d TO %d\", this.dynamicCap, newSize);\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, newBuffer);\n  this.gl.bufferData(this.gl.ARRAY_BUFFER, newSize, usage);\n  this.gl.bufferSubData(this.gl.ARRAY_BUFFER, 0, this.shader.instanceData);\n  this.gl.deleteBuffer(buffer);\n  this.dynamicBuf = newBuffer;\n  this.dynamicCap = newSize;\n  this.initDynamicBuffer();\n\n  return newBuffer;\n}\n\nfunction initDynamicBuffer(this: ShaderSystem) {\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.dynamicBuf);\n  this.gl.bufferData(\n    this.gl.ARRAY_BUFFER,\n    this.dynamicCap,\n    this.gl.DYNAMIC_DRAW,\n  );\n  this.gl.bufferSubData(this.gl.ARRAY_BUFFER, 0, this.shader.instanceData);\n\n  for (let i = 0; i < 4; i++) {\n    const loc = this.inputs.model + i;\n    this.gl.enableVertexAttribArray(loc);\n    this.gl.vertexAttribPointer(\n      loc,\n      4,\n      this.gl.FLOAT,\n      false,\n      INST_STRIDE,\n      i * 16,\n    );\n    this.gl.vertexAttribDivisor(loc, 1);\n  }\n\n  this.gl.enableVertexAttribArray(this.inputs.color);\n  this.gl.vertexAttribPointer(\n    this.inputs.color,\n    4,\n    this.gl.FLOAT,\n    false,\n    INST_STRIDE,\n    16 * INST_ATTR_SIZE,\n  );\n  this.gl.vertexAttribDivisor(this.inputs.color, 1);\n\n  this.gl.enableVertexAttribArray(this.inputs.uv);\n  this.gl.vertexAttribPointer(\n    this.inputs.uv,\n    4,\n    this.gl.FLOAT,\n    false,\n    INST_STRIDE,\n    20 * INST_ATTR_SIZE,\n  );\n  this.gl.vertexAttribDivisor(this.inputs.uv, 1);\n\n  this.gl.enableVertexAttribArray(this.inputs.hasUV);\n  this.gl.vertexAttribPointer(\n    this.inputs.hasUV,\n    1,\n    this.gl.FLOAT,\n    false,\n    INST_STRIDE,\n    24 * INST_ATTR_SIZE,\n  );\n  this.gl.vertexAttribDivisor(this.inputs.hasUV, 1);\n}\n\nfunction resizeInstances(\n  this: ShaderSystem,\n  shader: Shader,\n  instances: Float32Array,\n) {\n  shader.instanceData = instances;\n  if (shader.instanceData.byteLength >= this.dynamicCap) {\n    const newSize = shader.instanceData.byteLength * 2;\n    this.resizeDynamicBuffer(newSize, this.gl.DYNAMIC_DRAW);\n  }\n\n  this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.dynamicBuf);\n  this.gl.bufferSubData(this.gl.ARRAY_BUFFER, 0, shader.instanceData);\n}\n\nfunction requestRedraw(this: ShaderSystem) {\n  this.shouldRedraw = true;\n}\n\nfunction draw(this: ShaderSystem) {\n  if (!this.gl) return;\n\n  this.gl.clear(this.gl.COLOR_BUFFER_BIT | this.gl.DEPTH_BUFFER_BIT);\n\n  this.gl.bindVertexArray(this.shader.id);\n  this.gl.drawElementsInstanced(\n    this.shader.drawMode,\n    this.shader.numIndices,\n    this.gl.UNSIGNED_BYTE,\n    0,\n    this.shader.instanceData.length / NUM_INST_ATTRS,\n  );\n}\n\nfunction render(this: ShaderSystem) {\n  if (this.shouldRedraw) {\n    this.draw();\n    this.shouldRedraw = false;\n  }\n  requestAnimationFrame(this.render.bind(this));\n}\n\nfunction glEnumToString(glEnum: GLenum) {\n  switch (glEnum) {\n    case WebGLRenderingContext.VERTEX_SHADER:\n      return \"VERTEX_SHADER\";\n    case WebGLRenderingContext.FRAGMENT_SHADER:\n      return \"FRAGMENT_SHADER\";\n    case WebGLRenderingContext.TEXTURE_2D:\n      return \"TEXTURE_2D\";\n    case WebGLRenderingContext.TEXTURE_CUBE_MAP:\n      return \"TEXTURE_CUBE_MAP\";\n    case WebGLRenderingContext.COLOR_BUFFER_BIT:\n      return \"COLOR_BUFFER_BIT\";\n    case WebGLRenderingContext.DEPTH_BUFFER_BIT:\n      return \"DEPTH_BUFFER_BIT\";\n    case WebGLRenderingContext.STENCIL_BUFFER_BIT:\n      return \"STENCIL_BUFFER_BIT\";\n    case WebGLRenderingContext.ARRAY_BUFFER:\n      return \"ARRAY_BUFFER\";\n    case WebGLRenderingContext.ELEMENT_ARRAY_BUFFER:\n      return \"ELEMENT_ARRAY_BUFFER\";\n    case WebGLRenderingContext.STREAM_DRAW:\n      return \"STREAM_DRAW\";\n    case WebGLRenderingContext.STATIC_DRAW:\n      return \"STATIC_DRAW\";\n    case WebGLRenderingContext.DYNAMIC_DRAW:\n      return \"DYNAMIC_DRAW\";\n    case WebGLRenderingContext.FLOAT:\n      return \"FLOAT\";\n    case WebGLRenderingContext.UNSIGNED_BYTE:\n      return \"UNSIGNED_BYTE\";\n    case WebGLRenderingContext.UNSIGNED_SHORT:\n      return \"UNSIGNED_SHORT\";\n    case WebGLRenderingContext.UNSIGNED_INT:\n      return \"UNSIGNED_INT\";\n    case WebGLRenderingContext.DEPTH_TEST:\n      return \"DEPTH_TEST\";\n    case WebGLRenderingContext.LEQUAL:\n      return \"LEQUAL\";\n    case WebGLRenderingContext.LESS:\n      return \"LESS\";\n    case WebGLRenderingContext.EQUAL:\n      return \"EQUAL\";\n    case WebGLRenderingContext.GREATER:\n      return \"GREATER\";\n    case WebGLRenderingContext.NOTEQUAL:\n      return \"NOTEQUAL\";\n    case WebGLRenderingContext.GEQUAL:\n      return \"GEQUAL\";\n    case WebGLRenderingContext.ALWAYS:\n      return \"ALWAYS\";\n    case WebGLRenderingContext.NEVER:\n      return \"NEVER\";\n    default:\n      return `Unknown GLenum (0x${glEnum.toString(16)})`;\n  }\n}\n", "import { template as _jsx$template } from \"jsx\";\n\nconst _jsx$templ0 = _jsx$template(`<canvas class=\"w-full h-full\"></canvas>`);\n\nimport { watch, watchOnly } from \"jsx\";\nimport {\n  setCanvasRect,\n  instances,\n  prefersDark,\n  projection,\n  canvasRect,\n  scroll,\n  setProjection,\n} from \"./state\";\nimport { initShaderSystem, type ShaderSystem, type Shader } from \"./gl\";\nimport { Mat4 } from \"./math\";\nimport { QUAD_MESH } from \"./instance\";\n\nlet canvas!: HTMLCanvasElement;\nlet shaderSys!: ShaderSystem;\nlet shader!: Shader;\n\nexport const getGL = () => shaderSys.gl;\n\nexport function resizeInstances(data: Float32Array) {\n  if (!shader || !shaderSys) return;\n  shaderSys.resizeInstances(shader, data);\n}\n\nexport default function Canvas() {\n  queueMicrotask(async () => {\n    const observer = new ResizeObserver(() =>\n      setCanvasRect(canvas.getBoundingClientRect()),\n    );\n\n    observer.observe(canvas);\n\n    // jsx: string import\n    const vert = `#version 300 es\n\nin vec2 position;\n\nin mat4 instModel;\nin vec4 instColor;\nin vec4 instUV;\nin float instHasUV;\n\nuniform mat4 projection;\n\nout vec4 vertColor;\nout vec2 fragUV;\nout float hasUV;\n\nvoid main() {\n  vertColor = instColor;\n  fragUV = mix(instUV.xy, instUV.zw, position);\n  hasUV = instHasUV;\n  gl_Position = projection * instModel * vec4(position, 0.0, 1.0);\n}\n`;\n    // jsx: string import\n    const frag = `#version 300 es\nprecision mediump float;\n\nin vec4 vertColor;\nin vec2 fragUV;\nin float hasUV;\n\nuniform sampler2D sampler;\n\nout vec4 fragColor;\n\nvoid main() {\n  float useTexture = hasUV * step(0.0, fragUV.x) * step(0.0, fragUV.y);\n  fragColor = mix(vertColor, texture(sampler, fragUV), useTexture);\n}\n`;\n\n    shaderSys = (await initShaderSystem(canvas, vert, frag, {\n      drawMode: \"TRIANGLE_STRIP\",\n      instance: instances().data,\n      vertex: QUAD_MESH.vertexData,\n      index: QUAD_MESH.indexData,\n    })) as ShaderSystem;\n    if (shaderSys instanceof Error) return console.error(shaderSys);\n    shader = shaderSys.shader;\n\n    updateProjection();\n    shaderSys.render();\n  });\n\n  watch(() => {\n    if (prefersDark()) {\n      shaderSys?.gl.clearColor(0, 0, 0, 0);\n    } else {\n      shaderSys?.gl.clearColor(0, 0, 0, 0);\n    }\n  });\n\n  watchOnly([prefersDark, projection, instances], () => {\n    shaderSys?.requestRedraw();\n  });\n\n  watchOnly([canvasRect, scroll], () => updateProjection());\n\n  function updateProjection() {\n    const { width, height } = canvasRect();\n    if (!shaderSys || !width || !height) return;\n\n    shaderSys.gl.clear(shaderSys.gl.COLOR_BUFFER_BIT);\n\n    canvas.width = width;\n    canvas.height = height;\n    shaderSys.gl.viewport(0, 0, width, height);\n\n    setProjection.byRef((proj) => {\n      Mat4.ortho(0, width, height, 0, -1, 1000, proj);\n      const s = scroll();\n      if (s.x || s.y) {\n        Mat4.translatePx(proj, -s.x, -s.y, 0);\n      }\n      shaderSys.gl.uniformMatrix4fv(shaderSys.inputs.projection, false, proj);\n    });\n  }\n\n  return (() => {\nconst _jsx$el0 = _jsx$templ0(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\n\ncanvas = _jsx$el0;\n\nreturn _jsx$el0;\n})();\n}\n", "\n\nimport type { Color } from \"./types\";\nimport {\n  COLOR_CELL_DARK,\n  COLOR_CELL_LIGHT,\n  COLOR_GRID_LINE_DARK,\n  COLOR_GRID_LINE_LIGHT,\n  COLOR_SELECTED_CELL_DARK,\n  COLOR_SELECTED_CELL_LIGHT,\n  GRID_LINE_SIZE,\n  CELL_H,\n  CELL_W,\n} from \"./config\";\nimport { aligned, totalOffsetsRange, hexToRgba } from \"./utils\";\nimport {\n  canvasRect,\n  computeFirstVisibleColumn,\n  computeFirstVisibleRow,\n  prefersDark,\n  scroll,\n  setInstances,\n  currentSheet,\n} from \"./state\";\nimport type { Instances } from \"./instance\";\nimport { Mat4 } from \"./math\";\nimport { watchFn } from \"jsx\";\nimport { resizeInstances } from \"./Canvas\";\nimport { parseRegion, regionsOverlap } from \"./region\";\n\nwatchFn(\n  () => [\n    canvasRect(),\n    currentSheet().colorQuads(),\n    currentSheet().colOffsets(),\n    currentSheet().rowOffsets(),\n    scroll(),\n    prefersDark(),\n  ],\n  () => {\n    const { width, height } = canvasRect();\n    const w = width + CELL_W;\n    const h = height + CELL_H;\n\n    const cols = Math.ceil(w / CELL_W);\n    const rows = Math.ceil(h / CELL_H);\n\n    let lineColor = COLOR_GRID_LINE_DARK;\n    let cellColor = COLOR_CELL_DARK;\n    if (!prefersDark()) {\n      lineColor = COLOR_GRID_LINE_LIGHT;\n      cellColor = COLOR_CELL_LIGHT;\n    }\n\n    const offsetX = aligned(scroll().x, CELL_W);\n    const offsetY = aligned(scroll().y, CELL_H);\n\n    // Only render instances in view\n    const firstCol = computeFirstVisibleColumn(scroll().x);\n    const firstRow = computeFirstVisibleRow(scroll().y);\n    const visibleRange = {\n      startCol: firstCol.index,\n      startRow: firstRow.index,\n      endCol: firstCol.index + cols,\n      endRow: firstRow.index + rows,\n    };\n\n    const filterVisibleRegions = (\n      regions: Set<string>,\n      quads: number[],\n    ): [number[], number] => {\n      let i = 0;\n      let numQuads = 0;\n      const visibleRegions: number[] = [];\n      for (const r of regions) {\n        const range = parseRegion(r);\n        if (regionsOverlap(range, visibleRange)) {\n          visibleRegions.push(...quads.slice(i, i + 4));\n          numQuads++;\n        }\n        i += 4;\n      }\n      return [visibleRegions, numQuads];\n    };\n\n    const colors: Record<string, number[]> = {};\n    const numColors: number[] = [];\n    for (const color in currentSheet().colorQuads()) {\n      const quads = currentSheet().colorQuads()[color];\n      const [regions, numRegions] = filterVisibleRegions(\n        currentSheet().colorRegions()[color],\n        quads,\n      );\n      if (numRegions === 0) continue;\n      colors[color] = regions;\n      numColors.push(numRegions);\n    }\n\n    setInstances.byRef((inst) => {\n      const numCells = numColors.reduce((t, n) => t + n, 0);\n      inst.resize(rows + cols + numCells);\n\n      let instOffset = 0;\n      for (let i = 0; i < cols; i++) {\n        const colIdx = firstCol.index + i - 1;\n        const offset = totalOffsetsRange(\n          firstCol.index,\n          colIdx,\n          currentSheet().colOffsets(),\n        );\n        const model = inst.modelAt(i);\n        Mat4.scaleIdentity(model, GRID_LINE_SIZE, h, 1);\n        Mat4.translateTo(\n          model,\n          i * CELL_W + scroll().x + offset - firstCol.remainder,\n          offsetY,\n          10,\n        );\n        inst.colorAt(i).set(lineColor);\n        inst.hasUVAt(i)[0] = 0;\n      }\n      instOffset += cols;\n\n      for (let i = 0; i < rows; i++) {\n        const rowIdx = firstRow.index + i - 1;\n        const offset = totalOffsetsRange(\n          firstRow.index,\n          rowIdx,\n          currentSheet().rowOffsets(),\n        );\n        const model = inst.modelAt(i + instOffset);\n        Mat4.scaleIdentity(model, w, GRID_LINE_SIZE, 1);\n        Mat4.translateTo(\n          model,\n          offsetX,\n          i * CELL_H + scroll().y + offset - firstRow.remainder,\n          10,\n        );\n        inst.colorAt(i + cols).set(lineColor);\n        inst.hasUVAt(i + cols)[0] = 0;\n      }\n      instOffset += rows;\n\n      let n = 0;\n      for (const color in colors) {\n        const quads = colors[color];\n        drawRegions(inst, quads, instOffset, hexToRgba(color), n / 10);\n        instOffset += numColors[n++];\n      }\n\n      resizeInstances(inst.data);\n    });\n  },\n);\n\nexport function drawRegions(\n  inst: Instances,\n  cellMap: number[],\n  offset: number,\n  cellColor?: Color,\n  z = 0,\n) {\n  let i = offset;\n  for (let n = 0; n < cellMap.length; n += 4) {\n    const [x, y, w, h] = cellMap.slice(n, n + 4);\n    const color =\n      cellColor ??\n      (prefersDark() ? COLOR_SELECTED_CELL_DARK : COLOR_SELECTED_CELL_LIGHT);\n    inst.hasUVAt(i)[0] = 0;\n    inst.colorAt(i).set(color);\n\n    const model = inst.modelAt(i);\n    Mat4.scaleIdentity(model, w, h, 1);\n    Mat4.translateTo(model, x, y, z);\n    i++;\n  }\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\nimport { trackClass as _jsx$trackClass } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { trackCssProperty as _jsx$trackCssProperty } from \"jsx\";\nimport { addGlobalEvent as _jsx$addGlobalEvent } from \"jsx\";\nimport { createGlobalEvent as _jsx$createGlobalEvent } from \"jsx\";\n\nconst _jsx$templ5 = _jsx$template(`<dialog class=\"grid-rows-[auto_1fr] absolute border-2 border-slate-900 dark:border-emerald-300 rounded-md whitespace-break-spaces max-w-3/4 max-h-3/4 left-0 top-0 z-100 bg-zinc-100/75 text-zinc-900 dark:bg-zinc-900/75 dark:text-zinc-100 font-mono\"><header class=\"flex justify-between p-2 bg-slate-900 text-zinc-50 dark:bg-emerald-300 dark:text-zinc-900\"><h1 class=\"text-lg font-bold\"><!></h1><button data-icon type=\"button\" class=\"plain\">\uF00D</button></header><article><slot></slot></article></dialog>`);\n\nwindow._jsx$global_event_touchmove = window._jsx$global_event_touchmove || _jsx$createGlobalEvent(\"touchmove\");\nwindow._jsx$global_event_touchend = window._jsx$global_event_touchend || _jsx$createGlobalEvent(\"touchend\");\nwindow._jsx$global_event_mousemove = window._jsx$global_event_mousemove || _jsx$createGlobalEvent(\"mousemove\");\nwindow._jsx$global_event_mouseup = window._jsx$global_event_mouseup || _jsx$createGlobalEvent(\"mouseup\");\nimport { reactive, ref } from \"jsx\";\nimport { getMousePosition } from \"./utils\";\n\ntype DialogProps = {\n  open: boolean;\n  id?: string;\n  title?: string;\n  onClose: (close: false) => void;\n  draggable?: boolean;\n  x: number;\n  y: number;\n  class?: string;\n};\n\nexport default function Dialog(props: DialogProps) {\n  const cursor = reactive({ x: props.x || 0, y: props.y || 0 });\n  const cursorStart = reactive({ x: cursor.x, y: cursor.y });\n  const cursorEnd = reactive({ x: cursor.x, y: cursor.y });\n  const [dragging, setDragging] = ref(false);\n\n  function startDrag(e: MouseEvent | TouchEvent) {\n    if (!props.draggable) {\n      return;\n    }\n\n    if (\n      !(\n        e.target instanceof HTMLButtonElement ||\n        e.target instanceof HTMLInputElement\n      )\n    ) {\n      e.preventDefault();\n    }\n\n    if (e instanceof MouseEvent && e.button !== 0) {\n      return;\n    }\n\n    setDragging(true);\n\n    const pos = getMousePosition(e);\n    cursorStart.x = pos.x;\n    cursorStart.y = pos.y;\n\n    drag(e);\n  }\n\n  function drag(e: MouseEvent | TouchEvent) {\n    if (!dragging()) {\n      return;\n    }\n\n    const pos = getMousePosition(e);\n    cursor.x = cursorEnd.x + pos.x - cursorStart.x;\n    cursor.y = cursorEnd.y + pos.y - cursorStart.y;\n  }\n\n  function stopDrag() {\n    setDragging(false);\n    cursorEnd.x = cursor.x;\n    cursorEnd.y = cursor.y;\n  }\n\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ5(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_element\nconst _jsx$el3 = _jsx$el2.firstChild; // jsx_expression\nconst _jsx$el4 = _jsx$el2.nextSibling; // jsx_element\nconst _jsx$el5 = _jsx$el4.firstChild; // jsx_text\nconst _jsx$el6 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el7 = _jsx$el6.firstChild; // jsx_self_closing_element\n\n_jsx$trackAttribute(_jsx$el0, \"open\", () => props.open);\n_jsx$trackClass(_jsx$el0, \"grid\", () => props.open);\n_jsx$trackCssProperty(_jsx$el0, \"left\", () => `${cursor.x}px`);\n_jsx$trackCssProperty(_jsx$el0, \"top\", () => `${cursor.y}px`);\n_jsx$addGlobalEvent(window._jsx$global_event_touchmove, _jsx$el0, drag);\n_jsx$addGlobalEvent(window._jsx$global_event_touchend, _jsx$el0, stopDrag);\n_jsx$addGlobalEvent(window._jsx$global_event_mousemove, _jsx$el0, drag);\n_jsx$addGlobalEvent(window._jsx$global_event_mouseup, _jsx$el0, stopDrag);\n_jsx$trackClass(_jsx$el1, \"cursor-grab\", () => !dragging());\n_jsx$trackClass(_jsx$el1, \"cursor-grabbing\", () => dragging());\n_jsx$addLocalEvent(_jsx$el1, \"mousedown\", startDrag);\n_jsx$addLocalEvent(_jsx$el1, \"touchstart\", startDrag);\n_jsx$insertChild(_jsx$el3, () => props.title);\n_jsx$addLocalEvent(_jsx$el4, \"click\", () => props.onClose(false));\n_jsx$addLocalEvent(_jsx$el4, \"touchend\", () => props.onClose(false));\n_jsx$setAttribute(_jsx$el6, \"data-dialog-id\", props.id);\n_jsx$setAttribute(_jsx$el6, \"class\", `p-2 overflow-auto ${props.class}`);\n_jsx$insertChild(_jsx$el7, arguments[1]?.[\"default\"]?.());\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { destroyNode } from \"~/jsx\";\nimport { watch } from \"~/signals\";\n\ntype PortalProps = {\n  to?: Element | string,\n  $ref?: Element,\n};\n\nexport default function Portal(props: PortalProps, slots: JSX.Slots) {\n  const parent = () => {\n    if (!props.to) {\n      props.$ref = document.body;\n    }\n    else if (props.to instanceof Element) {\n      props.$ref = props.to;\n    }\n    else {\n      props.$ref = document.querySelector(props.to) || document.body;\n    }\n\n    return props.$ref;\n  };\n\n  const anchor = document.createComment(\"\");\n\n  const children = slots.default?.();\n  queueMicrotask(() => {\n    anchor.addEventListener(\"destroy\", () => {\n      children.forEach(destroyNode);\n      anchor.remove();\n    });\n  });\n\n  watch(() => {\n    parent().append(...children);\n  });\n\n  return anchor as unknown as JSX.Element;\n}\n", "import { template as _jsx$template } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ1 = _jsx$template(`<pre><slot></slot></pre>`);\n\nimport Portal from \"jsx/components/Portal\";\n\nexport default function Dbg() {\n  return (\n    (() => {\nPortal.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ1(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\n\n_jsx$insertChild(_jsx$el1, arguments[1]?.[\"default\"]?.());\n\nreturn _jsx$el0;\n})()]}\nconst _jsx$el0 = Portal({to: \"[data-dialog-id=dbg]\", }, Portal.$$slots);\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { destroyNode } from \"~/jsx\";\nimport { isReactiveObject, reactive, ref, watch } from \"~/signals\";\nimport { createElementPosition, InsertNodeFn } from \"~/utils\";\n\ntype ForProps<T> = {\n  each: T[],\n  do: (item: () => T, i: number) => JSX.Element,\n};\n\n/**\n * A component that renders a list of JSX elements from a reactive dynamically-sized array.\n * Elements are keyed by reference, meaning nodes will only be re-created when the actual\n * object in the array changes.\n *\n * @note Use `<FixedFor>` if you need to render a fixed-size array, as this component is\n * optimized for dynamic arrays that can change in size.\n */\nexport default function For<T>(props: ForProps<T>): JSX.Element {\n  const initialPosition = createElementPosition();\n  const anchor = document.createComment(\"For\");\n\n  const refs: T[] = [];\n  const list = props.each.map(createNode);\n  let length = props.each.length;\n\n  queueMicrotask(() => {\n    if (!anchor.isConnected && !anchor.parentElement) {\n      console.warn(\"<For> failed to mount\");\n    }\n    initialPosition.setFromElement(anchor);\n    anchor.remove();\n    list.forEach((n, i) => {\n      const lastElem = list[i - 1];\n      let insertNode: InsertNodeFn;\n\n      if (lastElem?.isConnected) {\n        insertNode = lastElem.after.bind(lastElem);\n      }\n      else {\n        insertNode = initialPosition.getInsertFunction();\n      }\n\n      return insertNode(n);\n    });\n  });\n\n  function createNode(data: T, i: number) {\n    const [item, setItem] = ref(data);\n\n    const currentItem = item();\n    if (currentItem && typeof currentItem === \"object\") {\n      if (isReactiveObject(currentItem)) {\n        currentItem.listeners.clear();\n      }\n      else {\n        reactive(currentItem);\n      }\n    }\n\n    let removed = false;\n    watch(() => {\n      if (removed) { return }\n\n      const newItem = props.each[i];\n      if (newItem && typeof newItem === \"object\" && !isReactiveObject(newItem)) {\n        reactive(newItem);\n      }\n\n      if (item() !== newItem) {\n        refs[i] = newItem;\n        if (newItem === undefined) {\n          removed = true;\n          removeNode();\n        }\n        else {\n          setItem(newItem);\n        }\n      }\n    });\n\n    refs.push(item());\n\n    return props.do(item, i);\n  }\n\n  function removeNode() {\n    if (props.each.length < length) {\n      if (refs[length - 1] !== undefined) { return }\n      for (let i = length - 1; i >= props.each.length; i--) {\n        destroyNode(list[i]);\n      }\n      length = refs.length = list.length = props.each.length;\n    }\n  }\n\n  watch(() => {\n    if (props.each.length > length) {\n      for (let i = length; i < props.each.length; i++) {\n        const lastElem = list[i - 1];\n\n        let insertNode: InsertNodeFn;\n        if (lastElem?.isConnected) {\n          insertNode = lastElem.after.bind(lastElem);\n        }\n        else {\n          insertNode = initialPosition.getInsertFunction();\n        }\n\n        const node = createNode(props.each[i], i);\n        insertNode(node);\n        list.push(node);\n      }\n\n      length = refs.length = list.length = props.each.length;\n    }\n    else if (props.each.length < length) {\n      removeNode();\n    }\n  });\n\n  return anchor as unknown as JSX.Element;\n}\n", "import { isReactiveObject, reactive, ref, watch } from \"~/signals\";\n\ntype ForProps<T> = {\n  each: T[],\n  do: (item: () => T, i: number) => JSX.Element,\n};\n\n/**\n * A component that renders a list of JSX elements from a fixed-size array of reactive items.\n *\n * This component takes a fixed-size array of objects and a render function, converts each object\n * in the array into a reactive object, and then uses the render function to generate\n * JSX elements for each item.\n *\n * @note If you need to render a dynamically-sized array use <For> instead.\n */\nexport default function FixedFor<T>(props: ForProps<T>): JSX.Element {\n  return props.each.map((_, i) => {\n    const [item, setItem] = ref(props.each[i]);\n\n    const currentItem = item();\n    if (currentItem && typeof currentItem === \"object\" && !isReactiveObject(currentItem)) {\n      reactive(currentItem);\n    }\n\n    watch(() => {\n      const newItem = props.each[i];\n      if (item() !== newItem) {\n        setItem(newItem);\n      }\n    });\n\n    return props.do(item, i);\n  }) as unknown as JSX.Element;\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { trackCssProperty as _jsx$trackCssProperty } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ5 = _jsx$template(`<fieldset data-button class=\"compact relative flex items-center outline rounded-sm h-full\"><button data-icon class=\"plain py-1 px-2 rounded-sm\" type=\"button\" title=\"Clear\">\uF00D</button><input type=\"color\" class=\"w-7 h-full peer cursor-pointer opacity-0 rounded-sm\"/><div class=\"w-7 h-full p-1 text-xs focus-sibling pointer-events-none absolute right-0 flex items-center justify-center rounded-sm flex-col\"><slot></slot><div class=\"w-full h-3 outlined\"></div></div></fieldset>`);\n\ntype ColorPickerProps = {\n  color: string;\n  defaultColor?: string;\n  onChange: (color: string) => void;\n};\n\nexport default function ColorPicker(props: ColorPickerProps) {\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ5(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_text\nconst _jsx$el3 = _jsx$el1.nextSibling; // jsx_self_closing_element\nconst _jsx$el4 = _jsx$el3.nextSibling; // jsx_element\nconst _jsx$el5 = _jsx$el4.firstChild; // jsx_self_closing_element\nconst _jsx$el6 = _jsx$el5.nextSibling; // jsx_self_closing_element\n\n_jsx$addLocalEvent(_jsx$el1, \"click\", () => props.onChange(props.defaultColor ?? \"\"));\n_jsx$trackAttribute(_jsx$el3, \"value\", () => props.color);\n_jsx$addLocalEvent(_jsx$el3, \"input\", (ev) => props.onChange(ev.currentTarget.value));\n_jsx$insertChild(_jsx$el5, arguments[1]?.[\"default\"]?.());\n_jsx$trackCssProperty(_jsx$el6, \"background-color\", () => props.color);\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ2 = _jsx$template(`<label data-button class=\"relative focus-children has-checked:bg-indigo-500! has-checked:hover:bg-indigo-700! has-checked:text-zinc-100! dark:has-checked:bg-emerald-500! dark:has-checked:text-zinc-900! dark:has-checked:hover:bg-emerald-200! rounded-square\"><input type=\"checkbox\" class=\"opacity-0 absolute pointer-events-none\"/><slot></slot></label>`);\n\ntype CheckboxProps = {\n  checked: boolean;\n  onChange: (checked: boolean) => void;\n};\n\nexport default function Checkbox(props: CheckboxProps) {\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ2(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_self_closing_element\n\n_jsx$setAttribute(_jsx$el1, \"checked\", props.checked);\n_jsx$addLocalEvent(_jsx$el1, \"change\", (ev) => props.onChange(ev.currentTarget.checked));\n_jsx$insertChild(_jsx$el2, arguments[1]?.[\"default\"]?.());\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ11 = _jsx$template(`<strong>B</strong>`);\nconst _jsx$templ15 = _jsx$template(`<u>U</u>`);\nconst _jsx$templ17 = _jsx$template(`<s>S</s>`);\nconst _jsx$templ20 = _jsx$template(`<strong>Aa</strong>`);\nconst _jsx$templ22 = _jsx$template(`<fieldset><select class=\"h-full\"><!></select><select class=\"h-full\"><!></select><fieldset class=\"grid grid-cols-[1rem_3rem_1rem]\"><button type=\"button\" class=\"compact\">-</button><input class=\"text-center\"/><button type=\"button\" class=\"compact\">+</button></fieldset><div></div><!><!><!><!><div></div><!></fieldset>`);\nconst _jsx$templ0 = _jsx$template(`<option><!></option>`);\nconst _jsx$templ3 = _jsx$template(`<option><!></option>`);\nconst _jsx$templ13 = _jsx$template(`<em>I</em>`);\n\nimport { ref } from \"jsx\";\nimport FixedFor from \"jsx/components/FixedFor\";\nimport { currentSheet, forEachSelectedTextCell } from \"./state\";\nimport {\n  DEFAULT_BOLD,\n  DEFAULT_FONT_COLOR,\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_FORMAT,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_ITALIC,\n  DEFAULT_STRIKETHROUGH,\n  DEFAULT_UNDERLINE,\n  DIVIDER_STYLE,\n} from \"./config\";\nimport type { FontStyle } from \"./types\";\nimport ColorPicker from \"./ColorPicker\";\nimport Checkbox from \"./Checkbox\";\nimport { isSafari } from \"./utils\";\n\nexport default function FontSelector() {\n  function updateFont<K extends keyof FontStyle>(k: K, v: FontStyle[K]) {\n    setSelectedFont.byRef((f) => {\n      f[k] = v;\n    });\n    currentSheet().setTextCells.byRef((textCells) => {\n      forEachSelectedTextCell(textCells, (tc) => {\n        tc.style[k] = v;\n      });\n    });\n  }\n\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ22(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_self_closing_element\nconst _jsx$el3 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el4 = _jsx$el3.firstChild; // jsx_self_closing_element\nconst _jsx$el5 = _jsx$el3.nextSibling; // jsx_element\nconst _jsx$el6 = _jsx$el5.firstChild; // jsx_element\nconst _jsx$el7 = _jsx$el6.firstChild; // jsx_text\nconst _jsx$el8 = _jsx$el6.nextSibling; // jsx_self_closing_element\nconst _jsx$el9 = _jsx$el8.nextSibling; // jsx_element\nconst _jsx$el10 = _jsx$el9.firstChild; // jsx_text\nconst _jsx$el11 = _jsx$el5.nextSibling; // jsx_self_closing_element\nconst _jsx$el12 = _jsx$el11.nextSibling; // jsx_element\nconst _jsx$el13 = _jsx$el12.nextSibling; // jsx_element\nconst _jsx$el14 = _jsx$el13.nextSibling; // jsx_element\nconst _jsx$el15 = _jsx$el14.nextSibling; // jsx_element\nconst _jsx$el16 = _jsx$el15.nextSibling; // jsx_self_closing_element\nconst _jsx$el17 = _jsx$el16.nextSibling; // jsx_element\n\n_jsx$setAttribute(_jsx$el0, \"class\", `flex gap-2 h-full *:flex-none ${isSafari ? \"*:w-max\" : \"\"}`);\n_jsx$addLocalEvent(_jsx$el1, \"change\", (ev) => updateFont(\"family\", ev.currentTarget.value));\nFixedFor.$$slots = {};\n_jsx$insertChild(_jsx$el2, FixedFor({get each() { return fontList }, do: (f) => (\n            (() => {\nconst _jsx$el0 = _jsx$templ0(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_expression\n\n_jsx$setAttribute(_jsx$el0, \"selected\", f() === selectedFont().family);\n_jsx$insertChild(_jsx$el1, () => f());\n\nreturn _jsx$el0;\n})()\n          ), }));\n_jsx$addLocalEvent(_jsx$el3, \"change\", (ev) => updateFont(\"format\", ev.currentTarget.value));\nFixedFor.$$slots = {};\n_jsx$insertChild(_jsx$el4, FixedFor({get each() { return formatList }, do: (f) => (\n            (() => {\nconst _jsx$el0 = _jsx$templ3(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_expression\n\n_jsx$setAttribute(_jsx$el0, \"selected\", f() === selectedFont().format);\n_jsx$insertChild(_jsx$el1, () => f());\n\nreturn _jsx$el0;\n})()\n          ), }));\n_jsx$addLocalEvent(_jsx$el6, \"click\", () => updateFont(\"size\", selectedFont().size - 1));\n_jsx$trackAttribute(_jsx$el8, \"value\", () => selectedFont().size);\n_jsx$addLocalEvent(_jsx$el8, \"input\", (ev) => updateFont(\"size\", +ev.currentTarget.value));\n_jsx$addLocalEvent(_jsx$el9, \"click\", () => updateFont(\"size\", selectedFont().size + 1));\n_jsx$setAttribute(_jsx$el11, \"class\", DIVIDER_STYLE);\nCheckbox.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ11(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el12, Checkbox({get checked() { return selectedFont().bold }, onChange: (v) => updateFont(\"bold\", v), }, Checkbox.$$slots));\nCheckbox.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ13(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el13, Checkbox({get checked() { return selectedFont().italic }, onChange: (v) => updateFont(\"italic\", v), }, Checkbox.$$slots));\nCheckbox.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ15(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el14, Checkbox({get checked() { return selectedFont().underline }, onChange: (v) => updateFont(\"underline\", v), }, Checkbox.$$slots));\nCheckbox.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ17(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el15, Checkbox({get checked() { return selectedFont().strikethrough }, onChange: (v) => updateFont(\"strikethrough\", v), }, Checkbox.$$slots));\n_jsx$setAttribute(_jsx$el16, \"class\", DIVIDER_STYLE);\nColorPicker.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ20(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el17, ColorPicker({get color() { return selectedFont().color }, onChange: (v) => updateFont(\"format\", v), }, ColorPicker.$$slots));\n\nreturn _jsx$el0;\n})()\n  );\n}\n\nconst currencyFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n});\n\nfunction parseNumCell<T>(s: string, cb: (n: number) => T) {\n  const n = Number(s);\n  return Number.isNaN(n) ? s : cb(n);\n}\n\nexport const formatMap = {\n  Number: (s: string) =>\n    parseNumCell(s, (n) => (n % 1 === 0 ? s : n.toFixed(2))),\n  Currency: (s: string) => parseNumCell(s, (n) => currencyFormatter.format(n)),\n  Date: (s: string) => {\n    try {\n      return new Date(s).toLocaleDateString(\"en-US\", {\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\",\n      });\n    } catch (_) {\n      return s;\n    }\n  },\n  Integer: (s: string) => parseNumCell(s, (n) => Math.floor(n)),\n};\n\nconst formatList = Object.keys(formatMap);\n\nconst fontList = [\n  \"Amatic SC\",\n  \"Caveat\",\n  \"Comfortaa\",\n  \"Courier Prime\",\n  \"EB Garamond\",\n  \"Exo\",\n  \"JetBrainsMono\",\n  \"Lexend\",\n  \"Lobster\",\n  \"Lora\",\n  \"Merriweather\",\n  \"Montserrat\",\n  \"Nunito\",\n  \"Oswald\",\n  \"Pacifico\",\n  \"Playfair Display\",\n  \"Roboto\",\n  \"Roboto Mono\",\n  \"Roboto Serif\",\n  \"Spectral\",\n];\n\nexport const [selectedFont, setSelectedFont] = ref<FontStyle>({\n  family: DEFAULT_FONT_FAMILY,\n  size: DEFAULT_FONT_SIZE,\n  color: DEFAULT_FONT_COLOR,\n  bold: DEFAULT_BOLD,\n  italic: DEFAULT_ITALIC,\n  underline: DEFAULT_UNDERLINE,\n  strikethrough: DEFAULT_STRIKETHROUGH,\n  format: DEFAULT_FONT_FORMAT,\n});\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { addGlobalEvent as _jsx$addGlobalEvent } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\nimport { trackClass as _jsx$trackClass } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { conditionalRender as _jsx$conditionalRender } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { trackCssProperty as _jsx$trackCssProperty } from \"jsx\";\nimport { createGlobalEvent as _jsx$createGlobalEvent } from \"jsx\";\n\nconst _jsx$templ2 = _jsx$template(`<div class=\"absolute text-wrap break-all py-1 px-2\"><!><!></div>`);\nconst _jsx$templ1 = _jsx$template(`<span><!></span>`);\nconst _jsx$templ11 = _jsx$template(`<p>Colored:<!><!></p>`);\nconst _jsx$templ16 = _jsx$template(`<p>inputCellInfo: <!></p>`);\nconst _jsx$templ10 = _jsx$template(`<div class=\"absolute right-0\"><div tabindex=\"0\"><!></div><!><pre class=\"absolute z-10 h-8 w-25 p-1 outline outline-indigo-500 dark:outline-emerald-500 whitespace-pre-wrap pointer-events-none\"><!><strong class=\"absolute -top-6 -left-1 p-1 font-mono\"><!></strong></pre></div>`);\nconst _jsx$templ6 = _jsx$template(`<div class=\"absolute bg-indigo-500/50 dark:bg-emerald-500/50 pointer-events-none\"><!></div>`);\nconst _jsx$templ5 = _jsx$template(`<button type=\"button\" class=\"absolute no-color bg-indigo-500 dark:bg-emerald-500 rounded-full w-6 h-6 bottom-0 right-0 translate-1/2 pointer-events-auto\"></button>`);\nconst _jsx$templ14 = _jsx$template(`<p>ColOffsets: <!></p>`);\nconst _jsx$templ0 = _jsx$template(`<strong class=\"font-mono text-base font-bold not-italic text-red-500\">#ERROR!</strong>`);\nconst _jsx$templ13 = _jsx$template(`<p>Texts: <!></p>`);\nconst _jsx$templ12 = _jsx$template(`<p>Selected:<!><!></p>`);\nconst _jsx$templ15 = _jsx$template(`<p>RowOffsets: <!></p>`);\n\nwindow._jsx$global_event_pointermove = window._jsx$global_event_pointermove || _jsx$createGlobalEvent(\"pointermove\");\nimport { watchFn } from \"jsx\";\nimport {\n  totalOffsets,\n  totalOffsetsRange,\n  getMousePosition,\n  isTouchscreen,\n  getCellId,\n  getCellIdx,\n} from \"./utils\";\nimport {\n  canvasRect,\n  computeFirstVisibleColumn,\n  computeFirstVisibleRow,\n  scroll,\n  setScroll,\n  setScrollEl,\n  touchSelecting,\n  ctrlPressed,\n  setSelectedColor,\n  prefersDark,\n  defaultCellColor,\n  currentSheet,\n  cellInputEl,\n  isCellInputVisible,\n  cellText,\n  positionCellInput,\n  cellInputInfo,\n  setCellText,\n  getSelectedRegion,\n  lastFormulaRegion,\n  setTouchSelecting,\n} from \"./state\";\nimport Dbg from \"./Dbg\";\nimport type { Cell, PartialCell } from \"./types\";\nimport { CELL_H, CELL_W, MAX_COLS, MAX_ROWS } from \"./config\";\nimport {\n  parseRegion,\n  regionToQuad,\n  carveRegion,\n  regionsOverlap,\n} from \"./region\";\nimport For from \"jsx/components/For\";\nimport { formatMap, selectedFont } from \"./FontSelector\";\n\nexport default function GridControls() {\n  let isSelecting = false;\n  let firstCol: PartialCell;\n  let firstRow: PartialCell;\n\n  let areaLeft = {} as Cell;\n  let areaTop = {} as Cell;\n  let areaStart = {} as Cell;\n\n  watchFn(scroll, () => {\n    firstCol = computeFirstVisibleColumn(scroll().x);\n    firstRow = computeFirstVisibleRow(scroll().y);\n  });\n\n  function doSelection(ev: PointerEvent) {\n    if (!isSelecting) return;\n    updateSelection(ev);\n  }\n\n  function startSelection(ev: PointerEvent) {\n    ev.preventDefault();\n    getCellAtCursor(ev, areaStart);\n\n    if (areaLeft.col == null || areaStart.col < areaLeft.col) {\n      areaLeft = { ...areaStart };\n    }\n\n    if (areaTop.row == null || areaStart.row < areaTop.row) {\n      areaTop = { ...areaStart };\n    }\n\n    updateSelection(ev);\n    isSelecting = true;\n  }\n\n  watchFn(prefersDark, updateSelectedColor);\n\n  function updateSelectedColor() {\n    let cellColor: string | undefined;\n    const cellRegion = {\n      startCol: areaStart.col,\n      startRow: areaStart.row,\n      endCol: areaStart.col,\n      endRow: areaStart.row,\n    };\n    for (const color in currentSheet().colorRegions()) {\n      for (const r of currentSheet().colorRegions()[color]) {\n        const region = parseRegion(r);\n        if (regionsOverlap(region, cellRegion)) {\n          cellColor = color;\n          break;\n        }\n      }\n      if (cellColor) break;\n    }\n    setSelectedColor(cellColor ?? defaultCellColor());\n  }\n\n  function updateSelection(ev: PointerEvent) {\n    const areaEnd = getCellAtCursor(ev);\n\n    const startCol = Math.min(areaStart.col, areaEnd.col);\n    const endCol = Math.max(areaStart.col, areaEnd.col);\n    const startRow = Math.min(areaStart.row, areaEnd.row);\n    const endRow = Math.max(areaStart.row, areaEnd.row);\n\n    if (!ctrlPressed()) {\n      currentSheet().setLastSelectedRegions.byRef((sel) => sel.clear());\n    }\n\n    const sel = new Set(currentSheet().lastSelectedRegions());\n    carveRegion(sel, startCol, startRow, endCol, endRow);\n    currentSheet().setSelectedRegions(sel);\n\n    if (cellText()[0] !== \"=\") {\n      cellInputEl().blur();\n    } else if (document.activeElement === cellInputEl()) {\n      const selections = currentSheet().selectedRegions();\n      if (!selections.size) return;\n\n      let text = \"\";\n      for (const selection of selections) {\n        const region = parseRegion(selection);\n        if (\n          region.startCol === cellInputInfo().col &&\n          region.startRow === cellInputInfo().row\n        )\n          return;\n\n        if (text) text += \",\";\n\n        text += getCellId(region.startCol, region.startRow);\n        if (\n          region.startCol !== region.endCol ||\n          region.startRow !== region.endRow\n        ) {\n          text = `${text}:${getCellId(region.endCol, region.endRow)}`;\n        }\n      }\n\n      setCellText(\n        lastFormulaRegion.text.slice(0, lastFormulaRegion.start) +\n          text +\n          lastFormulaRegion.text.slice(lastFormulaRegion.end),\n      );\n\n      cellInputEl().selectionStart = cellInputEl().selectionEnd =\n        lastFormulaRegion.start + text.length;\n    }\n  }\n\n  watchFn(\n    () => [\n      currentSheet().selectedRegions(),\n      currentSheet().textCells(),\n      currentSheet().colOffsets(),\n      currentSheet().rowOffsets(),\n    ],\n    (c) => {\n      if (!(c instanceof Set)) {\n        areaStart = {\n          ...(c === currentSheet().colOffsets() ? areaLeft : areaTop),\n        };\n        positionCell(areaStart);\n      }\n\n      currentSheet().setSelectedQuads.byRef((quads) => {\n        quads.length = 0;\n        for (const r of currentSheet().selectedRegions()) {\n          const quad = regionToQuad(parseRegion(r));\n          quads.push({ x: quad[0], y: quad[1], w: quad[2], h: quad[3] });\n        }\n      });\n\n      currentSheet().setTextQuads.byRef((quads) => {\n        quads.length = 0;\n        for (const cellIdx in currentSheet().textCells()) {\n          const idx = +cellIdx;\n          const col = idx % MAX_COLS;\n          const row = Math.floor(idx / MAX_COLS);\n          const quad = regionToQuad({\n            startCol: col,\n            startRow: row,\n            endCol: col,\n            endRow: row,\n          });\n          quads.push({\n            cell: currentSheet().textCells()[cellIdx],\n            x: quad[0],\n            y: quad[1],\n            w: quad[2],\n            h: quad[3],\n          });\n        }\n      });\n    },\n  );\n\n  watchFn(\n    () => currentSheet().lastSelectedRegions(),\n    () =>\n      currentSheet().setSelectedRegions(\n        new Set(currentSheet().lastSelectedRegions()),\n      ),\n  );\n\n  function endSelection(ev: PointerEvent) {\n    if (isTouchscreen) {\n      if (!isSelecting) startSelection(ev);\n      setTouchSelecting(false);\n    }\n    if (!isSelecting) return;\n    isSelecting = false;\n    currentSheet().setLastSelectedRegions(\n      new Set(currentSheet().selectedRegions()),\n    );\n  }\n\n  function getCellAtCursor(ev: PointerEvent, c = {} as Cell) {\n    const cursor = getMousePosition(ev);\n\n    c.col = computeFirstVisibleColumn(\n      scroll().x + cursor.x - canvasRect().x,\n    ).index;\n    c.row = computeFirstVisibleRow(\n      scroll().y + cursor.y - canvasRect().y,\n    ).index;\n\n    positionCell(c);\n\n    return c;\n  }\n\n  function positionCell(c: Cell) {\n    c.x =\n      (c.col - firstCol.index) * CELL_W +\n      scroll().x +\n      totalOffsetsRange(\n        firstCol.index,\n        c.col - 1,\n        currentSheet().colOffsets(),\n      ) -\n      firstCol.remainder;\n    c.y =\n      (c.row - firstRow.index) * CELL_H +\n      scroll().y +\n      totalOffsetsRange(\n        firstRow.index,\n        c.row - 1,\n        currentSheet().rowOffsets(),\n      ) -\n      firstRow.remainder;\n  }\n\n  function showCellInput() {\n    positionCellInput();\n    cellInputEl().focus();\n  }\n\n  function updateText() {\n    if (!isCellInputVisible()) {\n      const region = getSelectedRegion();\n      setCellText(\n        currentSheet().textCells()[getCellIdx(region.startCol, region.startRow)]\n          ?.text ?? \"\",\n      );\n    }\n  }\n\n  return (\n    [(() => {\nconst _jsx$el0 = _jsx$templ10(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[true]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_self_closing_element\nconst _jsx$el3 = _jsx$el1.nextSibling; // jsx_self_closing_element\nconst _jsx$el4 = _jsx$el3.nextSibling; // jsx_element\nconst _jsx$el5 = _jsx$el4.firstChild; // jsx_expression\nconst _jsx$el6 = _jsx$el5.nextSibling; // jsx_element\nconst _jsx$el7 = _jsx$el6.firstChild; // jsx_expression\n\nsetScrollEl(_jsx$el0);\n_jsx$trackClass(_jsx$el0, \"overflow-auto\", () => !touchSelecting());\n_jsx$trackCssProperty(_jsx$el0, \"top\", () => `${canvasRect().y}px`);\n_jsx$trackCssProperty(_jsx$el0, \"width\", () => `${canvasRect().width}px`);\n_jsx$trackCssProperty(_jsx$el0, \"height\", () => `${canvasRect().height}px`);\n_jsx$addLocalEvent(_jsx$el0, \"scroll\", (ev) =>\n          setScroll({\n            x: ev.currentTarget.scrollLeft,\n            y: ev.currentTarget.scrollTop,\n          }));\n_jsx$trackCssProperty(_jsx$el1, \"width\", () => `${CELL_W * MAX_COLS + totalOffsets(currentSheet().colOffsets())}px`);\n_jsx$trackCssProperty(_jsx$el1, \"height\", () => `${CELL_H * MAX_ROWS + totalOffsets(currentSheet().rowOffsets())}px`);\n_jsx$addLocalEvent(_jsx$el1, \"pointerdown\", isTouchscreen ? undefined : (ev) => startSelection(ev));\n_jsx$addGlobalEvent(window._jsx$global_event_pointermove, _jsx$el1, doSelection);\n_jsx$addLocalEvent(_jsx$el1, \"pointerup\", endSelection);\n_jsx$addLocalEvent(_jsx$el1, \"click\", updateText);\n_jsx$addLocalEvent(_jsx$el1, \"dblclick\", showCellInput);\nFor.$$slots = {};\n_jsx$insertChild(_jsx$el2, For({get each() { return currentSheet().textQuads() }, do: (t) => (\n              (() => {\nconst _jsx$el0 = _jsx$templ2(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_element\n\n_jsx$trackCssProperty(_jsx$el0, \"font-family\", () => t().cell.style.family);\n_jsx$trackCssProperty(_jsx$el0, \"font-size\", () => `${t().cell.style.size}px`);\n_jsx$trackCssProperty(_jsx$el0, \"font-weight\", () => t().cell.style.bold ? \"bold\" : \"normal\");\n_jsx$trackCssProperty(_jsx$el0, \"font-style\", () => t().cell.style.italic ? \"italic\" : \"normal\");\n_jsx$trackCssProperty(_jsx$el0, \"text-decoration-line\", () => t().cell.computed instanceof Error\n                    ? \"\"\n                    : `${t().cell.style.underline ? \"underline \" : \"\"}${t().cell.style.strikethrough ? \"line-through\" : \"\"}`);\n_jsx$trackCssProperty(_jsx$el0, \"color\", () => t().cell.style.color);\n_jsx$trackCssProperty(_jsx$el0, \"left\", () => `${t().x}px`);\n_jsx$trackCssProperty(_jsx$el0, \"top\", () => `${t().y}px`);\n_jsx$trackCssProperty(_jsx$el0, \"width\", () => `${t().w}px`);\n_jsx$trackCssProperty(_jsx$el0, \"height\", () => `${t().h}px`);\n_jsx$conditionalRender(_jsx$el1, (() => {\nconst _jsx$el0 = _jsx$templ0(); // root[false]/component[false]/conditional[true]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n_jsx$trackAttribute(_jsx$el0, \"title\", () => t().cell.computed.toString());\n\nreturn _jsx$el0;\n}), () => t().cell.computed instanceof Error);\n_jsx$conditionalRender(_jsx$el2, (() => {\nconst _jsx$el0 = _jsx$templ1(); // root[false]/component[false]/conditional[true]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_expression\n\n_jsx$insertChild(_jsx$el1, () => formatMap[t().cell.style.format](t().cell.computed));\n\nreturn _jsx$el0;\n}), () => typeof t().cell.computed === \"string\");\n\nreturn _jsx$el0;\n})()\n            ), }));\nFor.$$slots = {};\n_jsx$insertChild(_jsx$el3, For({get each() { return currentSheet().selectedQuads() }, do: (q) => (\n            (() => {\nconst _jsx$el0 = _jsx$templ6(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\n\n_jsx$trackCssProperty(_jsx$el0, \"left\", () => `${q().x}px`);\n_jsx$trackCssProperty(_jsx$el0, \"top\", () => `${q().y}px`);\n_jsx$trackCssProperty(_jsx$el0, \"width\", () => `${q().w}px`);\n_jsx$trackCssProperty(_jsx$el0, \"height\", () => `${q().h}px`);\n_jsx$conditionalRender(_jsx$el1, (() => {\nconst _jsx$el0 = _jsx$templ5(); // root[false]/component[false]/conditional[true]/transition[false]/template-child[false]\n\n_jsx$addLocalEvent(_jsx$el0, \"pointerdown\", () => {\n                  setTouchSelecting(true);\n                  isSelecting = true;\n                });\n\nreturn _jsx$el0;\n}), () => isTouchscreen);\n\nreturn _jsx$el0;\n})()\n          ), }));\n_jsx$trackClass(_jsx$el4, \"hidden\", () => !isCellInputVisible());\n_jsx$trackCssProperty(_jsx$el4, \"background-color\", () => defaultCellColor());\n_jsx$trackCssProperty(_jsx$el4, \"left\", () => `${cellInputInfo().x}px`);\n_jsx$trackCssProperty(_jsx$el4, \"top\", () => `${cellInputInfo().y}px`);\n_jsx$trackCssProperty(_jsx$el4, \"width\", () => `${cellInputInfo().width}px`);\n_jsx$trackCssProperty(_jsx$el4, \"height\", () => `${cellInputInfo().height}px`);\n_jsx$trackCssProperty(_jsx$el4, \"font-family\", () => selectedFont().family);\n_jsx$trackCssProperty(_jsx$el4, \"font-size\", () => `${selectedFont().size}px`);\n_jsx$trackCssProperty(_jsx$el4, \"font-weight\", () => selectedFont().bold ? \"bold\" : \"normal\");\n_jsx$trackCssProperty(_jsx$el4, \"font-style\", () => selectedFont().italic ? \"italic\" : \"normal\");\n_jsx$trackCssProperty(_jsx$el4, \"text-decoration-line\", () => `${selectedFont().underline ? \"underline \" : \"\"}${selectedFont().strikethrough ? \"line-through\" : \"\"}`);\n_jsx$trackCssProperty(_jsx$el4, \"color\", () => selectedFont().color);\n_jsx$insertChild(_jsx$el5, () => cellText());\n_jsx$insertChild(_jsx$el7, () => cellInputInfo().id);\n\nreturn _jsx$el0;\n})(), (() => {\nDbg.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ11(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[true]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\nconst _jsx$el3 = _jsx$el2.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, \" \");\n_jsx$insertChild(_jsx$el3, () => JSON.stringify(\n            currentSheet().colorRegions(),\n            (_, value) => (value instanceof Set ? Array.from(value) : value),\n            2,\n          ));\n\nreturn _jsx$el0;\n})(),(() => {\nconst _jsx$el0 = _jsx$templ12(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\nconst _jsx$el3 = _jsx$el2.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, \" \");\n_jsx$insertChild(_jsx$el3, () => JSON.stringify([...currentSheet().selectedRegions()], null, 2));\n\nreturn _jsx$el0;\n})(),(() => {\nconst _jsx$el0 = _jsx$templ13(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, () => JSON.stringify(currentSheet().textCells(), null, 2));\n\nreturn _jsx$el0;\n})(),(() => {\nconst _jsx$el0 = _jsx$templ14(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, () => JSON.stringify(currentSheet().colOffsets()));\n\nreturn _jsx$el0;\n})(),(() => {\nconst _jsx$el0 = _jsx$templ15(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, () => JSON.stringify(currentSheet().rowOffsets()));\n\nreturn _jsx$el0;\n})(),(() => {\nconst _jsx$el0 = _jsx$templ16(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, () => JSON.stringify(cellInputInfo(), null, 2));\n\nreturn _jsx$el0;\n})()]}\nconst _jsx$el0 = Dbg({}, Dbg.$$slots);\n\nreturn _jsx$el0;\n})(), ]\n\n  );\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { createGlobalEvent as _jsx$createGlobalEvent } from \"jsx\";\nimport { addGlobalEvent as _jsx$addGlobalEvent } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { trackCssProperty as _jsx$trackCssProperty } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ2 = _jsx$template(`<button type=\"button\" class=\"relative\"><!><div></div></button>`);\nconst _jsx$templ6 = _jsx$template(`<button type=\"button\" class=\"block w-full px-2 min-w-[56.5px] relative\"><!><div></div></button>`);\nconst _jsx$templ8 = _jsx$template(`<aside class=\"relative overflow-visible max-h-dvh z-10 select-none\"><!></aside>`);\nconst _jsx$templ0 = _jsx$template(`<button class=\"relative dark:bg-zinc-800 bg-zinc-200 z-11\" data-icon type=\"button\" title=\"Go to the 1st cell\">\uF853</button>`);\nconst _jsx$templ4 = _jsx$template(`<header class=\"relative overflow-visible max-w-dvw whitespace-nowrap z-10 select-none\"><!></header>`);\n\nwindow._jsx$global_event_touchmove = window._jsx$global_event_touchmove || _jsx$createGlobalEvent(\"touchmove\");\nwindow._jsx$global_event_mousemove = window._jsx$global_event_mousemove || _jsx$createGlobalEvent(\"mousemove\");\nwindow._jsx$global_event_mouseup = window._jsx$global_event_mouseup || _jsx$createGlobalEvent(\"mouseup\");\nwindow._jsx$global_event_touchend = window._jsx$global_event_touchend || _jsx$createGlobalEvent(\"touchend\");\nimport { ref, watchFn } from \"jsx\";\nimport For from \"jsx/components/For\";\nimport {\n  canvasRect,\n  computeFirstVisibleColumn,\n  computeFirstVisibleRow,\n  getEffectiveCellHeight,\n  getEffectiveCellWidth,\n  scroll,\n  scrollEl,\n  currentSheet,\n  ctrlPressed,\n} from \"./state\";\nimport {\n  toAlphaUpper,\n  toAlphaLower,\n  fromAlphaUpper,\n  getMousePosition,\n  fromAlphaLower,\n} from \"./utils\";\nimport { CELL_W, CELL_H, MAX_ROWS, MAX_COLS } from \"./config\";\nimport { carveRegion } from \"./region\";\n\nconst RESIZE_STYLE = \"absolute z-1\";\n\nexport default function GridAxes() {\n  const [cellKeys, setCellKeys] = ref({\n    cols: [] as string[],\n    rows: [] as string[],\n  });\n\n  function computeVisibleRange(\n    firstIndex: number,\n    size: number,\n    getEffectiveSize: (index: number) => number,\n  ): number {\n    let cumSize = 0;\n    let count = 0;\n    let currentIndex = firstIndex;\n\n    while (cumSize < size + getEffectiveSize(firstIndex)) {\n      cumSize += getEffectiveSize(currentIndex);\n      currentIndex++;\n      count++;\n    }\n\n    return count;\n  }\n\n  watchFn(\n    () => [\n      canvasRect(),\n      scroll(),\n      currentSheet().colOffsets(),\n      currentSheet().rowOffsets(),\n    ],\n    () => {\n      const { width, height } = canvasRect();\n      const { index: firstCol } = computeFirstVisibleColumn(scroll().x);\n      const { index: firstRow } = computeFirstVisibleRow(scroll().y);\n      if (firstCol < 0 && firstRow < 0) return;\n\n      const colCount = computeVisibleRange(\n        firstCol,\n        width,\n        getEffectiveCellWidth,\n      );\n      const rowCount = computeVisibleRange(\n        firstRow,\n        height,\n        getEffectiveCellHeight,\n      );\n\n      setCellKeys.byRef((k) => {\n        if (firstCol >= 0) {\n          k.cols.length = 0;\n          for (let i = firstCol; i < firstCol + colCount; i++) {\n            k.cols.push(toAlphaUpper(i));\n          }\n        }\n        if (firstRow >= 0) {\n          k.rows.length = 0;\n          for (let i = firstRow; i < firstRow + rowCount; i++) {\n            k.rows.push(toAlphaLower(i));\n          }\n        }\n      });\n    },\n  );\n\n  let lastPos = { x: 0, y: 0 };\n  let resizedCol = -1;\n  function startColResize(ev: MouseEvent | TouchEvent, colId: string) {\n    lastPos = getMousePosition(ev);\n    resizedCol = fromAlphaUpper(colId);\n  }\n\n  let resizedRow = -1;\n  function startRowResize(ev: MouseEvent | TouchEvent, rowId: string) {\n    lastPos = getMousePosition(ev);\n    resizedRow = fromAlphaLower(rowId);\n  }\n\n  function resizeCell(\n    ev: MouseEvent | TouchEvent,\n    resizedIndex: number,\n    setOffsets: (fn: (offsets: Record<number, number>) => void) => void,\n    cellSize: number,\n  ) {\n    if (resizedIndex === -1) return;\n    const pos = getMousePosition(ev);\n    setOffsets((offsets) => {\n      const newOffset =\n        (offsets[resizedIndex] ?? 0) +\n        (cellSize === CELL_W ? pos.x - lastPos.x : pos.y - lastPos.y);\n      offsets[resizedIndex] = Math.max(-cellSize, newOffset);\n      lastPos = pos;\n    });\n  }\n\n  function endResize() {\n    resizedCol = -1;\n    resizedRow = -1;\n  }\n\n  let lastScrollX = scroll().x;\n  let lastScrollY = scroll().x;\n  const [headerOffset, setHeaderOffset] = ref(0);\n  const [asideOffset, setAsideOffset] = ref(0);\n  watchFn(scroll, () => {\n    if (scroll().x !== lastScrollX) {\n      const offset = computeFirstVisibleColumn(scroll().x).remainder;\n      if (offset >= 0) setHeaderOffset(offset);\n      lastScrollX = scroll().x;\n    }\n    if (scroll().y !== lastScrollY) {\n      const offset = computeFirstVisibleRow(scroll().y).remainder;\n      if (offset >= 0) setAsideOffset(offset);\n      lastScrollY = scroll().y;\n    }\n  });\n\n  function selectCol(ev: MouseEvent | TouchEvent, col: number) {\n    if (ev.target !== ev.currentTarget) return;\n    currentSheet().setLastSelectedRegions.byRef((sel) => {\n      if (!ctrlPressed()) sel.clear();\n      carveRegion(sel, col, 0, col, MAX_ROWS);\n    });\n  }\n\n  function selectRow(ev: MouseEvent | TouchEvent, row: number) {\n    if (ev.target !== ev.currentTarget) return;\n    currentSheet().setLastSelectedRegions.byRef((sel) => {\n      if (!ctrlPressed()) sel.clear();\n      carveRegion(sel, 0, row, MAX_COLS, row);\n    });\n  }\n\n  return (\n    [(() => {\nconst _jsx$el0 = _jsx$templ0(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[true]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n_jsx$addLocalEvent(_jsx$el0, \"click\", () =>\n          scrollEl().scrollTo({ top: 0, left: 0, behavior: \"smooth\" }));\n\nreturn _jsx$el0;\n})(), (() => {\nconst _jsx$el0 = _jsx$templ4(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[true]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\n\n_jsx$trackCssProperty(_jsx$el0, \"left\", () => `-${headerOffset()}px`);\nFor.$$slots = {};\n_jsx$insertChild(_jsx$el1, For({get each() { return cellKeys().cols }, do: (col, i) => (\n            (() => {\nconst _jsx$el0 = _jsx$templ2(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_expression\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_self_closing_element\n\n_jsx$trackAttribute(_jsx$el0, \"tabindex\", () => i === cellKeys().cols.length - 1 ? -1 : undefined);\n_jsx$addLocalEvent(_jsx$el0, \"click\", (ev) => selectCol(ev, fromAlphaUpper(col())));\n_jsx$trackCssProperty(_jsx$el0, \"width\", () => `${getEffectiveCellWidth(fromAlphaUpper(col()))}px`);\n_jsx$insertChild(_jsx$el1, () => col());\n_jsx$setAttribute(_jsx$el2, \"class\", `${RESIZE_STYLE} cursor-col-resize top-0 right-0 h-full w-3`);\n_jsx$addLocalEvent(_jsx$el2, \"mousedown\", (ev) => startColResize(ev, col()));\n_jsx$addGlobalEvent(window._jsx$global_event_mousemove, _jsx$el2, (ev) =>\n                  resizeCell(\n                    ev,\n                    resizedCol,\n                    currentSheet().setColOffsets.byRef,\n                    CELL_W,\n                  ));\n_jsx$addGlobalEvent(window._jsx$global_event_mouseup, _jsx$el2, endResize);\n_jsx$addLocalEvent(_jsx$el2, \"touchstart\", (ev) => startColResize(ev, col()));\n_jsx$addGlobalEvent(window._jsx$global_event_touchmove, _jsx$el2, (ev) =>\n                  resizeCell(\n                    ev,\n                    resizedCol,\n                    currentSheet().setColOffsets.byRef,\n                    CELL_W,\n                  ));\n_jsx$addGlobalEvent(window._jsx$global_event_touchend, _jsx$el2, endResize);\n\nreturn _jsx$el0;\n})()\n          ), }));\n\nreturn _jsx$el0;\n})(), (() => {\nconst _jsx$el0 = _jsx$templ8(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[true]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\n\n_jsx$trackCssProperty(_jsx$el0, \"top\", () => `-${asideOffset()}px`);\nFor.$$slots = {};\n_jsx$insertChild(_jsx$el1, For({get each() { return cellKeys().rows }, do: (row, i) => (\n            (() => {\nconst _jsx$el0 = _jsx$templ6(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_expression\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_self_closing_element\n\n_jsx$trackAttribute(_jsx$el0, \"tabindex\", () => i === cellKeys().rows.length - 1 ? -1 : undefined);\n_jsx$addLocalEvent(_jsx$el0, \"click\", (ev) => selectRow(ev, fromAlphaLower(row())));\n_jsx$trackCssProperty(_jsx$el0, \"height\", () => `${getEffectiveCellHeight(fromAlphaLower(row()))}px`);\n_jsx$insertChild(_jsx$el1, () => row());\n_jsx$setAttribute(_jsx$el2, \"class\", `${RESIZE_STYLE} cursor-row-resize left-0 bottom-0 w-full h-3`);\n_jsx$addLocalEvent(_jsx$el2, \"mousedown\", (ev) => startRowResize(ev, row()));\n_jsx$addGlobalEvent(window._jsx$global_event_mousemove, _jsx$el2, (ev) =>\n                  resizeCell(\n                    ev,\n                    resizedRow,\n                    currentSheet().setRowOffsets.byRef,\n                    CELL_H,\n                  ));\n_jsx$addGlobalEvent(window._jsx$global_event_mouseup, _jsx$el2, endResize);\n_jsx$addLocalEvent(_jsx$el2, \"touchstart\", (ev) => startRowResize(ev, row()));\n_jsx$addGlobalEvent(window._jsx$global_event_touchmove, _jsx$el2, (ev) =>\n                  resizeCell(\n                    ev,\n                    resizedRow,\n                    currentSheet().setRowOffsets.byRef,\n                    CELL_H,\n                  ));\n_jsx$addGlobalEvent(window._jsx$global_event_touchend, _jsx$el2, endResize);\n\nreturn _jsx$el0;\n})()\n          ), }));\n\nreturn _jsx$el0;\n})(), ]\n\n  );\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\n\nconst _jsx$templ2 = _jsx$template(`<label class=\"flex gap-2 pl-6 items-center focus-children outlined\"><i>\uF1EC</i><textarea class=\"w-full font-mono py-1 outline-none resize-none max-h-20\" rows=\"1\"></textarea></label>`);\n\nimport {\n  cellText,\n  currentSheet,\n  setCellInputEl,\n  setCellText,\n  setIsCellInputVisible,\n  positionCellInput,\n  cellInputInfo,\n  computeCells,\n  lastFormulaRegion,\n} from \"./state\";\nimport { getCellIdx } from \"./utils\";\nimport { selectedFont } from \"./FontSelector\";\n\nexport default function CellInput() {\n  let shouldSave = true;\n\n  function addTextCell() {\n    setIsCellInputVisible(false);\n\n    if (!shouldSave) {\n      shouldSave = true;\n      setCellText(\"\");\n      return;\n    }\n\n    const text = cellText();\n    const idx = getCellIdx(cellInputInfo().col, cellInputInfo().row);\n\n    if (text) {\n      currentSheet().setTextCells.byRef((cells) => {\n        cells[idx] = {\n          text,\n          computed: text,\n          style: { ...selectedFont() },\n        };\n\n        computeCells(cells);\n      });\n    } else {\n      currentSheet().setTextCells.byRef((cells) => delete cells[idx]);\n    }\n\n    setCellText(\"\");\n  }\n\n  function onInput(this: HTMLTextAreaElement) {\n    setCellText(this.value);\n    this.style.height = \"\";\n    this.style.height = `${this.scrollHeight}px`;\n  }\n\n  function onSubmit(this: HTMLTextAreaElement, ev: KeyboardEvent) {\n    if (ev.key === \"Enter\" && !ev.shiftKey) {\n      ev.preventDefault();\n      this.blur();\n    } else if (ev.key === \"Escape\") {\n      ev.preventDefault();\n      shouldSave = false;\n      this.blur();\n    }\n  }\n\n  function onKeyUp(this: HTMLTextAreaElement, ev: KeyboardEvent) {\n    if (\n      ev.key === \"Shift\" ||\n      ev.key === \"Control\" ||\n      ev.key === \"Alt\" ||\n      ev.key === \"Meta\"\n    )\n      return;\n\n    lastFormulaRegion.start = this.selectionStart;\n    lastFormulaRegion.end = this.selectionEnd;\n    lastFormulaRegion.text = this.value;\n  }\n\n  function onFocus() {\n    positionCellInput();\n    setIsCellInputVisible(true);\n  }\n\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ2(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_text\nconst _jsx$el3 = _jsx$el1.nextSibling; // jsx_self_closing_element\n\nsetCellInputEl(_jsx$el3);\n_jsx$trackAttribute(_jsx$el3, \"value\", () => cellText());\n_jsx$addLocalEvent(_jsx$el3, \"keydown\", onSubmit);\n_jsx$addLocalEvent(_jsx$el3, \"keyup\", onKeyUp);\n_jsx$addLocalEvent(_jsx$el3, \"input\", onInput);\n_jsx$addLocalEvent(_jsx$el3, \"focus\", onFocus);\n_jsx$addLocalEvent(_jsx$el3, \"blur\", addTextCell);\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { trackClass as _jsx$trackClass } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ1 = _jsx$template(`<dialog class=\"outlined absolute h-auto left-1/2 top-1/2 -translate-1/2 grid-auto-row gap-2 justify-center items-center px-8 py-4 bg-zinc-200 text-zinc-800 dark:bg-zinc-800 dark:text-zinc-100 rounded-md\"><slot></slot></dialog>`);\n\nimport Portal from \"jsx/components/Portal\";\n\ntype AlertProps = {\n  open: boolean;\n};\n\nexport default function Alert(props: AlertProps) {\n  return (\n    (() => {\nPortal.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ1(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\n\n_jsx$trackAttribute(_jsx$el0, \"open\", () => props.open);\n_jsx$trackClass(_jsx$el0, \"grid\", () => props.open);\n_jsx$insertChild(_jsx$el1, arguments[1]?.[\"default\"]?.());\n\nreturn _jsx$el0;\n})()]}\nconst _jsx$el0 = Portal({to: \"[data-alerts]\", }, Portal.$$slots);\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { createTransition as _jsx$createTransition } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { trackCssProperty as _jsx$trackCssProperty } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ8 = _jsx$template(`<div class=\"flex flex-col gap-1 outlined rounded-sm overflow-hidden relative ml-auto transition-[translate] -translate-y-[calc(100%+30px)] duration-500 min-w-40 max-w-70 bg-zinc-100 dark:bg-zinc-900\"><header><i><!></i><slot name=\"header\"></slot><button data-icon type=\"button\" class=\"compact plain pl-4 pr-3 text-xs ml-auto\">x</button></header><article class=\"px-2 pb-4 overflow-auto max-h-40\"><slot></slot></article><div class=\"absolute left-0 bottom-0 w-full h-1 bg-zinc-900/25 dark:bg-zinc-100/25\"><div></div></div></div>`);\n\nimport { ref, watchFn } from \"jsx\";\nimport Portal from \"jsx/components/Portal\";\n\nconst levelColors = {\n  info: \"bg-indigo-500 text-zinc-100 dark:bg-emerald-500 dark:text-zinc-900\",\n  warn: \"bg-yellow-500 text-zinc-900\",\n  error: \"bg-rose-500 text-zinc-100\",\n};\n\nconst levelIcons = {\n  info: \"\uF05A\",\n  warn: \"\uF06A\",\n  error: \"\uF071\",\n};\n\ntype ToastProps = {\n  open: boolean;\n  onChange: (open: boolean) => void;\n  level: keyof typeof levelColors;\n};\n\nconst intervalStep = 10;\nconst duration = 3e3;\n\nexport default function Toast(props: ToastProps) {\n  const [progress, setProgress] = ref(0);\n\n  let timeout = -1;\n  let interval = -1;\n  let elapsed = 0;\n\n  watchFn(\n    () => props.open,\n    () => {\n      if (!props.open) return;\n\n      setProgress(100);\n      elapsed = 0;\n\n      clearInterval(interval);\n      interval = setInterval(() => {\n        setProgress(100 - (elapsed / duration) * 100);\n        elapsed += intervalStep;\n        if (elapsed >= duration) clearInterval(interval);\n      }, intervalStep);\n\n      clearTimeout(timeout);\n      timeout = setTimeout(close, duration);\n    },\n  );\n\n  function close() {\n    props.onChange(false);\n    elapsed = 0;\n    clearInterval(interval);\n    clearTimeout(timeout);\n  }\n\n  return (\n    (() => {\nPortal.$$slots = {default: () => [(() => {\n\nconst _jsx$el0 = _jsx$createTransition(document.createComment(\"\"), (() => {\nconst _jsx$el0 = _jsx$templ8(); // root[false]/component[true]/conditional[false]/transition[true]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_element\nconst _jsx$el3 = _jsx$el2.firstChild; // jsx_expression\nconst _jsx$el4 = _jsx$el2.nextSibling; // jsx_self_closing_element\nconst _jsx$el5 = _jsx$el4.nextSibling; // jsx_element\nconst _jsx$el6 = _jsx$el5.firstChild; // jsx_text\nconst _jsx$el7 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el8 = _jsx$el7.firstChild; // jsx_self_closing_element\nconst _jsx$el9 = _jsx$el7.nextSibling; // jsx_element\nconst _jsx$el10 = _jsx$el9.firstChild; // jsx_self_closing_element\n\n_jsx$setAttribute(_jsx$el1, \"class\", `flex justify-end pl-3 gap-2 ${levelColors[props.level]}`);\n_jsx$insertChild(_jsx$el3, () => levelIcons[props.level]);\n_jsx$insertChild(_jsx$el4, arguments[1]?.[\"header\"]?.());\n_jsx$addLocalEvent(_jsx$el5, \"click\", close);\n_jsx$insertChild(_jsx$el8, arguments[1]?.[\"default\"]?.());\n_jsx$setAttribute(_jsx$el10, \"class\", `h-full ${levelColors[props.level]}`);\n_jsx$trackCssProperty(_jsx$el10, \"width\", () => `${progress()}%`);\n\nreturn _jsx$el0;\n}), () => props.open, \"slide\");\n\nreturn _jsx$el0;\n})()]}\nconst _jsx$el0 = Portal({to: \"[data-toasts]\", }, Portal.$$slots);\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { trackClass as _jsx$trackClass } from \"jsx\";\nimport { trackAttribute as _jsx$trackAttribute } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { trackCssProperty as _jsx$trackCssProperty } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ16 = _jsx$template(`<p class=\"text-wrap text-center\">You can only use letters, digits and underscores</p>`);\nconst _jsx$templ8 = _jsx$template(`<p>Are you sure you want to delete<!><strong><!></strong>?</p>`);\nconst _jsx$templ18 = _jsx$template(`<p>ALERT: <!></p>`);\nconst _jsx$templ20 = _jsx$template(`<footer class=\"grid grid-cols-[auto_minmax(0,1fr)] bg-zinc-200 dark:bg-zinc-800 outlined\"><button type=\"button\" data-icon title=\"Add new sheet\" class=\"plain dark:text-emerald-500 hover:dark:text-emerald-200 text-indigo-500 hover:text-indigo-700 h-full w-[56.5px] h-full\">+</button><nav role=\"tablist\" class=\"relative flex gap-1 z-15 pr-3 pb-1 overflow-x-auto\"><!><input class=\"absolute\"/></nav><!><!><!></footer>`);\nconst _jsx$templ13 = _jsx$template(`<menu class=\"grid grid-cols-2 gap-2\"><button type=\"button\" class=\"no-color rounded-sm text-zinc-100 bg-indigo-700 hover:bg-indigo-500 dark:text-zinc-900 dark:bg-emerald-500 dark:hover:bg-emerald-400\"><strong>YES</strong></button><button type=\"button\" class=\"no-color rounded-sm text-zinc-100 bg-red-800 hover:bg-red-600 dark:text-zinc-900 dark:bg-red-500 dark:hover:bg-red-400\"><strong>NO</strong></button></menu>`);\nconst _jsx$templ3 = _jsx$template(`<span data-button class=\"compact grid grid-cols-[minmax(0,1fr)_auto] rounded-b-sm dark:bg-zinc-800 bg-zinc-100 flex min-w-24\"><a role=\"tab\" class=\"py-1 pl-2\"><!></a><button data-icon type=\"button\" class=\"plain px-2 h-full text-red-800 hover:text-red-600 dark:text-red-300 dark:hover:text-red-400\">\uF1F8</button></span>`);\nconst _jsx$templ15 = _jsx$template(`<strong>Invalid name!</strong>`);\n\nimport { ref } from \"jsx\";\nimport For from \"jsx/components/For\";\nimport {\n  addSheet,\n  currentSheet,\n  delSheet,\n  setCurrentSheet,\n  sheets,\n} from \"./state\";\nimport Alert from \"./Alert\";\nimport Dbg from \"./Dbg\";\nimport { SHEET_NAME_PATTERN_STR } from \"./config\";\nimport Toast from \"./Toast\";\n\nexport default function Tabs() {\n  let nameInputEl!: HTMLInputElement;\n  const [nameInput, setNameInput] = ref({ visible: false, x: 0, y: 0 });\n  const [nameInputLen, setNameInputLen] = ref(currentSheet().name().length + 1);\n  const [deleteIdx, setDeleteIdx] = ref(0);\n  const [confirmationVisible, setConfirmationVisible] = ref(false);\n  const [toastOpen, setToastOpen] = ref(false);\n\n  function hideNameInput() {\n    if (!nameInputEl.checkValidity()) return setToastOpen(true);\n\n    setNameInput.byRef((input) => {\n      input.visible = false;\n    });\n\n    if (nameInputEl.value && nameInputEl.value !== currentSheet().name()) {\n      currentSheet().setName(nameInputEl.value);\n    }\n  }\n\n  function askDelete(idx: number) {\n    setDeleteIdx(idx);\n    setConfirmationVisible(true);\n  }\n\n  function confirmDelete() {\n    setConfirmationVisible(false);\n    delSheet(deleteIdx());\n  }\n\n  function newSheet() {\n    addSheet();\n  }\n\n  window.addEventListener(\"hashchange\", () => {\n    const name = decodeURIComponent(location.hash).slice(1);\n    const sheet = sheets().find((s) => s.name() === name);\n    if (sheet) setCurrentSheet(sheet);\n  });\n\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ20(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_text\nconst _jsx$el3 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el4 = _jsx$el3.firstChild; // jsx_self_closing_element\nconst _jsx$el5 = _jsx$el4.nextSibling; // jsx_self_closing_element\nconst _jsx$el6 = _jsx$el3.nextSibling; // jsx_element\nconst _jsx$el7 = _jsx$el6.nextSibling; // jsx_element\nconst _jsx$el8 = _jsx$el7.nextSibling; // jsx_element\n\n_jsx$addLocalEvent(_jsx$el1, \"click\", newSheet);\nFor.$$slots = {};\n_jsx$insertChild(_jsx$el4, For({get each() { return sheets() }, do: (sheet, i) => (\n            (() => {\nconst _jsx$el0 = _jsx$templ3(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_expression\nconst _jsx$el3 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el4 = _jsx$el3.firstChild; // jsx_text\n\n_jsx$trackClass(_jsx$el0, \"selected\", () => currentSheet() === sheet());\n_jsx$trackAttribute(_jsx$el1, \"href\", () => `#${encodeURIComponent(sheet().name())}`);\n_jsx$addLocalEvent(_jsx$el1, \"dblclick\", (ev) => {\n                  setNameInput.byRef((input) => {\n                    input.visible = true;\n                    input.x = ev.currentTarget.offsetLeft;\n                    input.y = ev.currentTarget.offsetTop;\n                  });\n                  nameInputEl.focus();\n                });\n_jsx$insertChild(_jsx$el2, () => sheet().name());\n_jsx$addLocalEvent(_jsx$el3, \"click\", () => askDelete(i));\n_jsx$trackAttribute(_jsx$el3, \"disabled\", () => sheets().length === 1);\n\nreturn _jsx$el0;\n})()\n          ), }));\nnameInputEl = _jsx$el5;\n_jsx$trackClass(_jsx$el5, \"hidden\", () => !nameInput().visible);\n_jsx$trackAttribute(_jsx$el5, \"value\", () => currentSheet().name());\n_jsx$trackCssProperty(_jsx$el5, \"left\", () => `${nameInput().x}px`);\n_jsx$trackCssProperty(_jsx$el5, \"top\", () => `${nameInput().y}px`);\n_jsx$trackCssProperty(_jsx$el5, \"min-width\", () => `${currentSheet().name().length + 1}ch`);\n_jsx$trackCssProperty(_jsx$el5, \"width\", () => `${nameInputLen()}ch`);\n_jsx$setAttribute(_jsx$el5, \"pattern\", `^${SHEET_NAME_PATTERN_STR}+$`);\n_jsx$addLocalEvent(_jsx$el5, \"blur\", hideNameInput);\n_jsx$addLocalEvent(_jsx$el5, \"change\", hideNameInput);\n_jsx$addLocalEvent(_jsx$el5, \"input\", (ev) => setNameInputLen(ev.currentTarget.value.length + 1));\nAlert.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ8(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\nconst _jsx$el3 = _jsx$el2.nextSibling; // jsx_element\nconst _jsx$el4 = _jsx$el3.firstChild; // jsx_expression\nconst _jsx$el5 = _jsx$el3.nextSibling; // jsx_text\n\n_jsx$insertChild(_jsx$el2, \" \");\n_jsx$insertChild(_jsx$el4, () => sheets()[deleteIdx()]?.name());\n\nreturn _jsx$el0;\n})(),(() => {\nconst _jsx$el0 = _jsx$templ13(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_element\nconst _jsx$el3 = _jsx$el2.firstChild; // jsx_text\nconst _jsx$el4 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el5 = _jsx$el4.firstChild; // jsx_element\nconst _jsx$el6 = _jsx$el5.firstChild; // jsx_text\n\n_jsx$addLocalEvent(_jsx$el1, \"click\", confirmDelete);\n_jsx$addLocalEvent(_jsx$el4, \"click\", () => setConfirmationVisible(false));\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el6, Alert({get open() { return confirmationVisible() }, }, Alert.$$slots));\nToast.$$slots = {header: (() => {\nconst _jsx$el0 = _jsx$templ15(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n}), default: () => [(() => {\nconst _jsx$el0 = _jsx$templ16(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el7, Toast({get open() { return toastOpen() }, get onChange() { return setToastOpen }, level: \"error\", }, Toast.$$slots));\nDbg.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ18(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_expression\n\n_jsx$insertChild(_jsx$el2, () => confirmationVisible());\n\nreturn _jsx$el0;\n})()]};\n_jsx$insertChild(_jsx$el8, Dbg({}, Dbg.$$slots));\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { template as _jsx$template } from \"jsx\";\n\nconst _jsx$templ0 = _jsx$template(`<i>\uF576</i>`);\n\nimport { watchFn } from \"jsx\";\nimport {\n  addRegionToSet,\n  parseRegion,\n  regionToQuad,\n  removeRegionFromSet,\n} from \"./region\";\nimport {\n  selectedColor,\n  setSelectedColor,\n  defaultCellColor,\n  currentSheet,\n} from \"./state\";\nimport ColorPicker from \"./ColorPicker\";\n\nexport default function CellColorPicker() {\n  function onColorChange(color: string) {\n    setSelectedColor(color);\n    if (currentSheet().selectedRegions().size === 0) return;\n\n    const regions = currentSheet().colorRegions()[color] ?? new Set();\n    console.log(JSON.stringify([...regions], null, 2));\n    for (const k of currentSheet().selectedRegions()) {\n      const region = parseRegion(k);\n      addRegionToSet(\n        regions,\n        region.startCol,\n        region.startRow,\n        region.endCol,\n        region.endRow,\n      );\n    }\n\n    currentSheet().setColorRegions.byRef((r) => {\n      for (const c in r) {\n        if (c === color) continue;\n        for (const regionStr of regions) {\n          const region = parseRegion(regionStr);\n          removeRegionFromSet(\n            r[c],\n            region.startCol,\n            region.startRow,\n            region.endCol,\n            region.endRow,\n          );\n          if (r[c].size === 0) {\n            delete r[c];\n            delete currentSheet().colorQuads()[c];\n          }\n        }\n      }\n      if (color !== defaultCellColor()) {\n        r[color] = regions;\n\n        currentSheet().setColorQuads.byRef((colors) => {\n          const c = colors[color] ?? [];\n          c.length = 0;\n          for (const k of regions) {\n            c.push(...regionToQuad(parseRegion(k)));\n          }\n          colors[color] = c;\n        });\n      }\n    });\n  }\n\n  watchFn(\n    () => [\n      currentSheet().colorRegions(),\n      currentSheet().colOffsets(),\n      currentSheet().rowOffsets(),\n    ],\n    () => {\n      currentSheet().setColorQuads.byRef((colors) => {\n        for (const c in colors) {\n          if (!currentSheet().colorRegions()[c]) {\n            delete colors[c];\n            continue;\n          }\n\n          const quads = colors[c];\n          quads.length = 0;\n          for (const r of currentSheet().colorRegions()[c]) {\n            quads.push(...regionToQuad(parseRegion(r)));\n          }\n        }\n      });\n    },\n  );\n\n  return (\n    (() => {\nColorPicker.$$slots = {default: () => [(() => {\nconst _jsx$el0 = _jsx$templ0(); // root[false]/component[true]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_text\n\n\nreturn _jsx$el0;\n})()]}\nconst _jsx$el0 = ColorPicker({get defaultColor() { return defaultCellColor() }, get color() { return selectedColor() }, get onChange() { return onColorChange }, }, ColorPicker.$$slots);\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "\n\nimport { parseRegion } from \"./region\";\nimport { sheets } from \"./state\";\nimport type { OffsetMap, TextMap, RegionMap, FontStyle } from \"./types\";\nimport { hexToRgba } from \"./utils\";\nimport {\n  DEFAULT_FONT_FAMILY,\n  DEFAULT_FONT_SIZE,\n  DEFAULT_FONT_COLOR,\n  DEFAULT_FONT_FORMAT,\n} from \"./config\";\n\n// Constants\nconst XLSX_MAGIC = \"XLSX\";\nconst XLSX_VERSION = 3;\nconst HEADER_FIXED = 4 + 2 + 4 + 4; // magic + version + sheetCount + colorCount\nconst LEN16 = 2;\nconst CNT32 = 4;\nconst COLOR_ENTRY_SIZE = 1 + 3;\nconst REGION_BLOCK_SIZE = 1 + 4 + 4 + 2 + 2;\nconst OFFSET_ENTRY_SIZE = 4 + 2;\n\n// Helper IDs for style extras\nconst STYLE_ID_FAMILY = 1;\nconst STYLE_ID_SIZE = 2;\nconst STYLE_ID_COLOR = 3;\nconst STYLE_ID_FORMAT = 4; // New\n\ntype SheetData = {\n  regions: RegionMap;\n  texts: TextMap;\n  rowOffsets: OffsetMap;\n  colOffsets: OffsetMap;\n};\n\ntype Sheets = Record<string, SheetData>;\n\nexport function formatSheetData() {\n  const data: Sheets = {};\n  for (const sheet of sheets()) {\n    data[sheet.name()] = {\n      regions: sheet.colorRegions(),\n      texts: sheet.textCells(),\n      rowOffsets: sheet.rowOffsets(),\n      colOffsets: sheet.colOffsets(),\n    };\n  }\n  return data;\n}\n\n// Encode\nexport function encodeXLSXData(sheets: Sheets): Uint8Array {\n  const encoder = new TextEncoder();\n  // 1) Build global color table\n  const colorMap = new Map<string, number>();\n  const colors: [number, number, number][] = [];\n  for (const { regions } of Object.values(sheets)) {\n    for (const hex of Object.keys(regions)) {\n      if (!colorMap.has(hex)) {\n        const [r, g, b] = hexToRgba(hex).map((v) => Math.floor(v * 256));\n        colorMap.set(hex, colors.length);\n        colors.push([r, g, b]);\n      }\n    }\n  }\n\n  // 2) Prepare sheet blocks\n  type SD = {\n    nameBytes: Uint8Array;\n    regionBlocks: Array<{\n      cid: number;\n      sr: number;\n      sc: number;\n      rs: number;\n      cs: number;\n    }>;\n    textBlocks: Array<{\n      idx: number;\n      textBytes: Uint8Array;\n      flags: number;\n      extras: (Uint8Array | number)[];\n      extraIDs: number[];\n    }>;\n    rowOff: Array<{ i: number; d: number }>;\n    colOff: Array<{ i: number; d: number }>;\n  };\n  const sheetsData: SD[] = [];\n  for (const [\n    name,\n    { regions, texts, rowOffsets, colOffsets },\n  ] of Object.entries(sheets)) {\n    const nameBytes = encoder.encode(name);\n    const regionBlocks = Object.entries(regions).flatMap(([hex, set]) => {\n      const cid = colorMap.get(hex) as number;\n      return Array.from(set).map((key) => {\n        const {\n          startRow: sr,\n          startCol: sc,\n          endRow: er,\n          endCol: ec,\n        } = parseRegion(key);\n        return { cid, sr, sc, rs: er - sr + 1, cs: ec - sc + 1 };\n      });\n    });\n\n    const textBlocks = Object.entries(texts).map(([k, cell]) => {\n      const idx = +k;\n      const textBytes = encoder.encode(cell.text);\n      // pack style flags\n      let flags = 0;\n      if (cell.style.bold) flags |= 1;\n      if (cell.style.italic) flags |= 2;\n      if (cell.style.underline) flags |= 4;\n      if (cell.style.strikethrough) flags |= 8;\n\n      const extras: (Uint8Array | number)[] = [];\n      const extraIDs: number[] = [];\n\n      // family\n      if (cell.style.family !== DEFAULT_FONT_FAMILY) {\n        extraIDs.push(STYLE_ID_FAMILY);\n        const b = encoder.encode(cell.style.family);\n        extras.push(new Uint8Array([b.length, ...b]));\n      }\n      // size\n      if (cell.style.size !== DEFAULT_FONT_SIZE) {\n        extraIDs.push(STYLE_ID_SIZE);\n        extras.push(cell.style.size);\n      }\n      // color\n      if (cell.style.color !== DEFAULT_FONT_COLOR) {\n        extraIDs.push(STYLE_ID_COLOR);\n        const c = encoder.encode(cell.style.color);\n        extras.push(new Uint8Array([c.length, ...c]));\n      }\n      // format\n      if (cell.style.format && cell.style.format !== \"\") {\n        extraIDs.push(STYLE_ID_FORMAT);\n        const fmtBytes = encoder.encode(cell.style.format);\n        extras.push(new Uint8Array([fmtBytes.length, ...fmtBytes]));\n      }\n\n      return { idx, textBytes, flags, extras, extraIDs };\n    });\n\n    const rowOff = Object.entries(rowOffsets).map(([k, v]) => ({\n      i: +k,\n      d: v,\n    }));\n    const colOff = Object.entries(colOffsets).map(([k, v]) => ({\n      i: +k,\n      d: v,\n    }));\n\n    sheetsData.push({ nameBytes, regionBlocks, textBlocks, rowOff, colOff });\n  }\n\n  // 3) compute total size\n  let size = HEADER_FIXED + colors.length * COLOR_ENTRY_SIZE;\n  for (const s of sheetsData) {\n    size += LEN16 + s.nameBytes.length;\n    size += CNT32 * 4;\n    size += s.regionBlocks.length * REGION_BLOCK_SIZE;\n    for (const t of s.textBlocks) {\n      size += 4 + 2 + t.textBytes.length + 1 + 1;\n      for (let j = 0; j < t.extras.length; j++) {\n        const data = t.extras[j];\n        size += 1;\n        if (typeof data === \"number\") {\n          size += 2;\n        } else {\n          size += data.byteLength;\n        }\n      }\n    }\n    size += s.rowOff.length * OFFSET_ENTRY_SIZE;\n    size += s.colOff.length * OFFSET_ENTRY_SIZE;\n  }\n\n  const buf = new ArrayBuffer(size);\n  const view = new DataView(buf);\n  const u8 = new Uint8Array(buf);\n  let o = 0;\n\n  // HEADER\n  u8.set(\n    [...XLSX_MAGIC].map((c) => c.charCodeAt(0)),\n    o,\n  );\n  o += 4;\n  view.setUint16(o, XLSX_VERSION, true);\n  o += 2;\n  view.setUint32(o, sheetsData.length, true);\n  o += 4;\n  view.setUint32(o, colors.length, true);\n  o += 4;\n\n  // COLORS\n  colors.forEach((rgb, i) => {\n    view.setUint8(o++, i);\n    for (const c of rgb) view.setUint8(o++, c);\n  });\n\n  // SHEETS\n  for (const s of sheetsData) {\n    view.setUint16(o, s.nameBytes.length, true);\n    o += 2;\n    u8.set(s.nameBytes, o);\n    o += s.nameBytes.length;\n\n    view.setUint32(o, s.regionBlocks.length, true);\n    o += 4;\n    view.setUint32(o, s.textBlocks.length, true);\n    o += 4;\n    view.setUint32(o, s.rowOff.length, true);\n    o += 4;\n    view.setUint32(o, s.colOff.length, true);\n    o += 4;\n\n    for (const r of s.regionBlocks) {\n      view.setUint8(o++, r.cid);\n      view.setUint32(o, r.sr, true);\n      o += 4;\n      view.setUint32(o, r.sc, true);\n      o += 4;\n      view.setUint16(o, r.rs, true);\n      o += 2;\n      view.setUint16(o, r.cs, true);\n      o += 2;\n    }\n\n    for (const t of s.textBlocks) {\n      view.setUint32(o, t.idx, true);\n      o += 4;\n      view.setUint16(o, t.textBytes.length, true);\n      o += 2;\n      u8.set(t.textBytes, o);\n      o += t.textBytes.length;\n\n      view.setUint8(o, t.flags);\n      o += 1;\n      view.setUint8(o, t.extras.length);\n      o += 1;\n\n      for (let j = 0; j < t.extras.length; j++) {\n        view.setUint8(o, t.extraIDs[j]);\n        o += 1;\n        const data = t.extras[j];\n        if (typeof data === \"number\") {\n          view.setUint16(o, data, true);\n          o += 2;\n        } else {\n          u8.set(data, o);\n          o += data.byteLength;\n        }\n      }\n    }\n\n    for (const r of s.rowOff) {\n      view.setUint32(o, r.i, true);\n      o += 4;\n      view.setInt16(o, r.d, true);\n      o += 2;\n    }\n    for (const c of s.colOff) {\n      view.setUint32(o, c.i, true);\n      o += 4;\n      view.setInt16(o, c.d, true);\n      o += 2;\n    }\n  }\n\n  return new Uint8Array(buf, 0, o);\n}\n\n// Decode\nexport function decodeXLSXData(data: Uint8Array): Sheets {\n  const decoder = new TextDecoder();\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n  let o = 0;\n\n  const magic = decoder.decode(data.subarray(o, o + 4));\n  if (magic !== XLSX_MAGIC) throw new Error(\"Invalid XLSX_MAGIC\");\n  o += 4;\n  const version = view.getUint16(o, true);\n  o += 2;\n  if (version !== XLSX_VERSION) throw new Error(\"Unsupported XLSX_VERSION\");\n  const sheetCount = view.getUint32(o, true);\n  o += 4;\n  const colorCount = view.getUint32(o, true);\n  o += 4;\n\n  const colorTable: string[] = [];\n  for (let i = 0; i < colorCount; i++) {\n    const id = view.getUint8(o++);\n    const r = view.getUint8(o++);\n    const g = view.getUint8(o++);\n    const b = view.getUint8(o++);\n    colorTable[id] =\n      `#${[r, g, b].map((x) => x.toString(16).padStart(2, \"0\")).join(\"\")}`;\n  }\n\n  const result: Sheets = {};\n  for (let s = 0; s < sheetCount; s++) {\n    const nameLen = view.getUint16(o, true);\n    o += 2;\n    const name = decoder.decode(data.subarray(o, o + nameLen));\n    o += nameLen;\n\n    const rCnt = view.getUint32(o, true);\n    o += 4;\n    const tCnt = view.getUint32(o, true);\n    o += 4;\n    const roCnt = view.getUint32(o, true);\n    o += 4;\n    const coCnt = view.getUint32(o, true);\n    o += 4;\n\n    const regions: RegionMap = {};\n    for (let i = 0; i < rCnt; i++) {\n      const cid = view.getUint8(o++);\n      const sr = view.getUint32(o, true);\n      o += 4;\n      const sc = view.getUint32(o, true);\n      o += 4;\n      const rs = view.getUint16(o, true);\n      o += 2;\n      const cs = view.getUint16(o, true);\n      o += 2;\n      const er = sr + rs - 1;\n      const ec = sc + cs - 1;\n      const key = `${sc},${sr}:${ec},${er}`;\n      const hex = colorTable[cid];\n      if (!regions[hex]) regions[hex] = new Set();\n      regions[hex].add(key);\n    }\n\n    const texts: TextMap = {};\n    for (let i = 0; i < tCnt; i++) {\n      const idx = view.getUint32(o, true);\n      o += 4;\n      const L = view.getUint16(o, true);\n      o += 2;\n      const str = decoder.decode(data.subarray(o, o + L));\n      o += L;\n      const flags = view.getUint8(o++);\n      const extraCount = view.getUint8(o++);\n\n      const style: FontStyle = {\n        family: DEFAULT_FONT_FAMILY,\n        size: DEFAULT_FONT_SIZE,\n        color: DEFAULT_FONT_COLOR,\n        bold: !!(flags & 1),\n        italic: !!(flags & 2),\n        underline: !!(flags & 4),\n        strikethrough: !!(flags & 8),\n        format: DEFAULT_FONT_FORMAT,\n      };\n\n      for (let e = 0; e < extraCount; e++) {\n        const id = view.getUint8(o++);\n        if (id === STYLE_ID_FAMILY) {\n          const len = view.getUint8(o++);\n          style.family = decoder.decode(data.subarray(o, o + len));\n          o += len;\n        } else if (id === STYLE_ID_SIZE) {\n          style.size = view.getUint16(o, true);\n          o += 2;\n        } else if (id === STYLE_ID_COLOR) {\n          const len = view.getUint8(o++);\n          style.color = decoder.decode(data.subarray(o, o + len));\n          o += len;\n        } else if (id === STYLE_ID_FORMAT) {\n          const len = view.getUint8(o++);\n          style.format = decoder.decode(data.subarray(o, o + len));\n          o += len;\n        }\n      }\n\n      texts[idx] = { text: str, style, computed: \"\" };\n    }\n\n    const rowOffsets: OffsetMap = {};\n    for (let i = 0; i < roCnt; i++) {\n      const idx = view.getUint32(o, true);\n      o += 4;\n      const d = view.getInt16(o, true);\n      o += 2;\n      rowOffsets[idx] = d;\n    }\n    const colOffsets: OffsetMap = {};\n    for (let i = 0; i < coCnt; i++) {\n      const idx = view.getUint32(o, true);\n      o += 4;\n      const d = view.getInt16(o, true);\n      o += 2;\n      colOffsets[idx] = d;\n    }\n\n    result[name] = { regions, texts, rowOffsets, colOffsets };\n  }\n\n  return result;\n}\n", "import { addLocalEvent as _jsx$addLocalEvent } from \"jsx\";\nimport { trackClass as _jsx$trackClass } from \"jsx\";\nimport { setAttribute as _jsx$setAttribute } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { insertChild as _jsx$insertChild } from \"jsx\";\n\nconst _jsx$templ20 = _jsx$template(`<header class=\"grid grid-cols-[auto_1fr_max-content] items-center gap-2 w-full p-2 bg-stone-300 text-zinc-900 dark:bg-zinc-950 dark:text-stone-100\"><h1 class=\"text-black text-xl text-inherit font-bold px-3\"><i>\uF0CE</i> Sheets</h1><section class=\"overflow-auto flex h-full gap-2 *:flex-none *:w-max scrollbar-hidden min-[1245px]:justify-end\"><button data-icon type=\"button\" class=\"rounded-square\" title=\"Export\">\uF56E</button><label data-button data-icon title=\"Import\" class=\"rounded-square leading-[27px]\">\uF56F<input type=\"file\" class=\"hidden\"/></label><div></div><!><!><div></div><button data-icon type=\"button\" class=\"rounded-square\" title=\"Clear selection\">\uF1F8</button><button data-icon type=\"button\" class=\"rounded-square\" title=\"Column left\">\uF0D9</button><button data-icon type=\"button\" class=\"rounded-square\" title=\"Column right\">\uF0DA</button><button data-icon type=\"button\" class=\"rounded-square\" title=\"Row down\">\uF0DD</button><button data-icon type=\"button\" class=\"rounded-square\" title=\"Row up\">\uF0D8</button><div></div><button data-icon type=\"button\" class=\"rounded-square\" title=\"Debug Info\">\uF121</button><div></div><button data-icon type=\"button\" class=\"min-w-4 rounded-square\"><!></button></section><button data-icon type=\"button\" class=\"rounded-sm min-[1245px]:hidden!\">\uF101</button></header>`);\n\nimport { ref } from \"jsx\";\nimport \"./render\";\nimport CellColorPicker from \"./CellColorPicker\";\nimport FontSelector from \"./FontSelector\";\nimport {\n  computeCells,\n  createSheet,\n  currentSheet,\n  defaultCellColor,\n  forEachSelectedTextCell,\n  getSelectedRegion,\n  prefersDark,\n  setCurrentSheet,\n  setPrefersDark,\n  setSheets,\n} from \"./state\";\nimport { decodeXLSXData, encodeXLSXData, formatSheetData } from \"./saves\";\nimport { DIVIDER_STYLE, MAX_COLS } from \"./config\";\nimport { Parser } from \"./sheetFormula/parser\";\nimport { shiftAST, stringify } from \"./sheetFormula/evaluator\";\nimport { parseRegion, regionToQuad } from \"./region\";\n\nexport const [dbg, setDbg] = ref(false);\n\nexport default function Header() {\n  let controlsEl!: HTMLElement;\n\n  function insertLine(isRow: boolean, delta: number) {\n    const region = getSelectedRegion();\n    const insertAt = (isRow ? region.startRow : region.startCol) + delta;\n\n    const getDim = isRow\n      ? (i: number) => Math.floor(i / MAX_COLS)\n      : (i: number) => i % MAX_COLS;\n\n    const getNewIndex = isRow\n      ? (i: number) =>\n          (Math.floor(i / MAX_COLS) + 1) * MAX_COLS + (i % MAX_COLS)\n      : (i: number) =>\n          Math.floor(i / MAX_COLS) * MAX_COLS + ((i % MAX_COLS) + 1);\n\n    currentSheet().setTextCells.byRef((textCells) => {\n      const cellIndices = Object.keys(textCells)\n        .map(Number)\n        .sort((a, b) => b - a);\n\n      for (const i of cellIndices) {\n        if (getDim(i) >= insertAt) {\n          const newIdx = getNewIndex(i);\n          textCells[newIdx] = textCells[i];\n          delete textCells[i];\n        }\n      }\n\n      for (const idxStr of Object.keys(textCells)) {\n        const idx = Number(idxStr);\n        let { text, computed, style } = textCells[idx];\n\n        if (text.startsWith(\"=\")) {\n          const ast = new Parser(text.slice(1)).parseExpression();\n          const shifted = shiftAST(ast, isRow, insertAt);\n          text = `=${stringify(shifted)}`;\n          textCells[idx] = { text, computed, style };\n        }\n      }\n\n      computeCells(textCells);\n    });\n  }\n\n  function clearSelection() {\n    currentSheet().setTextCells.byRef((textCells) => {\n      forEachSelectedTextCell(textCells, (_, idx) => delete textCells[idx]);\n      computeCells(textCells);\n    });\n  }\n\n  function exportData() {\n    const encoded = encodeXLSXData(formatSheetData());\n    const blob = new Blob([encoded], { type: \"application/octet-stream\" });\n    const url = URL.createObjectURL(blob);\n\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"spreadsheet\";\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }\n\n  function importData(this: HTMLInputElement) {\n    const file = this.files?.[0];\n    if (!file) return;\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      if (!(reader.result instanceof ArrayBuffer)) return;\n      const data = new Uint8Array(reader.result);\n      const decoded = decodeXLSXData(data);\n\n      setSheets.byRef((sheets) => {\n        sheets.length = 0;\n        for (const name in decoded) {\n          const s = createSheet(name);\n          const d = decoded[name];\n\n          s.setColOffsets(d.colOffsets);\n          s.setRowOffsets(d.rowOffsets);\n          s.setTextCells(d.texts);\n          s.setColorRegions(d.regions);\n\n          s.setColorQuads.byRef((colors) => {\n            for (const color in d.regions) {\n              if (color !== defaultCellColor()) {\n                const c = colors[color] ?? [];\n                c.length = 0;\n                for (const k of d.regions[color]) {\n                  c.push(...regionToQuad(parseRegion(k)));\n                }\n                colors[color] = c;\n              }\n            }\n          });\n          computeCells(s.textCells());\n          sheets.push(s);\n        }\n\n        computeCells(sheets[0].textCells());\n        setCurrentSheet(sheets[0]);\n      });\n    };\n\n    reader.readAsArrayBuffer(file);\n  }\n\n  return (\n    (() => {\nconst _jsx$el0 = _jsx$templ20(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_element\nconst _jsx$el2 = _jsx$el1.firstChild; // jsx_element\nconst _jsx$el3 = _jsx$el2.firstChild; // jsx_text\nconst _jsx$el4 = _jsx$el2.nextSibling; // jsx_text\nconst _jsx$el5 = _jsx$el1.nextSibling; // jsx_element\nconst _jsx$el6 = _jsx$el5.firstChild; // jsx_element\nconst _jsx$el7 = _jsx$el6.firstChild; // jsx_text\nconst _jsx$el8 = _jsx$el6.nextSibling; // jsx_element\nconst _jsx$el9 = _jsx$el8.firstChild; // jsx_text\nconst _jsx$el10 = _jsx$el9.nextSibling; // jsx_self_closing_element\nconst _jsx$el11 = _jsx$el8.nextSibling; // jsx_self_closing_element\nconst _jsx$el12 = _jsx$el11.nextSibling; // jsx_self_closing_element\nconst _jsx$el13 = _jsx$el12.nextSibling; // jsx_self_closing_element\nconst _jsx$el14 = _jsx$el13.nextSibling; // jsx_self_closing_element\nconst _jsx$el15 = _jsx$el14.nextSibling; // jsx_element\nconst _jsx$el16 = _jsx$el15.firstChild; // jsx_text\nconst _jsx$el17 = _jsx$el15.nextSibling; // jsx_element\nconst _jsx$el18 = _jsx$el17.firstChild; // jsx_text\nconst _jsx$el19 = _jsx$el17.nextSibling; // jsx_element\nconst _jsx$el20 = _jsx$el19.firstChild; // jsx_text\nconst _jsx$el21 = _jsx$el19.nextSibling; // jsx_element\nconst _jsx$el22 = _jsx$el21.firstChild; // jsx_text\nconst _jsx$el23 = _jsx$el21.nextSibling; // jsx_element\nconst _jsx$el24 = _jsx$el23.firstChild; // jsx_text\nconst _jsx$el25 = _jsx$el23.nextSibling; // jsx_self_closing_element\nconst _jsx$el26 = _jsx$el25.nextSibling; // jsx_element\nconst _jsx$el27 = _jsx$el26.firstChild; // jsx_text\nconst _jsx$el28 = _jsx$el26.nextSibling; // jsx_self_closing_element\nconst _jsx$el29 = _jsx$el28.nextSibling; // jsx_element\nconst _jsx$el30 = _jsx$el29.firstChild; // jsx_expression\nconst _jsx$el31 = _jsx$el5.nextSibling; // jsx_element\nconst _jsx$el32 = _jsx$el31.firstChild; // jsx_text\n\ncontrolsEl = _jsx$el5;\n_jsx$addLocalEvent(_jsx$el6, \"click\", exportData);\n_jsx$addLocalEvent(_jsx$el10, \"change\", importData);\n_jsx$setAttribute(_jsx$el11, \"class\", DIVIDER_STYLE);\nFontSelector.$$slots = {};\n_jsx$insertChild(_jsx$el12, FontSelector({}));\nCellColorPicker.$$slots = {};\n_jsx$insertChild(_jsx$el13, CellColorPicker({}));\n_jsx$setAttribute(_jsx$el14, \"class\", DIVIDER_STYLE);\n_jsx$addLocalEvent(_jsx$el15, \"click\", clearSelection);\n_jsx$addLocalEvent(_jsx$el17, \"click\", () => insertLine(false, 0));\n_jsx$addLocalEvent(_jsx$el19, \"click\", () => insertLine(false, 1));\n_jsx$addLocalEvent(_jsx$el21, \"click\", () => insertLine(true, 1));\n_jsx$addLocalEvent(_jsx$el23, \"click\", () => insertLine(true, 0));\n_jsx$setAttribute(_jsx$el25, \"class\", DIVIDER_STYLE);\n_jsx$trackClass(_jsx$el26, \"selected\", () => dbg());\n_jsx$addLocalEvent(_jsx$el26, \"click\", () => setDbg(!dbg()));\n_jsx$setAttribute(_jsx$el28, \"class\", DIVIDER_STYLE);\n_jsx$addLocalEvent(_jsx$el29, \"click\", () => setPrefersDark(!prefersDark()));\n_jsx$insertChild(_jsx$el30, () => prefersDark() ? \"\uF186\" : \"\uF185\");\n_jsx$addLocalEvent(_jsx$el31, \"click\", () =>\n          controlsEl.scrollTo({\n            left: controlsEl.scrollWidth,\n            behavior: \"smooth\",\n          }));\n\nreturn _jsx$el0;\n})()\n  );\n}\n", "import { insertChild as _jsx$insertChild } from \"jsx\";\nimport { template as _jsx$template } from \"jsx\";\nimport { addGlobalEvent as _jsx$addGlobalEvent } from \"jsx\";\nimport { createGlobalEvent as _jsx$createGlobalEvent } from \"jsx\";\n\nconst _jsx$templ2 = _jsx$template(`<div data-toasts class=\"absolute px-4 left-0 bottom-0 z-100 w-dvw h-0\"></div>`);\nconst _jsx$templ1 = _jsx$template(`<div data-alerts class=\"absolute left-0 top-0 z-100 h-dvh w-dvw not-has-[[open=true]]:hidden bg-slate-950/50 backdrop-blur-xs\"></div>`);\nconst _jsx$templ10 = _jsx$template(`<main class=\"grid grid-rows-[auto_1fr_auto] w-full h-full select-none\"><!><!><article class=\"font-mono overflow-hidden max-w-dvw max-h-dvh grid grid-rows-[auto_minmax(0,1fr)] grid-cols-[max-content_minmax(0,1fr)]\"><!><!><!></article><!></main>`);\n\nwindow._jsx$global_event_keydown = window._jsx$global_event_keydown || _jsx$createGlobalEvent(\"keydown\");\nwindow._jsx$global_event_keyup = window._jsx$global_event_keyup || _jsx$createGlobalEvent(\"keyup\");\nimport \"./render\";\nimport Canvas from \"./Canvas\";\nimport Dialog from \"./Dialog\";\nimport GridControls from \"./GridControls\";\nimport GridAxes from \"./GridAxes\";\nimport CellInput from \"./CellInput\";\nimport Tabs from \"./Tabs\";\nimport { setCtrlPressed, ctrlPressed, currentSheet } from \"./state\";\nimport { isTouchscreen } from \"./utils\";\nimport { serializeRegion } from \"./region\";\nimport { MAX_COLS, MAX_ROWS } from \"./config\";\nimport Header, { dbg, setDbg } from \"./Header\";\n\ndocument.body.append(\n  (() => {\nDialog.$$slots = {}\nconst _jsx$el0 = Dialog({class: \"min-w-sm\", title: \"Debug\", id: \"dbg\", get open() { return dbg() }, x: 100, y: 100, draggable: true, get onClose() { return setDbg }, });\n\nreturn _jsx$el0;\n})(),\n  (() => {\nconst _jsx$el0 = _jsx$templ1(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\n\n\nreturn _jsx$el0;\n})(),\n  (() => {\nconst _jsx$el0 = _jsx$templ2(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\n\n\nreturn _jsx$el0;\n})(),\n);\n\nfunction onKeyDown(ev: KeyboardEvent) {\n  if (ev.key === \"?\") {\n    setDbg(!dbg());\n  } else if (ev.key === \"Control\" && !isTouchscreen) {\n    setCtrlPressed(true);\n  } else if (!isTouchscreen && ev.key.toLowerCase() === \"a\" && ctrlPressed()) {\n    currentSheet().setLastSelectedRegions.byRef((sel) => {\n      sel.clear();\n      sel.add(\n        serializeRegion({\n          startCol: 0,\n          startRow: 0,\n          endCol: MAX_COLS,\n          endRow: MAX_ROWS,\n        }),\n      );\n    });\n  }\n}\n\nfunction onKeyUp(ev: KeyboardEvent) {\n  if (ev.key === \"Control\" && !isTouchscreen) {\n    setCtrlPressed(false);\n  }\n}\n\ndocument.body.prepend(\n  (() => {\nconst _jsx$el0 = _jsx$templ10(); // root[true]/component[false]/conditional[false]/transition[false]/template-child[false]\nconst _jsx$el1 = _jsx$el0.firstChild; // jsx_self_closing_element\nconst _jsx$el2 = _jsx$el1.nextSibling; // jsx_self_closing_element\nconst _jsx$el3 = _jsx$el2.nextSibling; // jsx_element\nconst _jsx$el4 = _jsx$el3.firstChild; // jsx_self_closing_element\nconst _jsx$el5 = _jsx$el4.nextSibling; // jsx_self_closing_element\nconst _jsx$el6 = _jsx$el5.nextSibling; // jsx_self_closing_element\nconst _jsx$el7 = _jsx$el3.nextSibling; // jsx_self_closing_element\n\n_jsx$addGlobalEvent(window._jsx$global_event_keydown, _jsx$el0, onKeyDown);\n_jsx$addGlobalEvent(window._jsx$global_event_keyup, _jsx$el0, onKeyUp);\nHeader.$$slots = {};\n_jsx$insertChild(_jsx$el1, Header({}));\nCellInput.$$slots = {};\n_jsx$insertChild(_jsx$el2, CellInput({}));\nGridAxes.$$slots = {};\n_jsx$insertChild(_jsx$el4, GridAxes({}));\nGridControls.$$slots = {};\n_jsx$insertChild(_jsx$el5, GridControls({}));\nCanvas.$$slots = {};\n_jsx$insertChild(_jsx$el6, Canvas({}));\nTabs.$$slots = {};\n_jsx$insertChild(_jsx$el7, Tabs({}));\n\nreturn _jsx$el0;\n})(),\n);\n"],
  "mappings": "MAAA,IAAMA,GAAU,CAAC,EAyBV,SAASC,EAASC,EAA2B,CAClD,IAAMC,EAAkCC,GAAU,CAChDC,GAAQC,CAAO,EACfN,GAAQ,KAAKM,CAAO,EACpB,GAAI,CACFJ,EAAGE,CAAK,CACV,QAAA,CAEEJ,GAAQ,IAAI,CACd,CACF,EAEMM,EAAsB,CAC1B,QAAAH,EACA,aAAc,IAAI,GACpB,EAEA,OAAAA,EAAQ,MAAc,EAEfG,CACT,CAMO,SAASC,GAAaC,EAA6CN,EAA2B,CACnG,IAAMC,EAAkCC,GAAU,CAChDC,GAAQC,CAAO,EAEfE,EAAK,QAAQC,GAAO,CAClBC,GAAUJ,EAASG,EAAI,SAAS,CAClC,CAAC,EAED,GAAI,CACFP,EAAGE,CAAK,CACV,QAAA,CAEEJ,GAAQ,IAAI,CACd,CACF,EAEMM,EAAsB,CAC1B,QAAAH,EACA,aAAc,IAAI,GACpB,EAEA,OAAAA,EAAQ,MAAc,EAEfG,CACT,CAKO,SAASK,EAAWH,EAAqBN,EAA2B,CACzE,IAAMC,EAAkCC,GAAU,CAChDC,GAAQC,CAAO,EACfN,GAAQ,KAAKM,CAAO,EAEpB,GAAI,CACFE,EAAK,CACP,QAAA,CAEER,GAAQ,IAAI,CACd,CAEA,GAAI,CACFE,EAAGE,CAAK,CACV,QAAA,CAEEJ,GAAQ,IAAI,CACd,CACF,EAEMM,EAAsB,CAC1B,QAAAH,EACA,aAAc,IAAI,GACpB,EAEA,OAAAA,EAAQ,MAAc,EAEfG,CACT,CAEO,SAASM,EAAOR,EAAW,OAAwB,CACxD,IAAMS,EAA0B,IAAI,IAChCC,EAAIV,EAEFW,EAAM,IAAM,CAChB,IAAMT,EAAUN,GAAQA,GAAQ,OAAS,CAAC,EAC1C,OAAIM,GAAWI,GAAUJ,EAASO,CAAS,EACpCC,CACT,EAEME,EAAOC,GAAY,CACvB,IAAMC,EAAOJ,EACbA,EAAIG,EAEJ,QAAWE,IAAO,CAAC,GAAGN,CAAS,EAC7BM,EAAI,QAAQD,CAAI,CAEpB,EAEA,MAAO,CACL,OAAO,OAAOH,EAAK,CAAE,UAAAF,CAAU,CAAC,EAChC,OAAO,OACLG,EACA,CACE,MAAQI,GAAiC,CACvCA,EAAMN,CAAC,EACPE,EAAIF,CAAC,CACP,EACA,WAAY,MAAOM,GAA0C,CAC3D,MAAMA,EAAMN,CAAC,EACbE,EAAIF,CAAC,CACP,CACF,CACF,CACF,CACF,CAEO,SAASO,GAA2BC,EAA0B,CACnE,IAAMC,EAAMD,EACZ,OAAO,eAAeC,EAAK,YAAa,CACtC,MAAO,IAAI,IACX,WAAY,GACZ,aAAc,EAChB,CAAC,EAED,QAAWC,KAAKD,EAAK,CACnB,IAAIT,EAAIS,EAAIC,CAAC,EACb,OAAO,eAAeD,EAAKC,EAAG,CAC5B,IAAK,IAAM,CACT,IAAMlB,EAAUN,GAAQA,GAAQ,OAAS,CAAC,EAC1C,OAAIM,GAAWI,GAAUJ,EAASiB,EAAI,SAAS,EACxCT,CACT,EACA,IAAMG,GAAS,CACb,IAAMC,EAAOJ,EACbA,EAAIG,EACJ,QAAWE,IAAO,CAAC,GAAGI,EAAI,SAAS,EACjCJ,EAAI,QAAQD,CAAI,CAEpB,CACF,CAAC,CACH,CAEA,OAAOK,CACT,CAEO,SAASE,GAAmCrB,EAAgC,CACjF,MAAO,cAAeA,GAASA,EAAM,qBAAqB,GAC5D,CAEA,SAASM,GAAaJ,EAAqBoB,EAA6B,CACtEA,EAAc,IAAIpB,CAAO,EACzBA,EAAQ,aAAa,IAAIoB,CAAa,CACxC,CAEO,SAASrB,GAAWC,EAAqB,CAC9C,QAAWG,KAAOH,EAAQ,aACxBG,EAAI,OAAOH,CAAO,EAEpBA,EAAQ,aAAa,MAAM,CAC7B,CC1LO,SAASqB,GAAcC,EAAQC,EAAW,CAC/CD,EAAEC,CAAC,EAAID,EAAEA,EAAE,OAAS,CAAC,EACrBA,EAAE,QACJ,CAsEO,SAASE,GAAmBC,EAAYC,EAA+B,CAC5EA,EAAGD,CAAiB,EACpB,QAAW,KAAKA,EAAK,WACnBD,GAAmB,EAAGE,CAAE,EAEzBD,EAAmB,OAAO,CAC7B,CAcO,SAASE,GAAsCC,EAA2B,CAC/E,IAAMC,EAAwB,CAC5B,OAAQ,KACR,YAAa,KACb,YAAa,KACb,eAAeC,EAAS,CACtB,KAAK,OAASA,EAAQ,cACtB,KAAK,YAAcA,EAAQ,gBAC3B,KAAK,YAAcA,EAAQ,WAC7B,EACA,cAAe,CACb,MAAO,CAAC,EAAE,KAAK,QAAU,KAAK,aAAe,KAAK,YACpD,EACA,mBAAoB,CAClB,GAAI,KAAK,aAAe,KAAK,YAAY,cACvC,OAAO,KAAK,YAAY,MAAM,KAAK,KAAK,WAAW,EAErD,GAAI,KAAK,aAAe,KAAK,YAAY,cACvC,OAAO,KAAK,YAAY,OAAO,KAAK,KAAK,WAAW,EAEtD,GAAI,KAAK,OACP,OAAI,KAAK,YACA,KAAK,OAAO,QAAQ,KAAK,KAAK,MAAM,EAEtC,KAAK,OAAO,OAAO,KAAK,KAAK,MAAM,EAE5C,MAAM,IAAI,MAAM,iCAAiC,CACnD,EACA,cAAcC,EAAO,CACnB,GAAI,CACF,YAAK,kBAAkB,EAAE,GAAGA,CAAK,EAC1B,EACT,MACU,CACR,MAAO,EACT,CACF,CACF,EAEA,OAAIH,GACF,eAAe,IAAMC,EAAK,eAAeD,CAAI,CAAC,EAGzCC,CACT,CCvIO,SAASG,EAASC,EAA0B,CACjD,IAAMC,EAAW,sBAAsB,KAAKD,CAAI,GAAK,SAAS,KAAKA,CAAI,EAEvE,SAASE,EAAUC,EAAe,CAChC,GAAIA,EAAK,WAAa,KAAK,UACzB,OAAO,SAAS,eAAeA,EAAK,SAAmB,EAEzD,GAAIA,EAAK,WAAa,KAAK,aAAc,CACvC,IAAMC,EAAK,SAAS,cAAcD,EAAK,SAAS,EAChD,OAAW,CAAE,KAAAE,EAAM,MAAAC,CAAM,IAAK,MAAM,KAAKH,EAAK,UAAU,EACtDC,EAAG,aAAaC,EAAMC,CAAK,EAE7B,QAAWC,KAAS,MAAM,KAAKJ,EAAK,UAAU,EAC5CC,EAAG,YAAYF,EAAUK,CAAgB,CAAC,EAE5C,OAAOH,CACT,CAEA,OAAO,SAAS,uBAAuB,CACzC,CAEA,SAASI,GAAmB,CAC1B,GAAIP,EACF,GAAI,CAEF,IAAMQ,EADS,IAAI,UAAU,EACV,gBACjB,SAAST,CAAI,UACb,iBACF,EACA,GAAIS,EAAI,qBAAqB,aAAa,EAAE,OAC1C,MAAM,IAAI,MAAM,kBAAkB,EAEpC,IAAMC,EAAUD,EAAI,gBAAgB,WACpC,OAAOP,EAAUQ,CAAkB,CACrC,MAAQ,CAER,CAEF,IAAMC,EAAQ,SAAS,cAAc,UAAU,EAC/C,OAAAA,EAAM,UAAYX,EACXW,EAAM,QAAQ,UACvB,CAEA,IAAIC,EAEJ,MAAO,KAAaA,IAAWA,EAASJ,EAAW,IAAI,UAAU,EAAI,CACvE,CAUO,SAASK,EAAkBC,EAAmB,CACnD,IAAMC,EAAY,CAAC,EAEnB,OAACD,IAAW,UAAYA,IAAW,aAC/B,OACA,UACF,iBAAiBA,EAASE,GAAM,CAChC,QAASC,EAAIF,EAAU,OAAS,EAAGE,GAAK,EAAGA,IAAK,CAC9C,IAAMC,EAAIH,EAAUE,CAAC,EAChBC,EAAE,OAAO,cAGdA,EAAE,GAAGF,CAAC,EACFE,EAAE,MACJC,GAAWJ,EAAWE,CAAC,EAE3B,CACF,CAAC,EAEMF,CACT,CAEO,SAASK,GAAYjB,EAAe,CACzCkB,GAAmBlB,EAAOmB,GAAMA,EAAE,cAAc,IAAI,YAAY,SAAS,CAAC,CAAC,CAC7E,CA2CO,SAASC,EACdC,EACAC,EACAC,EACA,CACA,IAAIC,EAAQ,GACRD,aAAiB,MACfA,EAAM,CAAC,IACTF,EAAU,KAAK,CAAE,GAAIE,EAAM,CAAC,EAAG,KAAMA,EAAM,CAAC,EAAE,KAAM,OAAAD,CAAO,CAAC,EAC5DE,EAAQ,IAEDD,IACTF,EAAU,KAAK,CAAE,GAAIE,EAAO,OAAAD,CAAO,CAAC,EACpCE,EAAQ,IAGNA,GACFF,EAAO,iBAAiB,UAAW,IAAM,CACvC,IAAMG,EAAIJ,EAAU,UAAWK,GAAMA,EAAE,SAAWJ,CAAM,EACpDG,IAAM,IACRE,GAAWN,EAAWI,CAAC,CAE3B,CAAC,CAEL,CAEO,SAASG,EACdN,EACAO,EACAN,EACA,CACIA,aAAiB,MACnBD,EAAO,iBAAiBO,EAAQN,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,EAElDD,EAAO,iBAAiBO,EAAQN,CAAK,CAEzC,CAEA,SAASO,GAAaC,EAA2BC,EAA8B,CACzED,aAAgB,MAClBA,EAAK,QAAQC,CAAM,EAEnBA,EAAOD,CAAI,CAEf,CAEO,SAASE,GACdC,EACAC,EACAC,EACA,CACA,IAAIL,EAEJG,EAAO,iBAAiB,UAAW,IAAM,CACnCH,EACFD,GAAaC,EAAMM,EAAW,EAE9BC,GAAQC,CAAO,CAEnB,CAAC,EAED,IAAMC,EAAS,KACbT,EAAOI,EAAW,EAClBL,GAAaC,EAAOU,GAAM,CACxBA,EAAE,iBAAiB,UAAW,IAAM,CAClCH,GAAQC,CAAO,EACfL,EAAO,OAAO,CAChB,CAAC,CACH,CAAC,EAEMH,GAGHQ,EAAUG,EAAQN,EAAW,IAAM,CACvC,GAAIA,EAAU,EAAG,CACf,IAAMK,EAAIV,IAASA,EAAOS,EAAO,GAC7BC,aAAa,MACfP,EAAO,YAAY,GAAGO,CAAC,EAEvBP,EAAO,YAAYO,CAAC,CAExB,MAAWV,GACTD,GAAaC,EAAOU,GAAMA,EAAE,YAAYP,CAAM,CAAC,CAEnD,CAAC,EAED,OAAOE,EAAU,EAAIL,IAAUA,EAAOS,EAAO,GAAKN,CACpD,CAEO,SAASS,EAAaZ,EAAea,EAAcrB,EAAgB,CACpEA,GAAS,MAAQA,IAAU,GAC7BQ,EAAK,gBAAgBa,CAAI,EAEzBb,EAAK,aAAaa,EAAMrB,CAAe,CAE3C,CAEO,SAASsB,EACdd,EACAa,EACArB,EACA,CACA,IAAIgB,EAEAK,IAAS,SAAWA,IAAS,UAC/BL,EAAUO,EAAM,IAAM,CACpBf,EAAKa,CAAI,EAAIrB,EAAM,CACrB,CAAC,EAEDgB,EAAUO,EAAM,IAAM,CACpBH,EAAaZ,EAAMa,EAAMrB,EAAM,CAAC,CAClC,CAAC,EAGHQ,EAAK,iBAAiB,UAAW,IAAMO,GAAQC,CAAO,CAAC,CACzD,CAEO,SAASQ,EACdzB,EACA0B,EACAzB,EACA,CACA,IAAMgB,EAAUO,EAAM,IAAM,CACrBvB,EAAM,EAGTD,EAAO,UAAU,IAAI0B,CAAS,EAF9B1B,EAAO,UAAU,OAAO0B,CAAS,CAIrC,CAAC,EAED1B,EAAO,iBAAiB,UAAW,IAAMgB,GAAQC,CAAO,CAAC,CAC3D,CAGO,SAASU,EACd3B,EACA4B,EACA3B,EACA,CACA,GAAI,OAAOA,GAAU,WAAY,CAC/B,IAAMgB,EAAUO,EAAM,IAAMxB,EAAO,MAAM,YAAY4B,EAAM3B,EAAM,CAAC,CAAC,EACnED,EAAO,iBAAiB,UAAW,IAAMgB,GAAQC,CAAO,CAAC,CAC3D,MACEjB,EAAO,MAAM,YAAY4B,EAAM3B,EAAM,SAAS,CAAC,CAEnD,CAEO,SAAS4B,EACdjB,EACAkB,EACA,CACA,GAAIlB,aAAkB,iBAAmB,CAACkB,EACxC,OAAAlB,EAAO,YAAY,GAAGA,EAAO,UAAU,EAChCA,EAAO,SAChB,GAAW,OAAOkB,GAAU,UAAY,OAAOA,GAAU,SAAU,CACjE,IAAMC,EAAW,SAAS,eAAe,EAAE,EAC3C,OAAAA,EAAS,YAAcD,EAAM,SAAS,EACtClB,EAAO,YAAYmB,CAAQ,EACpBA,CACT,KAAA,IAAWD,aAAiB,KAC1B,OAAAlB,EAAO,YAAYkB,CAAK,EACjBA,EACT,GAAWA,aAAiB,MAAO,CACjC,IAAIE,EAAOpB,EACPqB,EAAIrB,EACR,QAAST,EAAI,EAAGA,EAAI2B,EAAM,OAAQ3B,IAC5BA,EAAI,EAAI2B,EAAM,SAChBE,EAAO,SAAS,cAAc,EAAE,EAChCC,EAAE,MAAMD,CAAI,GAEdH,EAAYI,EAAGH,EAAM3B,CAAC,CAAS,EAC/B8B,EAAID,EAEN,OAAOF,CACT,KAAO,CACL,IAAMC,EAAW,SAAS,eAAe,EAAE,EAC3CnB,EAAO,YAAYmB,CAAQ,EAC3B,IAAMd,EAAUO,EAAM,IAAM,CAC1B,IAAMU,EAAIJ,EAAM,EACZ,OAAOI,GAAM,SACfH,EAAS,YAAcG,EACdA,GAAK,KACdH,EAAS,YAAcG,EAAE,SAAS,EACzBA,GAAK,OACdH,EAAS,YAAc,GAE3B,CAAC,EACD,OAAAA,EAAS,iBAAiB,UAAW,IAAMf,GAAQC,CAAO,CAAC,EACpDc,CACT,EACF,CAEO,SAASI,GACdvB,EACAC,EACAuB,EACAC,EAAO,MACP,CACA,IAAIC,EACJ1B,EAAO,iBAAiB,UAAW,IAAM,CACnC0B,EACFvB,GAAYuB,CAAC,EAEbtB,GAAQC,CAAO,CAEnB,CAAC,EAED,IAAMsB,EAAc,IAAM,GAAGF,CAAI,gBAC3BG,EAAY,IAAM,GAAGH,CAAI,cACzBI,EAAU,IAAM,GAAGJ,CAAI,YAEvBK,EAAc,IAAM,GAAGL,CAAI,gBAC3BM,EAAY,IAAM,GAAGN,CAAI,cACzBO,EAAU,IAAM,GAAGP,CAAI,YAE7B,SAASQ,GAAY,CACnB,OAAO,IAAI,QAASC,GAAQ,CAC1B,sBAAsB,IAAM,sBAAsBA,CAAG,CAAC,CACxD,CAAC,CACH,CAEA,IAAM5B,EAAS,KACboB,EAAIzB,EAAW,EAEfyB,EAAE,iBAAiB,UAAW,IAAM,CAClCtB,GAAQC,CAAO,EACfL,EAAO,OAAO,CAChB,CAAC,EACD0B,EAAE,iBAAiB,gBAAiB,IAAM,CACxCS,EAAc,EAETX,EAAK,GACRE,EAAE,YAAY1B,CAAM,CAExB,CAAC,EAEM0B,GAEHtC,EAAS,IAAMsC,IAAMA,EAAIpB,EAAO,GAClC8B,EAAW,GACT/B,EAAUG,EAAQgB,EAAM,SAAY,CACxC,GAAIY,GAAY,CAACZ,EAAK,EAAG,CACvBY,EAAW,GACX,MACF,CAyBA,GAxBAA,EAAW,GAEPhD,EAAO,EAAE,UAAU,SAEnB,CAACoC,EAAK,IACLpC,EAAO,EAAE,UAAU,SAASwC,EAAU,CAAC,GACtCxC,EAAO,EAAE,UAAU,SAASuC,EAAY,CAAC,GACzCvC,EAAO,EAAE,UAAU,SAASyC,EAAQ,CAAC,IAEvC,MAAMI,EAAU,EAChBE,EAAc,EACd/C,EAAO,EAAE,YAAYY,CAAM,GAE3BwB,EAAK,IACJpC,EAAO,EAAE,UAAU,SAAS2C,EAAU,CAAC,GACtC3C,EAAO,EAAE,UAAU,SAAS4C,EAAQ,CAAC,GACrC5C,EAAO,EAAE,UAAU,SAAS0C,EAAY,CAAC,KAE3C,MAAMG,EAAU,EAChBE,EAAc,EACd/C,EAAO,EAAE,YAAYY,CAAM,IAI3BwB,EAAK,EAAG,CACV,GAAIpC,EAAO,EAAE,YACX,OAEFA,EAAO,EAAE,UAAU,IAAIwC,EAAU,CAAC,EAClCxC,EAAO,EAAE,UAAU,IAAIuC,EAAY,CAAC,EAEpC3B,EAAO,YAAYZ,EAAO,CAAC,EAC3B,MAAM6C,EAAU,EAEhB7C,EAAO,EAAE,UAAU,OAAOwC,EAAU,CAAC,EACrCxC,EAAO,EAAE,UAAU,IAAIyC,EAAQ,CAAC,CAClC,MAAWzC,EAAO,EAAE,cAClBA,EAAO,EAAE,UAAU,IAAI2C,EAAU,CAAC,EAClC3C,EAAO,EAAE,UAAU,IAAI0C,EAAY,CAAC,EAEpC,MAAMG,EAAU,EAEhB7C,EAAO,EAAE,UAAU,OAAO2C,EAAU,CAAC,EACrC3C,EAAO,EAAE,UAAU,IAAI4C,EAAQ,CAAC,EAEpC,CAAC,EAED,SAASG,GAAgB,CACvB/C,EAAO,EAAE,UAAU,OAAOuC,EAAY,CAAC,EACvCvC,EAAO,EAAE,UAAU,OAAOwC,EAAU,CAAC,EACrCxC,EAAO,EAAE,UAAU,OAAOyC,EAAQ,CAAC,EAEnCzC,EAAO,EAAE,UAAU,OAAO0C,EAAY,CAAC,EACvC1C,EAAO,EAAE,UAAU,OAAO2C,EAAU,CAAC,EACrC3C,EAAO,EAAE,UAAU,OAAO4C,EAAQ,CAAC,CACrC,CAEA,OAAOR,EAAK,EAAIpC,EAAO,EAAIY,CAC7B,CC3aO,GAAM,CAACqC,GAAcC,EAAc,EAAIC,GAC5C,GACA,EACF,EACa,CAACC,GAAcC,EAAc,EAAIF,GAC5C,GACA,EACF,EAEO,SAASG,GAAUC,EAAaC,EAAa,CAClD,MAAO,GAAGP,GAAaM,CAAG,CAAC,GAAGH,GAAaI,CAAG,CAAC,EACjD,CAEO,SAASC,GAAWF,EAAaC,EAAa,CACnD,OAAOA,EAAME,EAAWH,CAC1B,CAUO,SAASI,GACdC,EACAC,EACAC,EACA,CACA,IAAIC,EAAM,EACV,QAAWC,KAAKF,EAAS,CACvB,IAAMG,EAAI,CAACD,EACPC,GAAKJ,GAAMI,GAAKL,IAAMG,GAAOD,EAAQE,CAAC,EAC5C,CACA,OAAOD,CACT,CAEO,SAASG,GAAaJ,EAAoB,CAC/C,OAAO,OAAO,OAAOA,CAAO,EAAE,OAAO,CAACK,EAAK,IAAMA,EAAM,EAAG,CAAC,CAC7D,CAEO,IAAMC,GAAgB,UAAU,eAAiB,EAC3CC,IAAY,IAAM,CAC7B,IAAMC,EAAK,UAAU,UACfC,EAAgB,wBAAwB,KAAKD,CAAE,EAC/CE,EAAW,SAAS,KAAKF,CAAE,GAAK,CAAC,6BAA6B,KAAKA,CAAE,EACrEG,EACJ,OAAO,UAAU,gBAAmB,UACpC,UAAU,eAAiB,EAE7B,OAAOF,GAAiBC,IAAaC,GAAiB,SAAS,KAAKH,CAAE,EACxE,GAAG,EAEI,SAASI,GAASC,EAAWC,EAA2B,CAC7D,OAAQD,GAAKC,EAAY,GAAM,EAAEA,EAAY,EAC/C,CAEO,SAASC,GAAQF,EAAWC,EAA2B,CAC5D,OAAO,KAAK,MAAMD,EAAIC,CAAS,EAAIA,CACrC,CAEO,SAASE,GAAeC,EAAcC,EAAoB,CAC/D,MAAO,CACJC,GAAgB,CACf,IAAIhB,EAAIgB,EAAM,EACVC,EAAS,GACb,KAAOjB,EAAI,GAAG,CACZ,IAAMkB,GAAalB,EAAI,GAAKc,EAC5BG,EAAS,OAAO,aAAaF,EAAaG,CAAS,EAAID,EACvDjB,EAAI,KAAK,OAAOA,EAAI,GAAKc,CAAI,CAC/B,CACA,OAAOG,CACT,EACCE,GAAc,CACb,IAAInB,EAAI,EACR,QAASoB,EAAI,EAAGA,EAAID,EAAE,OAAQC,IAC5BpB,EAAIA,EAAIc,GAAQK,EAAE,WAAWC,CAAC,EAAIL,EAAa,GAEjD,OAAOf,EAAI,CACb,CACF,CACF,CAEO,SAASqB,GAAiBC,EAAoC,CACnE,IAAIC,EACAC,EAEJ,GAAIF,aAAc,WAChBC,EAAUD,EAAG,QACbE,EAAUF,EAAG,gBACJA,aAAc,WAAY,CACnC,IAAMG,EAAQH,EAAG,QAAQ,CAAC,GAAKA,EAAG,eAAe,CAAC,EAClD,GAAI,CAACG,EAAO,MAAO,CAAE,EAAG,GAAI,EAAG,EAAG,EAClCF,EAAUE,EAAM,QAChBD,EAAUC,EAAM,OAClB,KACE,OAAO,CAAE,EAAG,GAAI,EAAG,EAAG,EAGxB,MAAO,CAAE,EAAGF,EAAS,EAAGC,CAAQ,CAClC,CAiBO,SAASE,GAAUC,EAAyB,CACjD,IAAIC,EAAMD,EAAS,CAAC,IAAM,IAAMA,EAAS,MAAM,CAAC,EAAIA,GAEhDC,EAAI,SAAW,GAAKA,EAAI,SAAW,KACrCA,EAAMA,EACH,MAAM,EAAE,EACR,IAAKC,GAAMA,EAAIA,CAAC,EAChB,KAAK,EAAE,GAGZ,IAAMC,EAAI,OAAO,SAASF,EAAI,MAAM,EAAG,CAAC,EAAG,EAAE,EAAI,IAC3CG,EAAI,OAAO,SAASH,EAAI,MAAM,EAAG,CAAC,EAAG,EAAE,EAAI,IAC3CI,EAAI,OAAO,SAASJ,EAAI,MAAM,EAAG,CAAC,EAAG,EAAE,EAAI,IAC3CK,EAAIL,EAAI,SAAW,EAAI,OAAO,SAASA,EAAI,MAAM,EAAG,CAAC,EAAG,EAAE,EAAI,IAAM,EAE1E,MAAO,CAACE,EAAGC,EAAGC,EAAGC,CAAC,CACpB,CCtIO,IAAMC,GAAiB,EAEjBC,GAA8B,CAAC,IAAM,IAAM,IAAM,CAAG,EACpDC,GAA+B,CAAC,IAAM,IAAM,IAAM,CAAG,EAErDC,GAAkC,CAAC,GAAK,IAAM,GAAK,EAAG,EACtDC,GAAmC,CAAC,IAAM,IAAM,GAAK,EAAG,EAExDC,GAAsB,UACtBC,GAAuB,UACvBC,GAAkBC,GAAUH,EAAmB,EAC/CI,GAAmBD,GAAUF,EAAoB,EAEjDI,GAAgB,+CAEhBC,EAAW,IACXC,GAAW,IAEXC,EAAS,GACTC,EAAS,GAETC,GAAsB,SACtBC,GAAoB,GACpBC,GAAqB,GACrBC,GAAe,GACfC,GAAiB,GACjBC,GAAoB,GACpBC,GAAwB,GACxBC,GAAsB,SAEtBC,GAAyB,eACzBC,GAAqB,IAAI,OAAOD,EAAsB,EClC5D,IAAME,EAAO,CAClB,UAAW,CAET,OAAO,IAAI,aAAa,CACtB,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,CACX,CAAC,CACH,EAEA,MACEC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CACAA,EAAK,KAAK,CAAC,EAEX,IAAMC,EAAK,GAAKN,EAAQD,GAClBQ,EAAK,GAAKL,EAAMD,GAChBO,EAAM,IAAMJ,EAAOD,GAEzBE,EAAK,CAAC,EAAI,EAAIC,EACdD,EAAK,CAAC,EAAI,EAAIE,EACdF,EAAK,EAAE,EAAI,EAAIG,EACfH,EAAK,EAAE,EAAI,EAAEL,EAAQD,GAAQO,EAC7BD,EAAK,EAAE,EAAI,EAAEH,EAAMD,GAAUM,EAC7BF,EAAK,EAAE,EAAI,EAAED,EAAOD,GAASK,EAC7BH,EAAK,EAAE,EAAI,CACb,EAEA,QACEI,EACAC,EACAC,EACAC,EACAC,EACAR,EACA,CACAA,EAAK,CAAC,GAAKI,EAAKI,EAChBR,EAAK,CAAC,GAAKK,EAAKG,EAChBR,EAAK,CAAC,GAAKM,EAAKE,EAChBR,EAAK,CAAC,GAAKO,EAAKC,CAClB,EAEA,UAAUC,EAAkBL,EAAYC,EAAYC,EAAY,CAC9DG,EAAG,EAAE,GAAKL,EACVK,EAAG,EAAE,GAAKJ,EACVI,EAAG,EAAE,GAAKH,CACZ,EAEA,YAAYG,EAAkBL,EAAYC,EAAYC,EAAY,CAChE,OAAOb,EAAK,UAAUgB,EAAIL,EAAKK,EAAG,CAAC,EAAGJ,EAAKI,EAAG,CAAC,EAAGH,EAAKG,EAAG,EAAE,CAAC,CAC/D,EAEA,YAAYA,EAAkBL,EAAYC,EAAYC,EAAY,CAChEG,EAAG,EAAE,EAAIL,EACTK,EAAG,EAAE,EAAIJ,EACTI,EAAG,EAAE,EAAIH,CACX,EAEA,cAAcG,EAAkBL,EAAYC,EAAYC,EAAY,CAClE,OAAOb,EAAK,YAAYgB,EAAIL,EAAKK,EAAG,CAAC,EAAGJ,EAAKI,EAAG,CAAC,EAAGH,EAAKG,EAAG,EAAE,CAAC,CACjE,EAEA,cAAcA,EAAkBC,EAAYC,EAAYC,EAAY,CAClEH,EAAG,CAAC,EAAIC,EACRD,EAAG,CAAC,EAAIE,EACRF,EAAG,EAAE,EAAIG,CACX,EAEA,MAAMH,EAAkBC,EAAYC,EAAYC,EAAY,CAC1DH,EAAG,CAAC,GAAKC,EACTD,EAAG,CAAC,GAAKC,EACTD,EAAG,CAAC,GAAKC,EACTD,EAAG,CAAC,GAAKC,EAETD,EAAG,CAAC,GAAKE,EACTF,EAAG,CAAC,GAAKE,EACTF,EAAG,CAAC,GAAKE,EACTF,EAAG,CAAC,GAAKE,EAETF,EAAG,CAAC,GAAKG,EACTH,EAAG,CAAC,GAAKG,EACTH,EAAG,EAAE,GAAKG,EACVH,EAAG,EAAE,GAAKG,CACZ,EAEA,SACEC,EACAC,EAAO,EACPC,EAAO,EACPC,EAAW,EACH,CACR,GAAIH,EAAK,SAAWC,EAAOC,EACzB,MAAM,IAAI,MAAM,2BAA2B,EAE7C,IAAME,EAAY,IAAI,MAAMF,CAAI,EAAE,KAAK,CAAC,EAExC,QAAS,EAAI,EAAG,EAAIF,EAAK,OAAQ,IAAK,CACpC,IAAMK,EAAM,KAAK,MAAM,EAAIH,CAAI,EACzBI,EAAYN,EAAK,CAAC,EAAE,QAAQG,CAAQ,EAC1CC,EAAUC,CAAG,EAAI,KAAK,IAAID,EAAUC,CAAG,EAAGC,EAAU,MAAM,CAC5D,CAEA,IAAIC,EAAS,GACb,QAASC,EAAI,EAAGA,EAAIN,EAAMM,IAAK,CAC7B,IAAMC,EAAS,MAAM,KAAK,CAAE,OAAQR,CAAK,EAAG,CAACS,EAAGC,IAC9CX,EAAKW,EAAIT,EAAOM,CAAC,EAAE,QAAQL,CAAQ,EAAE,SAASC,EAAUO,CAAC,CAAC,CAC5D,EAAE,KAAK,IAAI,EACXJ,GAAU,KAAKE,CAAM;AAAA,CACvB,CAEA,OAAOF,EAAO,KAAK,CACrB,CACF,ECrHO,IAAMK,GAAiB,GACjBC,GAAiB,EACjBC,GAAcF,GAAiBC,GAa5C,SAASE,GAASC,EAAoBC,EAAa,CACjD,QAASC,EAAI,EAAGA,EAAID,EAAML,GAAgBM,GAAKN,GAC7CI,EAAK,IAAIG,EAAK,SAAS,EAAGD,CAAC,EAC3BF,EAAK,IAAI,CAAC,EAAG,EAAG,EAAG,CAAC,EAAGE,EAAI,EAAE,CAEjC,CAEO,SAASE,GAAcH,EAAwB,CACpD,IAAMD,EAAO,IAAI,aAAaC,EAAML,EAAc,EAClD,OAAAG,GAASC,EAAMC,CAAG,EAEX,CACL,KAAAD,EACA,IAAAC,EACA,OAAOA,EAAK,CACV,GAAIA,IAAQ,KAAK,IAAK,MAAO,GAE7B,IAAMI,EAAOJ,EAAML,GACnB,GAAIK,EAAM,KAAK,IACb,KAAK,KAAO,KAAK,KAAK,SAAS,EAAGI,CAAI,MACjC,CACL,IAAML,EAAO,IAAI,aAAaK,CAAI,EAClCL,EAAK,IAAI,KAAK,IAAI,EAClBD,GAASC,EAAK,SAAS,KAAK,KAAK,MAAM,EAAGC,EAAM,KAAK,GAAG,EACxD,KAAK,KAAOD,CACd,CACA,YAAK,IAAMC,EACJ,EACT,EACA,QAAQK,EAAO,CACb,IAAMC,EAAQD,EAAQV,GACtB,OAAO,KAAK,KAAK,SAASW,EAAOA,EAAQ,EAAE,CAC7C,EACA,QAAQD,EAAO,CACb,IAAMC,EAAQD,EAAQV,GAAiB,GACvC,OAAO,KAAK,KAAK,SAASW,EAAOA,EAAQ,CAAC,CAC5C,EACA,KAAKD,EAAO,CACV,IAAMC,EAAQD,EAAQV,GAAiB,GACvC,OAAO,KAAK,KAAK,SAASW,EAAOA,EAAQ,CAAC,CAC5C,EACA,QAAQD,EAAO,CACb,IAAMC,EAAQD,EAAQV,GAAiB,GACvC,OAAO,KAAK,KAAK,SAASW,EAAOA,EAAQ,CAAC,CAC5C,CACF,CACF,CAOO,IAAMC,GAAiB,EACjBC,GAAiB,EACjBC,GAAcF,GAAiBC,GAE/BE,GAAkB,CAE7B,WAAY,IAAI,aAAa,CAE3B,EAAK,EACL,EAAK,EACL,EAAK,EACL,EAAK,CACP,CAAC,EACD,UAAW,IAAI,WAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,CAAC,CAAC,CAC9C,ECrEO,SAASC,GACdC,EACAC,EACAC,EACAC,EACAC,EACA,CACA,IAAMC,EAAoB,CAAE,SAAAJ,EAAU,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,CAAO,EACzDE,EAAa,CAAC,GAAGN,CAAG,EAAE,IAAIO,CAAW,EAC3CD,EAAW,KAAKD,CAAS,EAEzB,IAAMG,EAAYC,GAAiBH,CAAU,EAE7CN,EAAI,MAAM,EACV,QAAWU,KAAKF,EACdR,EAAI,IAAIW,GAAgBD,CAAC,CAAC,CAE9B,CAEO,SAASE,GACdZ,EACAC,EACAC,EACAC,EACAC,EACA,CACA,IAAMS,EAAc,CAAE,SAAAZ,EAAU,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,CAAO,EACnDU,EAAoB,CAAC,EAE3B,QAAWC,KAAKf,EAAK,CACnB,IAAMU,EAAIH,EAAYQ,CAAC,EACnBC,GAAeN,EAAGG,CAAG,EACvBC,EAAQ,KAAK,GAAGG,GAAaP,EAAGG,CAAG,CAAC,EAEpCC,EAAQ,KAAKJ,CAAC,CAElB,CAEA,IAAMQ,EAAST,GAAiBK,CAAO,EACvCd,EAAI,MAAM,EACV,QAAWU,KAAKQ,EACdlB,EAAI,IAAIW,GAAgBD,CAAC,CAAC,CAE9B,CAEO,SAASS,GACdnB,EACAC,EACAC,EACAC,EACAC,EACA,CACA,IAAMgB,EAAgB,CAAE,SAAAnB,EAAU,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,CAAO,EACrDiB,EAAW,CAAC,GAAGrB,CAAG,EAAE,IAAIO,CAAW,EAGnCe,EAAoBD,EAAS,QAASX,GAC1CM,GAAeN,EAAGU,CAAK,EAAIH,GAAaP,EAAGU,CAAK,EAAI,CAACV,CAAC,CACxD,EAGMa,EAAWF,EAAS,OAAQX,GAAMM,GAAeN,EAAGU,CAAK,CAAC,EAE1DI,EAAiBf,GAAiBc,CAAQ,EAG5CE,EAA2B,CAACL,CAAK,EACrC,QAAWM,KAAKF,EACdC,EAAiBA,EAAe,QAASE,GACvCX,GAAeW,EAAGD,CAAC,EAAIT,GAAaU,EAAGD,CAAC,EAAI,CAACC,CAAC,CAChD,EAIF,IAAMC,EAASnB,GAAiB,CAAC,GAAGa,EAAmB,GAAGG,CAAc,CAAC,EAEzEzB,EAAI,MAAM,EACV,QAAWU,KAAKkB,EAAQ5B,EAAI,IAAIW,GAAgBD,CAAC,CAAC,CACpD,CAEO,SAASmB,GAAaC,EAAgB,CAC3C,IAAMC,EAAWC,GACf,EACAF,EAAO,SAAW,EAClBG,EAAa,EAAE,WAAW,CAC5B,EACMC,EAAWF,GACf,EACAF,EAAO,SAAW,EAClBG,EAAa,EAAE,WAAW,CAC5B,EACME,EAAKL,EAAO,SAAWM,EAASL,EAChCM,EAAKP,EAAO,SAAWQ,EAASJ,EAEhCK,EAAWP,GACf,EACAF,EAAO,OAAS,EAChBG,EAAa,EAAE,WAAW,CAC5B,EACMO,EAAWR,GACf,EACAF,EAAO,OAAS,EAChBG,EAAa,EAAE,WAAW,CAC5B,EACMQ,EACJX,EAAO,OAASM,EAASG,EAAWG,GAAsBZ,EAAO,MAAM,EACnEa,EACJb,EAAO,OAASQ,EAASE,EAAWI,GAAuBd,EAAO,MAAM,EAE1E,MAAO,CAACK,EAAIE,EAAII,EAAKN,EAAIQ,EAAKN,CAAE,CAClC,CAEO,SAAS1B,GAAgBmB,EAAwB,CACtD,MAAO,GAAGA,EAAO,QAAQ,IAAIA,EAAO,QAAQ,IAAIA,EAAO,MAAM,IAAIA,EAAO,MAAM,EAChF,CAEO,SAASvB,EAAYQ,EAAmB,CAC7C,GAAM,CAAC8B,EAAOC,CAAG,EAAI/B,EAAE,MAAM,GAAG,EAC1B,CAACgC,EAAIC,CAAE,EAAIH,EAAM,MAAM,GAAG,EAAE,IAAI,MAAM,EACtC,CAACI,EAAIC,CAAE,EAAIJ,EAAI,MAAM,GAAG,EAAE,IAAI,MAAM,EAC1C,MAAO,CAAE,SAAUC,EAAI,SAAUC,EAAI,OAAQC,EAAI,OAAQC,CAAG,CAC9D,CAEO,SAASlC,GAAemC,EAAWC,EAAoB,CAC5D,OACED,EAAE,UAAYC,EAAE,QAChBD,EAAE,QAAUC,EAAE,UACdD,EAAE,UAAYC,EAAE,QAChBD,EAAE,QAAUC,EAAE,QAElB,CAEA,SAASnC,GAAaoC,EAAcxC,EAAuB,CACzD,IAAMyC,EAAkB,CAAC,EAGrBzC,EAAI,SAAWwC,EAAK,UACtBC,EAAM,KAAK,CACT,SAAUD,EAAK,SACf,OAAQA,EAAK,OACb,SAAUA,EAAK,SACf,OAAQxC,EAAI,SAAW,CACzB,CAAC,EAGCA,EAAI,OAASwC,EAAK,QACpBC,EAAM,KAAK,CACT,SAAUD,EAAK,SACf,OAAQA,EAAK,OACb,SAAUxC,EAAI,OAAS,EACvB,OAAQwC,EAAK,MACf,CAAC,EAGH,IAAME,EAAS,KAAK,IAAIF,EAAK,SAAUxC,EAAI,QAAQ,EAC7C2C,EAAY,KAAK,IAAIH,EAAK,OAAQxC,EAAI,MAAM,EAElD,OAAI0C,GAAUC,IAER3C,EAAI,SAAWwC,EAAK,UACtBC,EAAM,KAAK,CACT,SAAUD,EAAK,SACf,OAAQxC,EAAI,SAAW,EACvB,SAAU0C,EACV,OAAQC,CACV,CAAC,EAGC3C,EAAI,OAASwC,EAAK,QACpBC,EAAM,KAAK,CACT,SAAUzC,EAAI,OAAS,EACvB,OAAQwC,EAAK,OACb,SAAUE,EACV,OAAQC,CACV,CAAC,GAIEF,CACT,CAEA,SAAS7C,GAAiBC,EAAuB,CAC/C,IAAI+C,EAAU/C,EACVgD,EAAU,GACRC,EAAW,CAACR,EAAWC,KAAuB,CAClD,SAAU,KAAK,IAAID,EAAE,SAAUC,EAAE,QAAQ,EACzC,SAAU,KAAK,IAAID,EAAE,SAAUC,EAAE,QAAQ,EACzC,OAAQ,KAAK,IAAID,EAAE,OAAQC,EAAE,MAAM,EACnC,OAAQ,KAAK,IAAID,EAAE,OAAQC,EAAE,MAAM,CACrC,GAEMQ,EAAoB,CAACT,EAAWC,IACpCpC,GAAemC,EAAGC,CAAC,GAClBD,EAAE,WAAaC,EAAE,UAChBD,EAAE,SAAWC,EAAE,SACdD,EAAE,OAAS,IAAMC,EAAE,UAAYA,EAAE,OAAS,IAAMD,EAAE,WACpDA,EAAE,WAAaC,EAAE,UAChBD,EAAE,SAAWC,EAAE,SACdD,EAAE,OAAS,IAAMC,EAAE,UAAYA,EAAE,OAAS,IAAMD,EAAE,UAEvD,KAAOO,GAAS,CACdA,EAAU,GACV,IAAMG,EAAgB,CAAC,EACvB,KAAOJ,EAAQ,OAAS,GAAG,CACzB,IAAIK,EAAOL,EAAQ,MAAM,EACrBM,EAAY,GAChB,QAASC,EAAI,EAAGA,EAAIP,EAAQ,OAAQO,IAClC,GAAIJ,EAAkBE,EAAML,EAAQO,CAAC,CAAC,EAAG,CACvCF,EAAOH,EAASG,EAAML,EAAQO,CAAC,CAAC,EAChCP,EAAQ,OAAOO,EAAG,CAAC,EACnBD,EAAYL,EAAU,GACtB,KACF,CAEFG,EAAI,KAAKC,CAAI,CACf,CACAL,EAAUI,CACZ,CAEA,OAAOJ,CACT,CCzOO,IAAKQ,QACVA,IAAA,OAAS,GAAT,SACAA,IAAA,WAAa,GAAb,aACAA,IAAA,SAAW,GAAX,WACAA,IAAA,OAAS,GAAT,SACAA,IAAA,OAAS,GAAT,SACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,MAAQ,GAAR,QACAA,IAAA,KAAO,GAAP,OACAA,IAAA,IAAM,GAAN,MATUA,QAAA,IAiBL,SAASC,GAAIC,EAAwB,CAC1C,IAAMC,EAAkB,CAAC,EACrBC,EAAIF,EAAM,CAAC,IAAM,IAAM,EAAI,EAE/B,KAAOE,EAAIF,EAAM,QAAQ,CACvB,IAAMG,EAAIH,EAAME,CAAC,EACjB,GAAI,KAAK,KAAKC,CAAC,EAAG,CAChBD,IACA,QACF,CAEA,GAAI,KAAK,KAAKC,CAAC,EAAG,CAChB,IAAIC,EAAMD,EAEV,IADAD,IACOA,EAAIF,EAAM,QAAU,QAAQ,KAAKA,EAAME,CAAC,CAAC,GAAGE,GAAOJ,EAAME,GAAG,EACnED,EAAO,KAAK,CAAE,KAAM,EAAkB,KAAMG,CAAI,CAAC,EACjD,QACF,CAEA,GAAI,WAAW,KAAKD,CAAC,EAAG,CACtB,IAAIE,EAAKF,EAET,IADAD,IACOA,EAAIF,EAAM,QAAUM,GAAmB,KAAKN,EAAME,CAAC,CAAC,GACzDG,GAAML,EAAME,GAAG,EAEjBD,EAAO,KAAK,CAAE,KAAM,EAAsB,KAAMI,CAAG,CAAC,EACpD,QACF,CAEA,OAAQF,EAAG,CACT,IAAK,IACL,IAAK,IACL,IAAK,IACL,IAAK,IACHF,EAAO,KAAK,CAAE,KAAM,EAAoB,KAAME,CAAE,CAAC,EACjDD,IACA,MACF,IAAK,IACHD,EAAO,KAAK,CAAE,KAAM,EAAkB,KAAME,CAAE,CAAC,EAC/CD,IACA,MACF,IAAK,IACHD,EAAO,KAAK,CAAE,KAAM,EAAkB,KAAME,CAAE,CAAC,EAC/CD,IACA,MACF,IAAK,IACHD,EAAO,KAAK,CAAE,KAAM,EAAiB,KAAME,CAAE,CAAC,EAC9CD,IACA,MACF,IAAK,IACHD,EAAO,KAAK,CAAE,KAAM,EAAiB,KAAME,CAAE,CAAC,EAC9CD,IACA,MACF,IAAK,IACHD,EAAO,KAAK,CAAE,KAAM,EAAgB,KAAME,CAAE,CAAC,EAC7CD,IACA,MACF,QACE,MAAM,IAAI,MAAM,0BAA0BC,CAAC,GAAG,CAClD,CACF,CAEA,OAAAF,EAAO,KAAK,CAAE,KAAM,EAAe,KAAM,EAAG,CAAC,EACtCA,CACT,CCjFA,IAAMM,GAAqC,CACzC,IAAK,GACL,IAAK,GACL,IAAK,GACL,IAAK,EACP,EASaC,GAAN,KAAa,CACV,OACA,IAAM,EAEd,YAAYC,EAAe,CACzB,KAAK,OAASC,GAAID,CAAK,CACzB,CAEQ,MAAc,CACpB,OAAO,KAAK,OAAO,KAAK,GAAG,CAC7B,CAEQ,MAAc,CACpB,OAAO,KAAK,OAAO,KAAK,KAAK,CAC/B,CAGO,gBAAgBE,EAAM,EAAY,CACvC,IAAIC,EAAI,KAAK,KAAK,EACdC,EAAO,KAAK,IAAID,CAAC,EAErB,KAAOD,EAAM,KAAK,IAAI,KAAK,KAAK,CAAC,GAC/BC,EAAI,KAAK,KAAK,EACdC,EAAO,KAAK,IAAID,EAAGC,CAAI,EAGzB,OAAOA,CACT,CAEQ,IAAIC,EAAuB,CACjC,OAAQA,EAAM,KAAM,CAClB,OACE,MAAO,CAAE,KAAM,SAAU,MAAO,OAAO,WAAWA,EAAM,IAAI,CAAE,EAChE,OAA2B,CAEzB,GAAI,KAAK,KAAK,EAAE,OAAS,EAAgB,CACvC,IAAMC,EAAYD,EAAM,KACxB,KAAK,KAAK,EACV,IAAME,EAAU,KAAK,KAAK,EAC1B,GAAIA,EAAQ,OAAS,EACnB,MAAM,IAAI,MAAM,kCAAkCA,EAAQ,IAAI,EAAE,EAClE,IAAMC,EAASD,EAAQ,KAEvB,GAAI,KAAK,KAAK,EAAE,OAAS,EAAiB,CACxC,KAAK,KAAK,EACV,IAAME,EAAS,KAAK,KAAK,EACzB,GAAIA,EAAO,OAAS,EAClB,MAAM,IAAI,MAAM,sBAAsBA,EAAO,IAAI,EAAE,EACrD,MAAO,CACL,KAAM,QACN,MAAOH,EACP,MAAOE,EACP,IAAKC,EAAO,IACd,CACF,CACA,MAAO,CAAE,KAAM,OAAQ,MAAOH,EAAW,GAAIE,CAAO,CACtD,CAEA,GAAI,KAAK,KAAK,EAAE,OAAS,EAAkB,CACzC,IAAME,EAAOL,EAAM,KACnB,KAAK,KAAK,EACV,IAAMM,EAAkB,CAAC,EACzB,GAAI,KAAK,KAAK,EAAE,OAAS,EACvB,GACEA,EAAK,KAAK,KAAK,gBAAgB,CAAC,QACzB,KAAK,KAAK,EAAE,OAAS,GAAmB,KAAK,KAAK,GAE7D,YAAK,QAAuB,EACrB,CAAE,KAAM,OAAQ,KAAAD,EAAM,KAAAC,CAAK,CACpC,CACA,MAAO,CAAE,KAAM,OAAQ,GAAIN,EAAM,IAAK,CACxC,CACA,OAAuB,CACrB,IAAMO,EAAO,KAAK,gBAAgB,EAClC,YAAK,QAAuB,EACrBA,CACT,CACA,QACE,MAAM,IAAI,MAAM,4BAA4BP,EAAM,IAAI,EAAE,CAC5D,CACF,CAEQ,IAAIA,EAAcD,EAAwB,CAChD,OAAQC,EAAM,KAAM,CAClB,OAAyB,CACvB,IAAMQ,EAAOf,GAAWO,EAAM,IAAI,GAAK,EACjCS,EAAQ,KAAK,gBAAgBD,CAAI,EACvC,MAAO,CAAE,KAAM,SAAU,GAAIR,EAAM,KAAM,KAAAD,EAAM,MAAAU,CAAM,CACvD,CACA,OAAsB,CACpB,IAAMC,EACJX,EAAK,OAAS,OACVA,EAAK,IACJ,IAAM,CACL,MAAM,IAAI,MAAM,qBAAqB,CACvC,GAAG,EACHY,EAAQZ,EAAK,MACbK,EAAS,KAAK,KAAK,EACzB,GAAIA,EAAO,OAAS,EAClB,MAAM,IAAI,MAAM,sBAAsBA,EAAO,IAAI,EAAE,EACrD,MAAO,CAAE,KAAM,QAAS,MAAAO,EAAO,MAAAD,EAAO,IAAKN,EAAO,IAAK,CACzD,CACA,QACE,MAAM,IAAI,MAAM,4BAA4BJ,EAAM,IAAI,EAAE,CAC5D,CACF,CAEQ,IAAIA,EAAsB,CAChC,OAAIA,EAAM,OAAS,EAA2BP,GAAWO,EAAM,IAAI,GAAK,EACpEA,EAAM,OAAS,EAAwB,GACpC,CACT,CAEQ,OAAOY,EAAiB,CAC9B,IAAMC,EAAM,KAAK,KAAK,EACtB,GAAIA,EAAI,OAASD,EACf,MAAM,IAAI,MAAM,YAAYE,GAAUF,CAAI,CAAC,SAASC,EAAI,IAAI,EAAE,CAClE,CACF,ECpIA,IAAME,GAAWC,GACf,MAAM,QAAQA,CAAG,EAAIA,EAAM,CAACA,CAAG,EAEpBC,GAA4D,CACvE,IAAMC,GAASA,EAAK,QAAQH,EAAO,EAAE,OAAO,CAACI,EAAKC,IAAMD,EAAMC,EAAG,CAAC,EAElE,QAAUF,GAAS,CACjB,IAAMG,EAAMH,EAAK,QAAQH,EAAO,EAChC,GAAIM,EAAI,SAAW,EAAG,MAAM,IAAI,MAAM,oBAAoB,EAC1D,OAAOA,EAAI,OAAO,CAACF,EAAKC,IAAMD,EAAMC,EAAG,CAAC,EAAIC,EAAI,MAClD,EAEA,IAAMH,GAAS,CACb,IAAMG,EAAMH,EAAK,QAAQH,EAAO,EAChC,GAAIM,EAAI,SAAW,EAAG,MAAM,IAAI,MAAM,gBAAgB,EACtD,OAAO,KAAK,IAAI,GAAGA,CAAG,CACxB,EAEA,IAAMH,GAAS,CACb,IAAMG,EAAMH,EAAK,QAAQH,EAAO,EAChC,GAAIM,EAAI,SAAW,EAAG,MAAM,IAAI,MAAM,gBAAgB,EACtD,OAAO,KAAK,IAAI,GAAGA,CAAG,CACxB,EAEA,MAAQH,GACNA,EAAK,QAAQH,EAAO,EAAE,OAAQK,GAAM,OAAOA,GAAM,QAAQ,EAAE,MAC/D,ECdO,SAASE,GACdC,EACAC,EACAC,EACQ,CACR,IAAMC,EAAM,IAAIC,GAAOJ,CAAO,EAAE,gBAAgB,EAC1CK,EAASC,GAASH,EAAKF,EAAWC,CAAM,EAC9C,GAAI,OAAOG,GAAW,SAAU,OAAOA,EACvC,MAAM,IAAI,MAAM,gDAAgDL,CAAO,EAAE,CAC3E,CAQA,SAASM,GACPC,EACAN,EACAC,EACY,CACZ,OAAQK,EAAK,KAAM,CACjB,IAAK,SACH,OAAOA,EAAK,MAEd,IAAK,OAAQ,CACX,GAAM,CAACC,EAAG,CAAC,EAAIC,GAAYF,EAAK,EAAE,EAC5BG,EAAcH,EAAK,OAASN,EAC5BU,EAAQT,EAAOQ,CAAW,EAChC,GAAI,CAACC,EAAO,MAAM,IAAI,MAAM,oBAAoBD,CAAW,EAAE,EAC7D,IAAME,EAAMC,GAAWL,EAAG,CAAC,EACrBM,EAAOH,EAAMC,CAAG,EACtB,GAAI,CAACE,EACH,MAAM,IAAI,MAAM,QAAQP,EAAK,EAAE,uBAAuBG,CAAW,EAAE,EACrE,OAAOX,GAAgBe,EAAK,KAAMJ,EAAaR,CAAM,CACvD,CAEA,IAAK,QACH,OAAOa,GAAaR,EAAMN,EAAWC,CAAM,EAE7C,IAAK,SAAU,CACb,IAAMc,EAAIV,GAASC,EAAK,KAAMN,EAAWC,CAAM,EACzCe,EAAIX,GAASC,EAAK,MAAON,EAAWC,CAAM,EAChD,GAAI,MAAM,QAAQc,CAAC,GAAK,MAAM,QAAQC,CAAC,EACrC,MAAM,IAAI,MAAM,8BAA8B,EAChD,OAAQV,EAAK,GAAI,CACf,IAAK,IACH,OAAOS,EAAIC,EACb,IAAK,IACH,OAAOD,EAAIC,EACb,IAAK,IACH,OAAOD,EAAIC,EACb,IAAK,IACH,OAAOD,EAAIC,EACb,QACE,MAAM,IAAI,MAAM,qBAAqBV,EAAK,EAAE,EAAE,CAClD,CACF,CAEA,IAAK,OAAQ,CACX,IAAMW,EAAUX,EAAK,KAAK,IAAKY,GAAQb,GAASa,EAAKlB,EAAWC,CAAM,CAAC,EACjEkB,EAAOb,EAAK,KAAK,YAAY,EAE7Bc,EAAKC,GAAUF,CAAI,EACzB,GAAI,CAACC,EAAI,MAAM,IAAI,MAAM,qBAAqBd,EAAK,IAAI,EAAE,EACzD,OAAOc,EAAGH,CAAO,CACnB,CACF,CACF,CAGA,SAASH,GACPR,EACAN,EACAC,EACU,CACV,IAAMQ,EAAcH,EAAK,OAASN,EAC5BU,EAAQT,EAAOQ,CAAW,EAChC,GAAI,CAACC,EAAO,MAAM,IAAI,MAAM,oBAAoBD,CAAW,EAAE,EAG7D,IAAMa,EAAa,WAAW,KAAKhB,EAAK,KAAK,GAAKA,EAAK,QAAUA,EAAK,IAEhEiB,EAAU,WAAW,KAAKjB,EAAK,KAAK,GAAKA,EAAK,QAAUA,EAAK,IAE/DkB,EACAC,EACAC,EACAC,EAEJ,GAAIL,EAEFE,EAAKI,GAAetB,EAAK,KAAK,EAC9BmB,EAAKD,EACLE,EAAKG,GAAe,GAAG,EACvBF,EAAKE,GAAe,GAAG,UACdN,EAETG,EAAKG,GAAevB,EAAK,KAAK,EAC9BqB,EAAKD,EACLF,EAAKI,GAAe,GAAG,EACvBH,EAAKG,GAAe,GAAG,MAClB,CAEL,GAAM,CAACE,EAAUC,CAAQ,EAAIvB,GAAYF,EAAK,KAAK,EAC7C,CAAC0B,EAAUC,CAAQ,EAAIzB,GAAYF,EAAK,GAAG,EACjDkB,EAAKM,EACLJ,EAAKK,EACLN,EAAKO,EACLL,EAAKM,CACP,CAEA,IAAMC,EAAgB,CAAC,EAEvB,QAAS3B,EAAIiB,EAAIjB,GAAKkB,EAAIlB,IACxB,QAAS4B,EAAIT,EAAIS,GAAKR,EAAIQ,IAAK,CAC7B,IAAMxB,EAAMC,GAAWL,EAAG4B,CAAC,EACrBtB,EAAOH,EAAMC,CAAG,EACtB,GAAIE,EAAM,CACR,IAAMuB,EAAMtC,GAAgBe,EAAK,KAAMJ,EAAaR,CAAM,EAC1DiC,EAAI,KAAKE,CAAG,CACd,CACF,CAEF,OAAOF,CACT,CAEO,SAASG,GAAU/B,EAAuB,CAC/C,OAAQA,EAAK,KAAM,CACjB,IAAK,SACH,OAAOA,EAAK,MAAM,SAAS,EAC7B,IAAK,OAAQ,CACX,GAAM,CAACC,EAAG4B,CAAC,EAAI3B,GAAYF,EAAK,EAAE,EAClC,OACGA,EAAK,MAAQ,GAAGA,EAAK,KAAK,IAAM,IAAMgC,GAAa/B,CAAC,EAAIgC,GAAaJ,CAAC,CAE3E,CACA,IAAK,QAAS,CACZ,IAAMK,EAAQlC,EAAK,MACbmC,EAAMnC,EAAK,IACjB,MAAO,GAAGA,EAAK,MAAQ,GAAGA,EAAK,KAAK,IAAM,EAAE,GAAGkC,CAAK,IAAIC,CAAG,EAC7D,CACA,IAAK,SACH,MAAO,GAAGJ,GAAU/B,EAAK,IAAI,CAAC,GAAGA,EAAK,EAAE,GAAG+B,GAAU/B,EAAK,KAAK,CAAC,GAClE,IAAK,OACH,MAAO,GAAGA,EAAK,IAAI,IAAIA,EAAK,KAAK,IAAI+B,EAAS,EAAE,KAAK,GAAG,CAAC,GAC7D,CACF,CAEO,SAASK,GACdpC,EACAqC,EACAC,EACS,CACT,IAAMC,EAAcC,GAAuB,CACzC,GAAM,CAACC,EAAIC,CAAE,EAAIxC,GAAYsC,CAAE,EACzBvC,EACJoC,GAASK,GAAMJ,EAAWG,EAAK,CAACJ,GAASI,GAAMH,EAAWG,EAAK,EAAIA,EAC/DZ,EACJQ,GAASK,GAAMJ,EAAWI,EAAK,GAAI,CAACL,GAASI,GAAMH,EAAWI,GAChE,OAAOV,GAAa/B,CAAC,EAAIgC,GAAaJ,CAAC,CACzC,EAEA,OAAQ7B,EAAK,KAAM,CACjB,IAAK,OACH,MAAO,CACL,GAAGA,EACH,GAAIuC,EAAWvC,EAAK,EAAE,CACxB,EACF,IAAK,QACH,MAAO,CACL,GAAGA,EACH,MAAOuC,EAAWvC,EAAK,KAAK,EAC5B,IAAKuC,EAAWvC,EAAK,GAAG,CAC1B,EACF,IAAK,SACH,MAAO,CACL,KAAM,SACN,GAAIA,EAAK,GACT,KAAMoC,GAASpC,EAAK,KAAMqC,EAAOC,CAAQ,EACzC,MAAOF,GAASpC,EAAK,MAAOqC,EAAOC,CAAQ,CAC7C,EACF,IAAK,OACH,MAAO,CACL,KAAM,OACN,KAAMtC,EAAK,KACX,KAAMA,EAAK,KAAK,IAAKY,GAAQwB,GAASxB,EAAKyB,EAAOC,CAAQ,CAAC,CAC7D,EACF,QACE,OAAOtC,CACX,CACF,CAEA,SAASE,GAAYsC,EAA8B,CACjD,IAAMG,EAAIH,EAAG,MAAM,oBAAoB,EACvC,GAAI,CAACG,EAAG,MAAM,IAAI,MAAM,oBAAoBH,CAAE,EAAE,EAChD,MAAO,CAAClB,GAAeqB,EAAE,CAAC,CAAC,EAAGpB,GAAeoB,EAAE,CAAC,CAAC,CAAC,CACpD,CCzLO,GAAM,CAACC,EAAYC,EAAa,EAAIC,EAAI,IAAI,OAAS,EAC/C,CAACC,GAAeC,EAAgB,EAAIF,EAAI,EAAE,EAC1C,CAACG,GAAaC,EAAc,EAAIJ,EAAI,EAAK,EACzC,CAACK,GAAUC,EAAW,EAAIN,EAAoB,EAC9C,CAACO,EAAQC,EAAS,EAAIR,EAAI,CAAE,EAAG,EAAG,EAAG,CAAE,CAAC,EACxC,CAACS,GAAgBC,EAAiB,EAAIV,EAAI,EAAK,EAC/C,CAACW,GAAUC,EAAW,EAAIZ,EAAI,EAAE,EAEhC,CAACa,GAAaC,EAAc,EAAId,EAAyB,EACzD,CAACe,GAAoBC,EAAqB,EAAIhB,EAAI,EAAK,EACvD,CAACiB,GAAeC,EAAgB,EAAIlB,EAAI,CACnD,EAAG,EACH,EAAG,EACH,IAAK,EACL,IAAK,EACL,MAAOmB,EACP,OAAQC,EACR,GAAI,IACN,CAAC,EAEYC,GAAoB,CAC/B,MAAO,EACP,IAAK,EACL,KAAM,EACR,EAEO,SAASC,IAAoB,CAClC,OAAOC,EACLC,EAAa,EAAE,gBAAgB,EAAE,OAAO,EAAE,KAAK,EAAE,OAAS,SAC5D,CACF,CAEO,SAASC,IAAoB,CAClCP,GAAiB,MAAOQ,GAAQ,CAC9B,IAAMC,EAASL,GAAkB,EACjCI,EAAI,GAAKE,GAAUD,EAAO,SAAUA,EAAO,QAAQ,EACnD,IAAME,EAAOC,GAAa,CACxB,SAAUH,EAAO,SACjB,SAAUA,EAAO,SACjB,OAAQA,EAAO,SACf,OAAQA,EAAO,QACjB,CAAC,EACDD,EAAI,IAAMC,EAAO,SACjBD,EAAI,IAAMC,EAAO,SACjBD,EAAI,EAAIG,EAAK,CAAC,EACdH,EAAI,EAAIG,EAAK,CAAC,EACdH,EAAI,MAAQG,EAAK,CAAC,EAClBH,EAAI,OAASG,EAAK,CAAC,CACrB,CAAC,CACH,CAEO,GAAM,CAACE,EAAaC,EAAc,EAAIhC,EAC3C,WAAW,8BAA8B,EAAE,OAC7C,EAEa,CAACiC,GAAkBC,EAAmB,EAAIlC,EAAY,EACnEmC,EAAM,IAAM,CACVD,GACEH,EAAY,EAAIK,GAAsBC,EACxC,CACF,CAAC,EAEM,GAAM,CAACC,GAAWC,EAAY,EAAIvC,EAAIwC,GAAc,EAAE,CAAC,EACjD,CAACC,GAAYC,EAAa,EAAI1C,EAAI2C,EAAK,SAAS,CAAC,EAEvD,SAASC,GAAYC,EAAmB,CAC7C,GAAM,CAACC,EAAMC,CAAO,EAAI/C,EAAI6C,CAAS,EAC/B,CAACG,EAAqBC,CAAsB,EAAIjD,EACpD,IAAI,IAAY,CAAC,SAAS,CAAC,CAC7B,EACM,CAACkD,EAAiBC,CAAkB,EAAInD,EAAI,IAAI,GAAa,EAC7D,CAACoD,EAAeC,CAAgB,EAAIrD,EAExC,CAAC,CAAC,EACE,CAACsD,EAAcC,CAAe,EAAIvD,EAAe,CAAC,CAAC,EACnD,CAACwD,EAAYC,CAAa,EAAIzD,EAA8B,CAAC,CAAC,EAC9D,CAAC0D,EAAWC,CAAY,EAAI3D,EAAa,CAAC,CAAC,EAC3C,CAAC4D,EAAWC,CAAY,EAAI7D,EAAgB,CAAC,CAAC,EAC9C,CAAC8D,EAAYC,CAAa,EAAI/D,EAA4B,CAAC,CAAC,EAC5D,CAACgE,EAAYC,CAAa,EAAIjE,EAA4B,CAAC,CAAC,EAElE,MAAO,CACL,KAAA8C,EACA,QAAAC,EACA,oBAAAC,EACA,uBAAAC,EACA,gBAAAC,EACA,mBAAAC,EACA,cAAAC,EACA,iBAAAC,EACA,aAAAC,EACA,gBAAAC,EACA,WAAAC,EACA,cAAAC,EACA,UAAAC,EACA,aAAAC,EACA,UAAAC,EACA,aAAAC,EACA,WAAAC,EACA,cAAAC,EACA,WAAAC,EACA,cAAAC,CACF,CACF,CAEO,SAASC,GAAaC,EAAgB,CAC3C,IAAMC,EAAsB,CAAC,EAC7B,QAAWC,KAASC,GAAO,EACzBF,EAAYC,EAAM,KAAK,CAAC,EAAIA,EAAM,UAAU,EAG9C,QAAWE,KAAS,OAAO,OAAOJ,CAAK,EACrC,GAAI,CACFI,EAAM,SACJA,EAAM,KAAK,CAAC,IAAM,IACdC,GACED,EAAM,KAAK,MAAM,CAAC,EAClB/C,EAAa,EAAE,KAAK,EACpB4C,CACF,EAAE,SAAS,EACXG,EAAM,IACd,OAASE,EAAG,CACVF,EAAM,SAAWE,CACnB,CAEJ,CAEO,SAASC,GACdhB,EACAiB,EACA,CACA,IAAMzB,EAAkB1B,EAAa,EAAE,gBAAgB,EACjDoD,EAAwC,CAAC,EAC/C,QAAWC,KAAKnB,EAAW,CACzB,IAAMoB,EAAM,CAACD,EACPE,EAAMD,EAAME,EACZC,EAAM,KAAK,MAAMH,EAAME,CAAQ,EAC/BrD,EAAiB,CACrB,SAAUoD,EACV,SAAUE,EACV,OAAQF,EACR,OAAQE,CACV,EAEA,QAAWC,KAAKhC,EACT0B,EAAcM,CAAC,IAAGN,EAAcM,CAAC,EAAI3D,EAAY2D,CAAC,GACnDC,GAAexD,EAAQiD,EAAcM,CAAC,CAAC,GACzCP,EAASjB,EAAUoB,CAAG,EAAGA,CAAG,CAElC,CACF,CAIA,IAAIM,GAAe,EACN,CAACd,GAAQe,EAAS,EAAIrF,EAAa,CAC9C4C,GAAY,QAAQwC,IAAc,EAAE,CACtC,CAAC,EACY,CAAC5D,EAAc8D,EAAe,EAAItF,EAAIsE,GAAO,EAAE,CAAC,CAAC,EAE9DiB,EACE,IAAM/D,EAAa,EAAE,KAAK,EAC1B,IAAM,CACJ,SAAS,KAAO,IAAI,mBAAmBA,EAAa,EAAE,KAAK,CAAC,CAAC,EAC/D,CACF,EAEO,SAASgE,IAAW,CACzBH,GAAU,MAAOf,GAAW,CAC1B,IAAMQ,EAAMR,EAAO,OACnBA,EAAO,KAAK1B,GAAY,QAAQwC,IAAc,EAAE,CAAC,EACjDE,GAAgBhB,EAAOQ,CAAG,CAAC,CAC7B,CAAC,CACH,CAEO,SAASW,GAASX,EAAa,CAChCR,GAAO,EAAEQ,CAAG,IAAMtD,EAAa,GACjC8D,GAAgBR,IAAQ,EAAIR,GAAO,EAAE,CAAC,EAAIA,GAAO,EAAEQ,EAAM,CAAC,CAAC,EAG7DO,GAAU,MAAOf,GAAWA,EAAO,OAAOQ,EAAK,CAAC,CAAC,CACnD,CAMAY,EAAM,IAAM,CACV,SAAS,gBAAgB,UAAUC,EAAY,EAAI,MAAQ,QAAQ,EAAE,MAAM,CAC7E,CAAC,EAEM,SAASC,GAAsBC,EAAuB,CAC3D,OAAOC,GAAUC,EAAa,EAAE,WAAW,EAAEF,CAAK,GAAK,EACzD,CAEO,SAASG,GAAuBH,EAAuB,CAC5D,OAAOI,GAAUF,EAAa,EAAE,WAAW,EAAEF,CAAK,GAAK,EACzD,CAEO,SAASK,GACdC,EACAC,EACAC,EACAC,EACa,CACb,IAAMC,EAAa,OAAO,KAAKH,CAAO,EACnC,IAAI,MAAM,EACV,KAAK,CAACI,EAAGC,IAAMD,EAAIC,CAAC,EAEnBC,EAAI,EACJC,EAAM,EAEV,QAAWC,KAAOL,EAAY,CAC5B,GAAIK,EAAMF,EAAG,CAEX,IAAMG,GADWD,EAAMF,GACIL,EAC3B,GAAIM,EAAME,GAAWV,EAAQ,CAC3B,IAAMW,EAAqB,KAAK,OAAOX,EAASQ,GAAON,CAAQ,EAC/D,MAAO,CACL,MAAOK,EAAII,EACX,WAAYX,EAASQ,GAAON,CAC9B,CACF,CACAM,GAAOE,EACPH,EAAIE,CACN,CACA,IAAMG,EAAYT,EAAiBM,CAAG,EACtC,GAAID,EAAMI,GAAaZ,EACrB,MAAO,CAAE,MAAOS,EAAK,UAAWT,EAASQ,CAAI,EAE/CA,GAAOI,EACPL,EAAIE,EAAM,CACZ,CAEA,IAAMI,EAAe,KAAK,OAAOb,EAASQ,GAAON,CAAQ,EACzD,MAAO,CAAE,MAAOK,EAAIM,EAAc,WAAYb,EAASQ,GAAON,CAAS,CACzE,CAEO,SAASY,GAA0BC,EAA8B,CACtE,OAAOhB,GACLgB,EACAnB,EAAa,EAAE,WAAW,EAC1BD,EACAF,EACF,CACF,CAEO,SAASuB,GAAuBC,EAA8B,CACnE,OAAOlB,GACLkB,EACArB,EAAa,EAAE,WAAW,EAC1BE,EACAD,EACF,CACF,CCzRA,SAASqB,IAAiB,CACxB,IAAMC,EAAS,SAAS,cAAc,QAAQ,EAC9CA,EAAO,MAAM,WAAa,cAC1B,IAAMC,EAAMD,EAAO,WAAW,IAAI,EAClC,GAAI,CAACC,EAAK,MAAM,IAAI,MAAM,oCAAoC,EAC9D,MAAO,CAACD,EAAQC,CAAG,CACrB,CAEA,GAAI,CAACC,GAAWC,EAAM,EAAIJ,GAAe,EA8GlC,SAASK,GAAiBC,EAA4B,CAC3D,IAAMC,EAAUD,EAAG,cAAc,EACjC,OAAAA,EAAG,YAAYA,EAAG,WAAYC,CAAO,EAErCD,EAAG,WACDA,EAAG,WACH,EACAA,EAAG,KACHA,EAAG,KACHA,EAAG,cACHE,EACF,EACAF,EAAG,cAAcA,EAAG,WAAYA,EAAG,eAAgBA,EAAG,aAAa,EACnEA,EAAG,cAAcA,EAAG,WAAYA,EAAG,eAAgBA,EAAG,aAAa,EACnEA,EAAG,cAAcA,EAAG,WAAYA,EAAG,mBAAoBA,EAAG,MAAM,EAChEA,EAAG,cAAcA,EAAG,WAAYA,EAAG,mBAAoBA,EAAG,MAAM,EAEzDC,CACT,CAEA,GAAM,CAACC,GAAaC,EAAQ,EAAIC,GAAe,EChIxC,SAASC,GACdC,EACAC,EACAC,EACqB,CACrB,IAAMC,EAASH,EAAG,aAAaE,CAAI,EACnC,GAAIC,GAAU,KACZ,OAAO,IAAI,MACT;AAAA,SAAoCD,CAAI;AAAA,WAAeD,CAAM,EAC/D,EAMF,GAHAD,EAAG,aAAaG,EAAQF,CAAM,EAC9BD,EAAG,cAAcG,CAAM,EAEnB,CAACH,EAAG,mBAAmBG,EAAQH,EAAG,cAAc,EAAG,CACrD,IAAMI,EAAaJ,EAAG,iBAAiBG,CAAM,EAC7C,OAAAH,EAAG,aAAaG,CAAM,EACf,IAAI,MACT,IAAIE,GAAeH,CAAI,CAAC,gCAAgCE,CAAU,EACpE,CACF,CAEA,OAAOD,CACT,CAEO,SAASG,GACdC,EACAC,EACAC,EACA,CACA,IAAMT,EAAKO,EAAO,WAAW,QAAQ,EACrC,GAAI,CAACP,EAAI,OAAO,IAAI,MAAM,sBAAsB,EAEhDA,EAAG,OAAOA,EAAG,KAAK,EAClBA,EAAG,UAAUA,EAAG,UAAWA,EAAG,mBAAmB,EACjDA,EAAG,OAAOA,EAAG,UAAU,EACvBA,EAAG,WAAW,EAAK,EAAK,EAAK,CAAG,EAEhC,IAAMU,EAAOX,GAAcC,EAAIQ,EAAUR,EAAG,aAAa,EACzD,GAAIU,aAAgB,MAAO,OAAOA,EAClC,IAAMC,EAAOZ,GAAcC,EAAIS,EAAUT,EAAG,eAAe,EAC3D,GAAIW,aAAgB,MAAO,OAAOA,EAElC,IAAMC,EAAUZ,EAAG,cAAc,EAKjC,OAJAA,EAAG,aAAaY,EAASF,CAAI,EAC7BV,EAAG,aAAaY,EAASD,CAAI,EAC7BX,EAAG,YAAYY,CAAO,EAEjBZ,EAAG,oBAAoBY,EAASZ,EAAG,WAAW,GAInDA,EAAG,WAAWY,CAAO,EAEd,CAAE,GAAAZ,EAAI,QAAAY,CAAQ,GALZ,IAAI,MAAM,wBAAwBZ,EAAG,kBAAkBY,CAAO,CAAC,EAAE,CAM5E,CA0BA,SAASC,GACPb,EACAY,EACsB,CACtB,IAAME,EAAad,EAAG,mBAAmBY,EAAS,YAAY,EAC9D,OAAKE,EAEE,CACL,WAAAA,EACA,SAAUd,EAAG,kBAAkBY,EAAS,UAAU,EAClD,MAAOZ,EAAG,kBAAkBY,EAAS,WAAW,EAChD,MAAOZ,EAAG,kBAAkBY,EAAS,WAAW,EAChD,MAAOZ,EAAG,kBAAkBY,EAAS,WAAW,EAChD,GAAIZ,EAAG,kBAAkBY,EAAS,QAAQ,CAC5C,EATwB,IAAI,MAAM,2BAA2B,CAU/D,CAoBA,eAAsBG,GACpBR,EACAG,EACAC,EACAK,EAC+B,CAC/B,IAAMC,EAASX,GAAUC,EAAQG,EAAMC,CAAI,EAC3C,GAAIM,aAAkB,MAAO,OAAOA,EACpCC,GAAiBD,EAAO,EAAE,EAE1B,IAAME,EAASN,GAAUI,EAAO,GAAIA,EAAO,OAAO,EAClD,GAAIE,aAAkB,MAAO,OAAOA,EACpC,IAAMnB,EAAKiB,EAAO,GACZG,EAAYpB,EAAG,aAAa,EAC5BqB,EAAWrB,EAAG,aAAa,EAC3BsB,EAAatB,EAAG,aAAa,EAE/BuB,EAAgB,EAChBC,EAAe,EAEnBD,EAAgBE,GAASF,EAAgBP,EAAK,OAAO,WAAY,EAAE,EACnEQ,EAAeC,GAASD,EAAeR,EAAK,MAAM,WAAY,EAAE,EAEhEhB,EAAG,WAAWA,EAAG,aAAcoB,CAAS,EACxCpB,EAAG,WAAWA,EAAG,aAAcuB,EAAevB,EAAG,WAAW,EAE5DA,EAAG,WAAWA,EAAG,qBAAsBqB,CAAQ,EAC/CrB,EAAG,WAAWA,EAAG,qBAAsBwB,EAAcxB,EAAG,WAAW,EAEnE,IAAMG,EAAiB,CACrB,GAAIH,EAAG,kBAAkB,EACzB,SAAUA,EAAGgB,EAAK,QAAQ,EAC1B,aAAcA,EAAK,SACnB,aAAcA,EAAK,SAAS,OAASU,GACrC,WAAYV,EAAK,MAAM,MACzB,EAEAhB,EAAG,gBAAgBG,EAAO,EAAE,EAE5BH,EAAG,WAAWA,EAAG,aAAcoB,CAAS,EACxCpB,EAAG,cAAcA,EAAG,aAAc,EAAGgB,EAAK,MAAM,EAEhDhB,EAAG,wBAAwBmB,EAAO,QAAQ,EAC1CnB,EAAG,oBAAoBmB,EAAO,SAAU,EAAGnB,EAAG,MAAO,GAAO2B,GAAa,CAAC,EAE1E3B,EAAG,WAAWA,EAAG,qBAAsBqB,CAAQ,EAC/CrB,EAAG,cAAcA,EAAG,qBAAsB,EAAGgB,EAAK,KAAK,EAEvD,IAAMY,EAAqB,CACzB,GAAIX,EAAO,GACX,OAAAE,EACA,OAAAhB,EACA,UAAAiB,EACA,SAAAC,EACA,WAAAC,EACA,WAAYO,GAAc,IAC1B,aAAc,GACd,kBAAAC,GACA,oBAAAC,GACA,gBAAAC,GACA,cAAAC,GACA,KAAAC,GACA,OAAAC,EACF,EAEA,OAAAP,EAAK,kBAAkB,EAEhBA,CACT,CAEA,SAASG,GAEPK,EACAC,EACA,CACA,IAAMC,EAAS,KAAK,WACpB,KAAK,GAAG,WAAW,KAAK,GAAG,aAAcA,CAAM,EAC/C,IAAMC,EAAY,KAAK,GAAG,aAAa,EACvC,GAAI,CAACA,EAAW,MAAM,IAAI,MAAM,+BAA+B,EAE/D,eAAQ,IAAI,uBAAwB,KAAK,WAAYH,CAAO,EAC5D,KAAK,GAAG,WAAW,KAAK,GAAG,aAAcG,CAAS,EAClD,KAAK,GAAG,WAAW,KAAK,GAAG,aAAcH,EAASC,CAAK,EACvD,KAAK,GAAG,cAAc,KAAK,GAAG,aAAc,EAAG,KAAK,OAAO,YAAY,EACvE,KAAK,GAAG,aAAaC,CAAM,EAC3B,KAAK,WAAaC,EAClB,KAAK,WAAaH,EAClB,KAAK,kBAAkB,EAEhBG,CACT,CAEA,SAAST,IAAsC,CAC7C,KAAK,GAAG,WAAW,KAAK,GAAG,aAAc,KAAK,UAAU,EACxD,KAAK,GAAG,WACN,KAAK,GAAG,aACR,KAAK,WACL,KAAK,GAAG,YACV,EACA,KAAK,GAAG,cAAc,KAAK,GAAG,aAAc,EAAG,KAAK,OAAO,YAAY,EAEvE,QAASU,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,IAAMC,EAAM,KAAK,OAAO,MAAQD,EAChC,KAAK,GAAG,wBAAwBC,CAAG,EACnC,KAAK,GAAG,oBACNA,EACA,EACA,KAAK,GAAG,MACR,GACAZ,GACAW,EAAI,EACN,EACA,KAAK,GAAG,oBAAoBC,EAAK,CAAC,CACpC,CAEA,KAAK,GAAG,wBAAwB,KAAK,OAAO,KAAK,EACjD,KAAK,GAAG,oBACN,KAAK,OAAO,MACZ,EACA,KAAK,GAAG,MACR,GACAZ,GACA,GAAKa,EACP,EACA,KAAK,GAAG,oBAAoB,KAAK,OAAO,MAAO,CAAC,EAEhD,KAAK,GAAG,wBAAwB,KAAK,OAAO,EAAE,EAC9C,KAAK,GAAG,oBACN,KAAK,OAAO,GACZ,EACA,KAAK,GAAG,MACR,GACAb,GACA,GAAKa,EACP,EACA,KAAK,GAAG,oBAAoB,KAAK,OAAO,GAAI,CAAC,EAE7C,KAAK,GAAG,wBAAwB,KAAK,OAAO,KAAK,EACjD,KAAK,GAAG,oBACN,KAAK,OAAO,MACZ,EACA,KAAK,GAAG,MACR,GACAb,GACA,GAAKa,EACP,EACA,KAAK,GAAG,oBAAoB,KAAK,OAAO,MAAO,CAAC,CAClD,CAEA,SAASV,GAEP7B,EACAwC,EACA,CAEA,GADAxC,EAAO,aAAewC,EAClBxC,EAAO,aAAa,YAAc,KAAK,WAAY,CACrD,IAAMiC,EAAUjC,EAAO,aAAa,WAAa,EACjD,KAAK,oBAAoBiC,EAAS,KAAK,GAAG,YAAY,CACxD,CAEA,KAAK,GAAG,WAAW,KAAK,GAAG,aAAc,KAAK,UAAU,EACxD,KAAK,GAAG,cAAc,KAAK,GAAG,aAAc,EAAGjC,EAAO,YAAY,CACpE,CAEA,SAAS8B,IAAkC,CACzC,KAAK,aAAe,EACtB,CAEA,SAASC,IAAyB,CAC3B,KAAK,KAEV,KAAK,GAAG,MAAM,KAAK,GAAG,iBAAmB,KAAK,GAAG,gBAAgB,EAEjE,KAAK,GAAG,gBAAgB,KAAK,OAAO,EAAE,EACtC,KAAK,GAAG,sBACN,KAAK,OAAO,SACZ,KAAK,OAAO,WACZ,KAAK,GAAG,cACR,EACA,KAAK,OAAO,aAAa,OAASR,EACpC,EACF,CAEA,SAASS,IAA2B,CAC9B,KAAK,eACP,KAAK,KAAK,EACV,KAAK,aAAe,IAEtB,sBAAsB,KAAK,OAAO,KAAK,IAAI,CAAC,CAC9C,CAEA,SAAS9B,GAAeuC,EAAgB,CACtC,OAAQA,EAAQ,CACd,KAAK,sBAAsB,cACzB,MAAO,gBACT,KAAK,sBAAsB,gBACzB,MAAO,kBACT,KAAK,sBAAsB,WACzB,MAAO,aACT,KAAK,sBAAsB,iBACzB,MAAO,mBACT,KAAK,sBAAsB,iBACzB,MAAO,mBACT,KAAK,sBAAsB,iBACzB,MAAO,mBACT,KAAK,sBAAsB,mBACzB,MAAO,qBACT,KAAK,sBAAsB,aACzB,MAAO,eACT,KAAK,sBAAsB,qBACzB,MAAO,uBACT,KAAK,sBAAsB,YACzB,MAAO,cACT,KAAK,sBAAsB,YACzB,MAAO,cACT,KAAK,sBAAsB,aACzB,MAAO,eACT,KAAK,sBAAsB,MACzB,MAAO,QACT,KAAK,sBAAsB,cACzB,MAAO,gBACT,KAAK,sBAAsB,eACzB,MAAO,iBACT,KAAK,sBAAsB,aACzB,MAAO,eACT,KAAK,sBAAsB,WACzB,MAAO,aACT,KAAK,sBAAsB,OACzB,MAAO,SACT,KAAK,sBAAsB,KACzB,MAAO,OACT,KAAK,sBAAsB,MACzB,MAAO,QACT,KAAK,sBAAsB,QACzB,MAAO,UACT,KAAK,sBAAsB,SACzB,MAAO,WACT,KAAK,sBAAsB,OACzB,MAAO,SACT,KAAK,sBAAsB,OACzB,MAAO,SACT,KAAK,sBAAsB,MACzB,MAAO,QACT,QACE,MAAO,qBAAqBA,EAAO,SAAS,EAAE,CAAC,GACnD,CACF,CCrXA,IAAMC,GAAcC,EAAc,yCAAyC,EAgBvEC,GACAC,EACAC,GAIG,SAASC,GAAgBC,EAAoB,CAC9C,CAACC,IAAU,CAACC,GAChBA,EAAU,gBAAgBD,GAAQD,CAAI,CACxC,CAEe,SAARG,IAA0B,CAC/B,eAAe,SAAY,CAsDzB,GArDiB,IAAI,eAAe,IAClCC,GAAcC,GAAO,sBAAsB,CAAC,CAC9C,EAES,QAAQA,EAAM,EA2CvBH,EAAa,MAAMI,GAAiBD,GAxCvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAuBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiB2C,CACtD,SAAU,iBACV,SAAUE,GAAU,EAAE,KACtB,OAAQC,GAAU,WAClB,MAAOA,GAAU,SACnB,CAAC,EACGN,aAAqB,MAAO,OAAO,QAAQ,MAAMA,CAAS,EAC9DD,GAASC,EAAU,OAEnBO,EAAiB,EACjBP,EAAU,OAAO,CACnB,CAAC,EAEDQ,EAAM,IAAM,CACNC,EAAY,EACdT,GAAW,GAAG,WAAW,EAAG,EAAG,EAAG,CAAC,CAIvC,CAAC,EAEDU,GAAU,CAACD,EAAaE,GAAYN,EAAS,EAAG,IAAM,CACpDL,GAAW,cAAc,CAC3B,CAAC,EAEDU,GAAU,CAACE,EAAYC,CAAM,EAAG,IAAMN,EAAiB,CAAC,EAExD,SAASA,GAAmB,CAC1B,GAAM,CAAE,MAAAO,EAAO,OAAAC,CAAO,EAAIH,EAAW,EACjC,CAACZ,GAAa,CAACc,GAAS,CAACC,IAE7Bf,EAAU,GAAG,MAAMA,EAAU,GAAG,gBAAgB,EAEhDG,GAAO,MAAQW,EACfX,GAAO,OAASY,EAChBf,EAAU,GAAG,SAAS,EAAG,EAAGc,EAAOC,CAAM,EAEzCC,GAAc,MAAOC,GAAS,CAC5BC,EAAK,MAAM,EAAGJ,EAAOC,EAAQ,EAAG,GAAI,IAAME,CAAI,EAC9C,IAAME,EAAIN,EAAO,GACbM,EAAE,GAAKA,EAAE,IACXD,EAAK,YAAYD,EAAM,CAACE,EAAE,EAAG,CAACA,EAAE,EAAG,CAAC,EAEtCnB,EAAU,GAAG,iBAAiBA,EAAU,OAAO,WAAY,GAAOiB,CAAI,CACxE,CAAC,EACH,CAEA,OAAQ,IAAM,CAChB,IAAMG,EAAWC,GAAY,EAE7B,OAAAlB,GAASiB,EAEFA,CACP,GAAG,CACH,CCtGAE,EACE,IAAM,CACJC,EAAW,EACXC,EAAa,EAAE,WAAW,EAC1BA,EAAa,EAAE,WAAW,EAC1BA,EAAa,EAAE,WAAW,EAC1BC,EAAO,EACPC,EAAY,CACd,EACA,IAAM,CACJ,GAAM,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAIL,EAAW,EAC/BM,EAAIF,EAAQG,EACZC,EAAIH,EAASI,EAEbC,EAAO,KAAK,KAAKJ,EAAIC,CAAM,EAC3BI,EAAO,KAAK,KAAKH,EAAIC,CAAM,EAE7BG,EAAYC,GACZC,EAAYC,GACXZ,EAAY,IACfS,EAAYI,GACZF,EAAYG,IAGd,IAAMC,EAAUC,GAAQjB,EAAO,EAAE,EAAGK,CAAM,EACpCa,EAAUD,GAAQjB,EAAO,EAAE,EAAGO,CAAM,EAGpCY,EAAWC,GAA0BpB,EAAO,EAAE,CAAC,EAC/CqB,EAAWC,GAAuBtB,EAAO,EAAE,CAAC,EAC5CuB,EAAe,CACnB,SAAUJ,EAAS,MACnB,SAAUE,EAAS,MACnB,OAAQF,EAAS,MAAQX,EACzB,OAAQa,EAAS,MAAQZ,CAC3B,EAEMe,EAAuB,CAC3BC,EACAC,IACuB,CACvB,IAAIC,EAAI,EACJC,EAAW,EACTC,EAA2B,CAAC,EAClC,QAAWC,KAAKL,EAAS,CACvB,IAAMM,EAAQC,EAAYF,CAAC,EACvBG,GAAeF,EAAOR,CAAY,IACpCM,EAAe,KAAK,GAAGH,EAAM,MAAMC,EAAGA,EAAI,CAAC,CAAC,EAC5CC,KAEFD,GAAK,CACP,CACA,MAAO,CAACE,EAAgBD,CAAQ,CAClC,EAEMM,EAAmC,CAAC,EACpCC,EAAsB,CAAC,EAC7B,QAAWC,KAASrC,EAAa,EAAE,WAAW,EAAG,CAC/C,IAAM2B,EAAQ3B,EAAa,EAAE,WAAW,EAAEqC,CAAK,EACzC,CAACX,EAASY,CAAU,EAAIb,EAC5BzB,EAAa,EAAE,aAAa,EAAEqC,CAAK,EACnCV,CACF,EACIW,IAAe,IACnBH,EAAOE,CAAK,EAAIX,EAChBU,EAAU,KAAKE,CAAU,EAC3B,CAEAC,GAAa,MAAOC,GAAS,CAC3B,IAAMC,EAAWL,EAAU,OAAO,CAACM,EAAGC,IAAMD,EAAIC,EAAG,CAAC,EACpDH,EAAK,OAAO9B,EAAOD,EAAOgC,CAAQ,EAElC,IAAIG,EAAa,EACjB,QAAShB,EAAI,EAAGA,EAAInB,EAAMmB,IAAK,CAC7B,IAAMiB,EAASzB,EAAS,MAAQQ,EAAI,EAC9BkB,EAASC,GACb3B,EAAS,MACTyB,EACA7C,EAAa,EAAE,WAAW,CAC5B,EACMgD,EAAQR,EAAK,QAAQZ,CAAC,EAC5BqB,EAAK,cAAcD,EAAOE,GAAgB3C,EAAG,CAAC,EAC9C0C,EAAK,YACHD,EACApB,EAAItB,EAASL,EAAO,EAAE,EAAI6C,EAAS1B,EAAS,UAC5CD,EACA,EACF,EACAqB,EAAK,QAAQZ,CAAC,EAAE,IAAIjB,CAAS,EAC7B6B,EAAK,QAAQZ,CAAC,EAAE,CAAC,EAAI,CACvB,CACAgB,GAAcnC,EAEd,QAASmB,EAAI,EAAGA,EAAIlB,EAAMkB,IAAK,CAC7B,IAAMuB,EAAS7B,EAAS,MAAQM,EAAI,EAC9BkB,EAASC,GACbzB,EAAS,MACT6B,EACAnD,EAAa,EAAE,WAAW,CAC5B,EACMgD,EAAQR,EAAK,QAAQZ,EAAIgB,CAAU,EACzCK,EAAK,cAAcD,EAAO3C,EAAG6C,GAAgB,CAAC,EAC9CD,EAAK,YACHD,EACA/B,EACAW,EAAIpB,EAASP,EAAO,EAAE,EAAI6C,EAASxB,EAAS,UAC5C,EACF,EACAkB,EAAK,QAAQZ,EAAInB,CAAI,EAAE,IAAIE,CAAS,EACpC6B,EAAK,QAAQZ,EAAInB,CAAI,EAAE,CAAC,EAAI,CAC9B,CACAmC,GAAclC,EAEd,IAAIiC,EAAI,EACR,QAAWN,KAASF,EAAQ,CAC1B,IAAMR,EAAQQ,EAAOE,CAAK,EAC1Be,GAAYZ,EAAMb,EAAOiB,EAAYS,GAAUhB,CAAK,EAAGM,EAAI,EAAE,EAC7DC,GAAcR,EAAUO,GAAG,CAC7B,CAEAW,GAAgBd,EAAK,IAAI,CAC3B,CAAC,CACH,CACF,EAEO,SAASY,GACdZ,EACAe,EACAT,EACAjC,EACA2C,EAAI,EACJ,CACA,IAAI5B,EAAIkB,EACR,QAASH,EAAI,EAAGA,EAAIY,EAAQ,OAAQZ,GAAK,EAAG,CAC1C,GAAM,CAACc,EAAGC,EAAGrD,EAAGE,CAAC,EAAIgD,EAAQ,MAAMZ,EAAGA,EAAI,CAAC,EACrCN,EACJxB,IACCX,EAAY,EAAIyD,GAA2BC,IAC9CpB,EAAK,QAAQZ,CAAC,EAAE,CAAC,EAAI,EACrBY,EAAK,QAAQZ,CAAC,EAAE,IAAIS,CAAK,EAEzB,IAAMW,EAAQR,EAAK,QAAQZ,CAAC,EAC5BqB,EAAK,cAAcD,EAAO3C,EAAGE,EAAG,CAAC,EACjC0C,EAAK,YAAYD,EAAOS,EAAGC,EAAGF,CAAC,EAC/B5B,GACF,CACF,CCtKA,IAAMiC,GAAcC,EAAc,yfAAof,EAEthB,OAAO,4BAA8B,OAAO,6BAA+BC,EAAuB,WAAW,EAC7G,OAAO,2BAA6B,OAAO,4BAA8BA,EAAuB,UAAU,EAC1G,OAAO,4BAA8B,OAAO,6BAA+BA,EAAuB,WAAW,EAC7G,OAAO,0BAA4B,OAAO,2BAA6BA,EAAuB,SAAS,EAexF,SAARC,GAAwBC,EAAoB,CACjD,IAAMC,EAASC,GAAS,CAAE,EAAGF,EAAM,GAAK,EAAG,EAAGA,EAAM,GAAK,CAAE,CAAC,EACtDG,EAAcD,GAAS,CAAE,EAAGD,EAAO,EAAG,EAAGA,EAAO,CAAE,CAAC,EACnDG,EAAYF,GAAS,CAAE,EAAGD,EAAO,EAAG,EAAGA,EAAO,CAAE,CAAC,EACjD,CAACI,EAAUC,CAAW,EAAIC,EAAI,EAAK,EAEzC,SAASC,EAAUC,EAA4B,CAc7C,GAbI,CAACT,EAAM,YAMPS,EAAE,kBAAkB,mBACpBA,EAAE,kBAAkB,kBAGtBA,EAAE,eAAe,EAGfA,aAAa,YAAcA,EAAE,SAAW,GAC1C,OAGFH,EAAY,EAAI,EAEhB,IAAMI,EAAMC,GAAiBF,CAAC,EAC9BN,EAAY,EAAIO,EAAI,EACpBP,EAAY,EAAIO,EAAI,EAEpBE,EAAKH,CAAC,CACR,CAEA,SAASG,EAAKH,EAA4B,CACxC,GAAI,CAACJ,EAAS,EACZ,OAGF,IAAMK,EAAMC,GAAiBF,CAAC,EAC9BR,EAAO,EAAIG,EAAU,EAAIM,EAAI,EAAIP,EAAY,EAC7CF,EAAO,EAAIG,EAAU,EAAIM,EAAI,EAAIP,EAAY,CAC/C,CAEA,SAASU,GAAW,CAClBP,EAAY,EAAK,EACjBF,EAAU,EAAIH,EAAO,EACrBG,EAAU,EAAIH,EAAO,CACvB,CAEA,OACG,IAAM,CACX,IAAMa,EAAWlB,GAAY,EACvBmB,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,WACpBE,EAAWL,EAAS,YACpBM,EAAWD,EAAS,WAE1B,OAAAE,EAAoBR,EAAU,OAAQ,IAAMd,EAAM,IAAI,EACtDuB,EAAgBT,EAAU,OAAQ,IAAMd,EAAM,IAAI,EAClDwB,EAAsBV,EAAU,OAAQ,IAAM,GAAGb,EAAO,CAAC,IAAI,EAC7DuB,EAAsBV,EAAU,MAAO,IAAM,GAAGb,EAAO,CAAC,IAAI,EAC5DwB,EAAoB,OAAO,4BAA6BX,EAAUF,CAAI,EACtEa,EAAoB,OAAO,2BAA4BX,EAAUD,CAAQ,EACzEY,EAAoB,OAAO,4BAA6BX,EAAUF,CAAI,EACtEa,EAAoB,OAAO,0BAA2BX,EAAUD,CAAQ,EACxEU,EAAgBR,EAAU,cAAe,IAAM,CAACV,EAAS,CAAC,EAC1DkB,EAAgBR,EAAU,kBAAmB,IAAMV,EAAS,CAAC,EAC7DqB,EAAmBX,EAAU,YAAaP,CAAS,EACnDkB,EAAmBX,EAAU,aAAcP,CAAS,EACpDmB,EAAiBV,EAAU,IAAMjB,EAAM,KAAK,EAC5C0B,EAAmBR,EAAU,QAAS,IAAMlB,EAAM,QAAQ,EAAK,CAAC,EAChE0B,EAAmBR,EAAU,WAAY,IAAMlB,EAAM,QAAQ,EAAK,CAAC,EACnE4B,EAAkBR,EAAU,iBAAkBpB,EAAM,EAAE,EACtD4B,EAAkBR,EAAU,QAAS,qBAAqBpB,EAAM,KAAK,EAAE,EACvE2B,EAAiBN,EAAU,UAAU,CAAC,GAAI,UAAa,CAAC,EAEjDP,CACP,GAAG,CAEH,CCxGe,SAARe,GAAwBC,EAAoBC,EAAkB,CACnE,IAAMC,EAAS,KACRF,EAAM,GAGFA,EAAM,cAAc,QAC3BA,EAAM,KAAOA,EAAM,GAGnBA,EAAM,KAAO,SAAS,cAAcA,EAAM,EAAE,GAAK,SAAS,KAN1DA,EAAM,KAAO,SAAS,KASjBA,EAAM,MAGTG,EAAS,SAAS,cAAc,EAAE,EAElCC,EAAWH,EAAM,UAAU,EACjC,sBAAe,IAAM,CACnBE,EAAO,iBAAiB,UAAW,IAAM,CACvCC,EAAS,QAAQC,EAAW,EAC5BF,EAAO,OAAO,CAChB,CAAC,CACH,CAAC,EAEDG,EAAM,IAAM,CACVJ,EAAO,EAAE,OAAO,GAAGE,CAAQ,CAC7B,CAAC,EAEMD,CACT,CCnCA,IAAMI,GAAcC,EAAc,0BAA0B,EAI7C,SAARC,IAAuB,CAC5B,OAEFC,GAAO,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CACzC,IAAMC,EAAWJ,GAAY,EACvBK,EAAWD,EAAS,WAE1B,OAAAE,EAAiBD,EAAU,UAAU,CAAC,GAAI,UAAa,CAAC,EAEjDD,CACP,GAAG,CAAC,CAAC,EACYD,GAAO,CAAC,GAAI,sBAAwB,EAAGA,GAAO,OAAO,CAKtE,CCNe,SAARI,GAAwBC,EAAiC,CAC9D,IAAMC,EAAkBC,GAAsB,EACxCC,EAAS,SAAS,cAAc,KAAK,EAErCC,EAAY,CAAC,EACbC,EAAOL,EAAM,KAAK,IAAIM,CAAU,EAClCC,EAASP,EAAM,KAAK,OAExB,eAAe,IAAM,CACf,CAACG,EAAO,aAAe,CAACA,EAAO,eACjC,QAAQ,KAAK,uBAAuB,EAEtCF,EAAgB,eAAeE,CAAM,EACrCA,EAAO,OAAO,EACdE,EAAK,QAAQ,CAACG,EAAGC,IAAM,CACrB,IAAMC,EAAWL,EAAKI,EAAI,CAAC,EACvBE,EAEJ,OAAID,GAAU,YACZC,EAAaD,EAAS,MAAM,KAAKA,CAAQ,EAGzCC,EAAaV,EAAgB,kBAAkB,EAG1CU,EAAWH,CAAC,CACrB,CAAC,CACH,CAAC,EAED,SAASF,EAAWM,EAASH,EAAW,CACtC,GAAM,CAACI,EAAMC,CAAO,EAAIC,EAAIH,CAAI,EAE1BI,EAAcH,EAAK,EACrBG,GAAe,OAAOA,GAAgB,WACpCC,GAAiBD,CAAW,EAC9BA,EAAY,UAAU,MAAM,EAG5BE,GAASF,CAAW,GAIxB,IAAIG,EAAU,GACd,OAAAC,EAAM,IAAM,CACV,GAAID,EAAW,OAEf,IAAME,EAAUrB,EAAM,KAAKS,CAAC,EACxBY,GAAW,OAAOA,GAAY,UAAY,CAACJ,GAAiBI,CAAO,GACrEH,GAASG,CAAO,EAGdR,EAAK,IAAMQ,IACbjB,EAAKK,CAAC,EAAIY,EACNA,IAAY,QACdF,EAAU,GACVG,EAAW,GAGXR,EAAQO,CAAO,EAGrB,CAAC,EAEDjB,EAAK,KAAKS,EAAK,CAAC,EAETb,EAAM,GAAGa,EAAMJ,CAAC,CACzB,CAEA,SAASa,GAAa,CACpB,GAAItB,EAAM,KAAK,OAASO,EAAQ,CAC9B,GAAIH,EAAKG,EAAS,CAAC,IAAM,OAAa,OACtC,QAASE,EAAIF,EAAS,EAAGE,GAAKT,EAAM,KAAK,OAAQS,IAC/Cc,GAAYlB,EAAKI,CAAC,CAAC,EAErBF,EAASH,EAAK,OAASC,EAAK,OAASL,EAAM,KAAK,MAClD,CACF,CAEA,OAAAoB,EAAM,IAAM,CACV,GAAIpB,EAAM,KAAK,OAASO,EAAQ,CAC9B,QAASE,EAAIF,EAAQE,EAAIT,EAAM,KAAK,OAAQS,IAAK,CAC/C,IAAMC,EAAWL,EAAKI,EAAI,CAAC,EAEvBE,EACAD,GAAU,YACZC,EAAaD,EAAS,MAAM,KAAKA,CAAQ,EAGzCC,EAAaV,EAAgB,kBAAkB,EAGjD,IAAMuB,EAAOlB,EAAWN,EAAM,KAAKS,CAAC,EAAGA,CAAC,EACxCE,EAAWa,CAAI,EACfnB,EAAK,KAAKmB,CAAI,CAChB,CAEAjB,EAASH,EAAK,OAASC,EAAK,OAASL,EAAM,KAAK,MAClD,MACSA,EAAM,KAAK,OAASO,GAC3Be,EAAW,CAEf,CAAC,EAEMnB,CACT,CCzGe,SAARsB,GAA6BC,EAAiC,CACnE,OAAOA,EAAM,KAAK,IAAI,CAACC,EAAGC,IAAM,CAC9B,GAAM,CAACC,EAAMC,CAAO,EAAIC,EAAIL,EAAM,KAAKE,CAAC,CAAC,EAEnCI,EAAcH,EAAK,EACzB,OAAIG,GAAe,OAAOA,GAAgB,UAAY,CAACC,GAAiBD,CAAW,GACjFE,GAASF,CAAW,EAGtBG,EAAM,IAAM,CACV,IAAMC,EAAUV,EAAM,KAAKE,CAAC,EACxBC,EAAK,IAAMO,GACbN,EAAQM,CAAO,CAEnB,CAAC,EAEMV,EAAM,GAAGG,EAAMD,CAAC,CACzB,CAAC,CACH,CC5BA,IAAMS,GAAcC,EAAc,+dAA0d,EAQ7e,SAARC,GAA6BC,EAAyB,CAC3D,OACG,IAAM,CACX,IAAMC,EAAWJ,GAAY,EACvBK,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YAEpBG,EADWD,EAAS,YACA,WACpBE,EAAWD,EAAS,YAE1B,OAAAE,EAAmBL,EAAU,QAAS,IAAMF,EAAM,SAASA,EAAM,cAAgB,EAAE,CAAC,EACpFQ,EAAoBJ,EAAU,QAAS,IAAMJ,EAAM,KAAK,EACxDO,EAAmBH,EAAU,QAAUK,GAAOT,EAAM,SAASS,EAAG,cAAc,KAAK,CAAC,EACpFC,EAAiBL,EAAU,UAAU,CAAC,GAAI,UAAa,CAAC,EACxDM,EAAsBL,EAAU,mBAAoB,IAAMN,EAAM,KAAK,EAE9DC,CACP,GAAG,CAEH,CC7BA,IAAMW,GAAcC,EAAc,+VAA+V,EAOlX,SAARC,EAA0BC,EAAsB,CACrD,OACG,IAAM,CACX,IAAMC,EAAWJ,GAAY,EACvBK,EAAWD,EAAS,WACpBE,EAAWD,EAAS,YAE1B,OAAAE,EAAkBF,EAAU,UAAWF,EAAM,OAAO,EACpDK,EAAmBH,EAAU,SAAWI,GAAON,EAAM,SAASM,EAAG,cAAc,OAAO,CAAC,EACvFC,EAAiBJ,EAAU,UAAU,CAAC,GAAI,UAAa,CAAC,EAEjDF,CACP,GAAG,CAEH,CCpBA,IAAMO,GAAeC,EAAc,oBAAoB,EACjDC,GAAeD,EAAc,UAAU,EACvCE,GAAeF,EAAc,UAAU,EACvCG,GAAeH,EAAc,qBAAqB,EAClDI,GAAeJ,EAAc,2TAA2T,EACxVK,GAAcL,EAAc,sBAAsB,EAClDM,GAAcN,EAAc,sBAAsB,EAClDO,GAAeP,EAAc,YAAY,EAqBhC,SAARQ,IAAgC,CACrC,SAASC,EAAsCC,EAAMC,EAAiB,CACpEC,GAAgB,MAAOC,GAAM,CAC3BA,EAAEH,CAAC,EAAIC,CACT,CAAC,EACDG,EAAa,EAAE,aAAa,MAAOC,GAAc,CAC/CC,GAAwBD,EAAYE,GAAO,CACzCA,EAAG,MAAMP,CAAC,EAAIC,CAChB,CAAC,CACH,CAAC,CACH,CAEA,OACG,IAAM,CACX,IAAMO,EAAWd,GAAa,EACxBe,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,YACpBE,EAAYD,EAAS,WACrBE,EAAYN,EAAS,YACrBO,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YAE5B,OAAAE,EAAkBlB,EAAU,QAAS,iCAAiCmB,GAAW,UAAY,EAAE,EAAE,EACjGC,EAAmBnB,EAAU,SAAWoB,GAAO9B,EAAW,SAAU8B,EAAG,cAAc,KAAK,CAAC,EAC3FC,GAAS,QAAU,CAAC,EACpBC,EAAiBrB,EAAUoB,GAAS,CAAC,IAAI,MAAO,CAAE,OAAOE,EAAS,EAAG,GAAK,IAC7D,IAAM,CACnB,IAAMxB,EAAWb,GAAY,EACvBc,EAAWD,EAAS,WAE1B,OAAAkB,EAAkBlB,EAAU,WAAY,EAAE,IAAMyB,EAAa,EAAE,MAAM,EACrEF,EAAiBtB,EAAU,IAAM,EAAE,CAAC,EAE7BD,CACP,GAAG,CACU,CAAC,CAAC,EACfoB,EAAmBjB,EAAU,SAAWkB,GAAO9B,EAAW,SAAU8B,EAAG,cAAc,KAAK,CAAC,EAC3FC,GAAS,QAAU,CAAC,EACpBC,EAAiBnB,EAAUkB,GAAS,CAAC,IAAI,MAAO,CAAE,OAAOI,EAAW,EAAG,GAAK,IAC/D,IAAM,CACnB,IAAM1B,EAAWZ,GAAY,EACvBa,EAAWD,EAAS,WAE1B,OAAAkB,EAAkBlB,EAAU,WAAY,EAAE,IAAMyB,EAAa,EAAE,MAAM,EACrEF,EAAiBtB,EAAU,IAAM,EAAE,CAAC,EAE7BD,CACP,GAAG,CACU,CAAC,CAAC,EACfoB,EAAmBd,EAAU,QAAS,IAAMf,EAAW,OAAQkC,EAAa,EAAE,KAAO,CAAC,CAAC,EACvFE,EAAoBnB,EAAU,QAAS,IAAMiB,EAAa,EAAE,IAAI,EAChEL,EAAmBZ,EAAU,QAAUa,GAAO9B,EAAW,OAAQ,CAAC8B,EAAG,cAAc,KAAK,CAAC,EACzFD,EAAmBX,EAAU,QAAS,IAAMlB,EAAW,OAAQkC,EAAa,EAAE,KAAO,CAAC,CAAC,EACvFP,EAAkBP,EAAW,QAASiB,EAAa,EACnDC,EAAS,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CAC3C,IAAM7B,EAAWnB,GAAa,EACxBoB,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACLuB,EAAiBX,EAAWiB,EAAS,CAAC,IAAI,SAAU,CAAE,OAAOJ,EAAa,EAAE,IAAK,EAAG,SAAWhC,GAAMF,EAAW,OAAQE,CAAC,CAAG,EAAGoC,EAAS,OAAO,CAAC,EAChJA,EAAS,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CAC3C,IAAM7B,EAAWX,GAAa,EACxBY,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACLuB,EAAiBV,EAAWgB,EAAS,CAAC,IAAI,SAAU,CAAE,OAAOJ,EAAa,EAAE,MAAO,EAAG,SAAWhC,GAAMF,EAAW,SAAUE,CAAC,CAAG,EAAGoC,EAAS,OAAO,CAAC,EACpJA,EAAS,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CAC3C,IAAM7B,EAAWjB,GAAa,EACxBkB,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACLuB,EAAiBT,EAAWe,EAAS,CAAC,IAAI,SAAU,CAAE,OAAOJ,EAAa,EAAE,SAAU,EAAG,SAAWhC,GAAMF,EAAW,YAAaE,CAAC,CAAG,EAAGoC,EAAS,OAAO,CAAC,EAC1JA,EAAS,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CAC3C,IAAM7B,EAAWhB,GAAa,EACxBiB,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACLuB,EAAiBR,EAAWc,EAAS,CAAC,IAAI,SAAU,CAAE,OAAOJ,EAAa,EAAE,aAAc,EAAG,SAAWhC,GAAMF,EAAW,gBAAiBE,CAAC,CAAG,EAAGoC,EAAS,OAAO,CAAC,EAClKX,EAAkBF,EAAW,QAASY,EAAa,EACnDE,GAAY,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CAC9C,IAAM9B,EAAWf,GAAa,EACxBgB,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACLuB,EAAiBN,EAAWa,GAAY,CAAC,IAAI,OAAQ,CAAE,OAAOL,EAAa,EAAE,KAAM,EAAG,SAAWhC,GAAMF,EAAW,SAAUE,CAAC,CAAG,EAAGqC,GAAY,OAAO,CAAC,EAEhJ9B,CACP,GAAG,CAEH,CAEA,IAAM+B,GAAoB,IAAI,KAAK,aAAa,QAAS,CACvD,MAAO,WACP,SAAU,KACZ,CAAC,EAED,SAASC,GAAgBC,EAAWC,EAAsB,CACxD,IAAM,EAAI,OAAOD,CAAC,EAClB,OAAO,OAAO,MAAM,CAAC,EAAIA,EAAIC,EAAG,CAAC,CACnC,CAEO,IAAMC,GAAY,CACvB,OAASF,GACPD,GAAaC,EAAIG,GAAOA,EAAI,IAAM,EAAIH,EAAIG,EAAE,QAAQ,CAAC,CAAE,EACzD,SAAWH,GAAcD,GAAaC,EAAIG,GAAML,GAAkB,OAAOK,CAAC,CAAC,EAC3E,KAAOH,GAAc,CACnB,GAAI,CACF,OAAO,IAAI,KAAKA,CAAC,EAAE,mBAAmB,QAAS,CAC7C,KAAM,UACN,MAAO,QACP,IAAK,SACP,CAAC,CACH,MAAY,CACV,OAAOA,CACT,CACF,EACA,QAAUA,GAAcD,GAAaC,EAAIG,GAAM,KAAK,MAAMA,CAAC,CAAC,CAC9D,EAEMV,GAAa,OAAO,KAAKS,EAAS,EAElCX,GAAW,CACf,YACA,SACA,YACA,gBACA,cACA,MACA,gBACA,SACA,UACA,OACA,eACA,aACA,SACA,SACA,WACA,mBACA,SACA,cACA,eACA,UACF,EAEa,CAACC,EAAc/B,EAAe,EAAI2C,EAAe,CAC5D,OAAQC,GACR,KAAMC,GACN,MAAOC,GACP,KAAMC,GACN,OAAQC,GACR,UAAWC,GACX,cAAeC,GACf,OAAQC,EACV,CAAC,ECtMD,IAAMC,GAAcC,EAAc,kEAAkE,EAC9FC,GAAcD,EAAc,kBAAkB,EAC9CE,GAAeF,EAAc,uBAAuB,EACpDG,GAAeH,EAAc,2BAA2B,EACxDI,GAAeJ,EAAc,mRAAmR,EAChTK,GAAcL,EAAc,6FAA6F,EACzHM,GAAcN,EAAc,qKAAqK,EACjMO,GAAeP,EAAc,wBAAwB,EACrDQ,GAAcR,EAAc,wFAAwF,EACpHS,GAAeT,EAAc,mBAAmB,EAChDU,GAAeV,EAAc,wBAAwB,EACrDW,GAAeX,EAAc,wBAAwB,EAE3D,OAAO,8BAAgC,OAAO,+BAAiCY,EAAuB,aAAa,EA6CpG,SAARC,IAAgC,CACrC,IAAIC,EAAc,GACdC,EACAC,EAEAC,EAAW,CAAC,EACZC,EAAU,CAAC,EACXC,EAAY,CAAC,EAEjBC,EAAQC,EAAQ,IAAM,CACpBN,EAAWO,GAA0BD,EAAO,EAAE,CAAC,EAC/CL,EAAWO,GAAuBF,EAAO,EAAE,CAAC,CAC9C,CAAC,EAED,SAASG,EAAYC,EAAkB,CAChCX,GACLY,EAAgBD,CAAE,CACpB,CAEA,SAASE,EAAeF,EAAkB,CACxCA,EAAG,eAAe,EAClBG,EAAgBH,EAAIN,CAAS,GAEzBF,EAAS,KAAO,MAAQE,EAAU,IAAMF,EAAS,OACnDA,EAAW,CAAE,GAAGE,CAAU,IAGxBD,EAAQ,KAAO,MAAQC,EAAU,IAAMD,EAAQ,OACjDA,EAAU,CAAE,GAAGC,CAAU,GAG3BO,EAAgBD,CAAE,EAClBX,EAAc,EAChB,CAEAM,EAAQS,EAAaC,CAAmB,EAExC,SAASA,GAAsB,CAC7B,IAAIC,EACEC,EAAa,CACjB,SAAUb,EAAU,IACpB,SAAUA,EAAU,IACpB,OAAQA,EAAU,IAClB,OAAQA,EAAU,GACpB,EACA,QAAWc,KAASC,EAAa,EAAE,aAAa,EAAG,CACjD,QAAWC,KAAKD,EAAa,EAAE,aAAa,EAAED,CAAK,EAAG,CACpD,IAAMG,EAASC,EAAYF,CAAC,EAC5B,GAAIG,GAAeF,EAAQJ,CAAU,EAAG,CACtCD,EAAYE,EACZ,KACF,CACF,CACA,GAAIF,EAAW,KACjB,CACAQ,GAAiBR,GAAaS,GAAiB,CAAC,CAClD,CAEA,SAASd,EAAgBD,EAAkB,CACzC,IAAMgB,EAAUb,EAAgBH,CAAE,EAE5BiB,EAAW,KAAK,IAAIvB,EAAU,IAAKsB,EAAQ,GAAG,EAC9CE,EAAS,KAAK,IAAIxB,EAAU,IAAKsB,EAAQ,GAAG,EAC5CG,EAAW,KAAK,IAAIzB,EAAU,IAAKsB,EAAQ,GAAG,EAC9CI,EAAS,KAAK,IAAI1B,EAAU,IAAKsB,EAAQ,GAAG,EAE7CK,GAAY,GACfZ,EAAa,EAAE,uBAAuB,MAAOa,GAAQA,EAAI,MAAM,CAAC,EAGlE,IAAMA,EAAM,IAAI,IAAIb,EAAa,EAAE,oBAAoB,CAAC,EAIxD,GAHAc,GAAYD,EAAKL,EAAUE,EAAUD,EAAQE,CAAM,EACnDX,EAAa,EAAE,mBAAmBa,CAAG,EAEjCE,GAAS,EAAE,CAAC,IAAM,IACpBC,GAAY,EAAE,KAAK,UACV,SAAS,gBAAkBA,GAAY,EAAG,CACnD,IAAMC,EAAajB,EAAa,EAAE,gBAAgB,EAClD,GAAI,CAACiB,EAAW,KAAM,OAEtB,IAAIC,EAAO,GACX,QAAWC,KAAaF,EAAY,CAClC,IAAMf,EAASC,EAAYgB,CAAS,EACpC,GACEjB,EAAO,WAAakB,GAAc,EAAE,KACpClB,EAAO,WAAakB,GAAc,EAAE,IAEpC,OAEEF,IAAMA,GAAQ,KAElBA,GAAQG,GAAUnB,EAAO,SAAUA,EAAO,QAAQ,GAEhDA,EAAO,WAAaA,EAAO,QAC3BA,EAAO,WAAaA,EAAO,UAE3BgB,EAAO,GAAGA,CAAI,IAAIG,GAAUnB,EAAO,OAAQA,EAAO,MAAM,CAAC,GAE7D,CAEAoB,GACEC,GAAkB,KAAK,MAAM,EAAGA,GAAkB,KAAK,EACrDL,EACAK,GAAkB,KAAK,MAAMA,GAAkB,GAAG,CACtD,EAEAP,GAAY,EAAE,eAAiBA,GAAY,EAAE,aAC3CO,GAAkB,MAAQL,EAAK,MACnC,CACF,CAEAhC,EACE,IAAM,CACJc,EAAa,EAAE,gBAAgB,EAC/BA,EAAa,EAAE,UAAU,EACzBA,EAAa,EAAE,WAAW,EAC1BA,EAAa,EAAE,WAAW,CAC5B,EACCwB,GAAM,CACCA,aAAa,MACjBvC,EAAY,CACV,GAAIuC,IAAMxB,EAAa,EAAE,WAAW,EAAIjB,EAAWC,CACrD,EACAyC,EAAaxC,CAAS,GAGxBe,EAAa,EAAE,iBAAiB,MAAO0B,GAAU,CAC/CA,EAAM,OAAS,EACf,QAAWzB,KAAKD,EAAa,EAAE,gBAAgB,EAAG,CAChD,IAAM2B,EAAOC,GAAazB,EAAYF,CAAC,CAAC,EACxCyB,EAAM,KAAK,CAAE,EAAGC,EAAK,CAAC,EAAG,EAAGA,EAAK,CAAC,EAAG,EAAGA,EAAK,CAAC,EAAG,EAAGA,EAAK,CAAC,CAAE,CAAC,CAC/D,CACF,CAAC,EAED3B,EAAa,EAAE,aAAa,MAAO0B,GAAU,CAC3CA,EAAM,OAAS,EACf,QAAWG,KAAW7B,EAAa,EAAE,UAAU,EAAG,CAChD,IAAM8B,EAAM,CAACD,EACPE,EAAMD,EAAME,EACZC,EAAM,KAAK,MAAMH,EAAME,CAAQ,EAC/BL,EAAOC,GAAa,CACxB,SAAUG,EACV,SAAUE,EACV,OAAQF,EACR,OAAQE,CACV,CAAC,EACDP,EAAM,KAAK,CACT,KAAM1B,EAAa,EAAE,UAAU,EAAE6B,CAAO,EACxC,EAAGF,EAAK,CAAC,EACT,EAAGA,EAAK,CAAC,EACT,EAAGA,EAAK,CAAC,EACT,EAAGA,EAAK,CAAC,CACX,CAAC,CACH,CACF,CAAC,CACH,CACF,EAEAzC,EACE,IAAMc,EAAa,EAAE,oBAAoB,EACzC,IACEA,EAAa,EAAE,mBACb,IAAI,IAAIA,EAAa,EAAE,oBAAoB,CAAC,CAC9C,CACJ,EAEA,SAASkC,EAAa3C,EAAkB,CAClC4C,KACGvD,GAAaa,EAAeF,CAAE,EACnC6C,GAAkB,EAAK,GAEpBxD,IACLA,EAAc,GACdoB,EAAa,EAAE,uBACb,IAAI,IAAIA,EAAa,EAAE,gBAAgB,CAAC,CAC1C,EACF,CAEA,SAASN,EAAgBH,EAAkBiC,EAAI,CAAC,EAAW,CACzD,IAAMa,EAASC,GAAiB/C,CAAE,EAElC,OAAAiC,EAAE,IAAMpC,GACND,EAAO,EAAE,EAAIkD,EAAO,EAAIE,EAAW,EAAE,CACvC,EAAE,MACFf,EAAE,IAAMnC,GACNF,EAAO,EAAE,EAAIkD,EAAO,EAAIE,EAAW,EAAE,CACvC,EAAE,MAEFd,EAAaD,CAAC,EAEPA,CACT,CAEA,SAASC,EAAaD,EAAS,CAC7BA,EAAE,GACCA,EAAE,IAAM3C,EAAS,OAAS2D,EAC3BrD,EAAO,EAAE,EACTsD,GACE5D,EAAS,MACT2C,EAAE,IAAM,EACRxB,EAAa,EAAE,WAAW,CAC5B,EACAnB,EAAS,UACX2C,EAAE,GACCA,EAAE,IAAM1C,EAAS,OAAS4D,EAC3BvD,EAAO,EAAE,EACTsD,GACE3D,EAAS,MACT0C,EAAE,IAAM,EACRxB,EAAa,EAAE,WAAW,CAC5B,EACAlB,EAAS,SACb,CAEA,SAAS6D,GAAgB,CACvBC,GAAkB,EAClB5B,GAAY,EAAE,MAAM,CACtB,CAEA,SAAS6B,GAAa,CACpB,GAAI,CAACC,GAAmB,EAAG,CACzB,IAAM5C,EAAS6C,GAAkB,EACjCzB,GACEtB,EAAa,EAAE,UAAU,EAAEgD,GAAW9C,EAAO,SAAUA,EAAO,QAAQ,CAAC,GACnE,MAAQ,EACd,CACF,CACF,CAEA,MACE,EAAE,IAAM,CACZ,IAAM+C,EAAW/E,GAAa,EACxBgF,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,YACpBE,EAAWD,EAAS,WAEpBE,EADWD,EAAS,YACA,WAE1B,OAAAE,GAAYP,CAAQ,EACpBQ,EAAgBR,EAAU,gBAAiB,IAAM,CAACS,GAAe,CAAC,EAClEC,EAAsBV,EAAU,MAAO,IAAM,GAAGV,EAAW,EAAE,CAAC,IAAI,EAClEoB,EAAsBV,EAAU,QAAS,IAAM,GAAGV,EAAW,EAAE,KAAK,IAAI,EACxEoB,EAAsBV,EAAU,SAAU,IAAM,GAAGV,EAAW,EAAE,MAAM,IAAI,EAC1EqB,EAAmBX,EAAU,SAAW1D,GAC9BsE,GAAU,CACR,EAAGtE,EAAG,cAAc,WACpB,EAAGA,EAAG,cAAc,SACtB,CAAC,CAAC,EACZoE,EAAsBT,EAAU,QAAS,IAAM,GAAGV,EAASR,EAAW8B,GAAa9D,EAAa,EAAE,WAAW,CAAC,CAAC,IAAI,EACnH2D,EAAsBT,EAAU,SAAU,IAAM,GAAGR,EAASqB,GAAWD,GAAa9D,EAAa,EAAE,WAAW,CAAC,CAAC,IAAI,EACpH4D,EAAmBV,EAAU,cAAef,GAAgB,OAAa5C,GAAOE,EAAeF,CAAE,CAAC,EAClGyE,EAAoB,OAAO,8BAA+Bd,EAAU5D,CAAW,EAC/EsE,EAAmBV,EAAU,YAAahB,CAAY,EACtD0B,EAAmBV,EAAU,QAASL,CAAU,EAChDe,EAAmBV,EAAU,WAAYP,CAAa,EACtDsB,GAAI,QAAU,CAAC,EACfC,EAAiBf,EAAUc,GAAI,CAAC,IAAI,MAAO,CAAE,OAAOjE,EAAa,EAAE,UAAU,CAAE,EAAG,GAAKmE,IACxE,IAAM,CACrB,IAAMlB,EAAWpF,GAAY,EACvBqF,EAAWD,EAAS,WACpBE,EAAWD,EAAS,YAE1B,OAAAS,EAAsBV,EAAU,cAAe,IAAMkB,EAAE,EAAE,KAAK,MAAM,MAAM,EAC1ER,EAAsBV,EAAU,YAAa,IAAM,GAAGkB,EAAE,EAAE,KAAK,MAAM,IAAI,IAAI,EAC7ER,EAAsBV,EAAU,cAAe,IAAMkB,EAAE,EAAE,KAAK,MAAM,KAAO,OAAS,QAAQ,EAC5FR,EAAsBV,EAAU,aAAc,IAAMkB,EAAE,EAAE,KAAK,MAAM,OAAS,SAAW,QAAQ,EAC/FR,EAAsBV,EAAU,uBAAwB,IAAMkB,EAAE,EAAE,KAAK,oBAAoB,MACrE,GACA,GAAGA,EAAE,EAAE,KAAK,MAAM,UAAY,aAAe,EAAE,GAAGA,EAAE,EAAE,KAAK,MAAM,cAAgB,eAAiB,EAAE,EAAE,EAC5HR,EAAsBV,EAAU,QAAS,IAAMkB,EAAE,EAAE,KAAK,MAAM,KAAK,EACnER,EAAsBV,EAAU,OAAQ,IAAM,GAAGkB,EAAE,EAAE,CAAC,IAAI,EAC1DR,EAAsBV,EAAU,MAAO,IAAM,GAAGkB,EAAE,EAAE,CAAC,IAAI,EACzDR,EAAsBV,EAAU,QAAS,IAAM,GAAGkB,EAAE,EAAE,CAAC,IAAI,EAC3DR,EAAsBV,EAAU,SAAU,IAAM,GAAGkB,EAAE,EAAE,CAAC,IAAI,EAC5DC,GAAuBlB,EAAW,IAAM,CACxC,IAAMD,EAAW3E,GAAY,EACvB4E,EAAWD,EAAS,WAE1B,OAAAoB,EAAoBpB,EAAU,QAAS,IAAMkB,EAAE,EAAE,KAAK,SAAS,SAAS,CAAC,EAElElB,CACP,EAAI,IAAMkB,EAAE,EAAE,KAAK,oBAAoB,KAAK,EAC5CC,GAAuBjB,EAAW,IAAM,CACxC,IAAMF,EAAWlF,GAAY,EACvBmF,EAAWD,EAAS,WAE1B,OAAAiB,EAAiBhB,EAAU,IAAMoB,GAAUH,EAAE,EAAE,KAAK,MAAM,MAAM,EAAEA,EAAE,EAAE,KAAK,QAAQ,CAAC,EAE7ElB,CACP,EAAI,IAAM,OAAOkB,EAAE,EAAE,KAAK,UAAa,QAAQ,EAExClB,CACP,GAAG,CACY,CAAC,CAAC,EACjBgB,GAAI,QAAU,CAAC,EACfC,EAAiBd,EAAUa,GAAI,CAAC,IAAI,MAAO,CAAE,OAAOjE,EAAa,EAAE,cAAc,CAAE,EAAG,GAAKuE,IAC9E,IAAM,CACnB,IAAMtB,EAAW9E,GAAY,EACvB+E,EAAWD,EAAS,WAE1B,OAAAU,EAAsBV,EAAU,OAAQ,IAAM,GAAGsB,EAAE,EAAE,CAAC,IAAI,EAC1DZ,EAAsBV,EAAU,MAAO,IAAM,GAAGsB,EAAE,EAAE,CAAC,IAAI,EACzDZ,EAAsBV,EAAU,QAAS,IAAM,GAAGsB,EAAE,EAAE,CAAC,IAAI,EAC3DZ,EAAsBV,EAAU,SAAU,IAAM,GAAGsB,EAAE,EAAE,CAAC,IAAI,EAC5DH,GAAuBlB,EAAW,IAAM,CACxC,IAAMD,EAAW7E,GAAY,EAE7B,OAAAwF,EAAmBX,EAAU,cAAe,IAAM,CAChCb,GAAkB,EAAI,EACtBxD,EAAc,EAChB,CAAC,EAEVqE,CACP,EAAI,IAAMd,EAAa,EAEhBc,CACP,GAAG,CACU,CAAC,CAAC,EACfQ,EAAgBJ,EAAU,SAAU,IAAM,CAACP,GAAmB,CAAC,EAC/Da,EAAsBN,EAAU,mBAAoB,IAAM/C,GAAiB,CAAC,EAC5EqD,EAAsBN,EAAU,OAAQ,IAAM,GAAGjC,GAAc,EAAE,CAAC,IAAI,EACtEuC,EAAsBN,EAAU,MAAO,IAAM,GAAGjC,GAAc,EAAE,CAAC,IAAI,EACrEuC,EAAsBN,EAAU,QAAS,IAAM,GAAGjC,GAAc,EAAE,KAAK,IAAI,EAC3EuC,EAAsBN,EAAU,SAAU,IAAM,GAAGjC,GAAc,EAAE,MAAM,IAAI,EAC7EuC,EAAsBN,EAAU,cAAe,IAAMmB,EAAa,EAAE,MAAM,EAC1Eb,EAAsBN,EAAU,YAAa,IAAM,GAAGmB,EAAa,EAAE,IAAI,IAAI,EAC7Eb,EAAsBN,EAAU,cAAe,IAAMmB,EAAa,EAAE,KAAO,OAAS,QAAQ,EAC5Fb,EAAsBN,EAAU,aAAc,IAAMmB,EAAa,EAAE,OAAS,SAAW,QAAQ,EAC/Fb,EAAsBN,EAAU,uBAAwB,IAAM,GAAGmB,EAAa,EAAE,UAAY,aAAe,EAAE,GAAGA,EAAa,EAAE,cAAgB,eAAiB,EAAE,EAAE,EACpKb,EAAsBN,EAAU,QAAS,IAAMmB,EAAa,EAAE,KAAK,EACnEN,EAAiBZ,EAAU,IAAMvC,GAAS,CAAC,EAC3CmD,EAAiBX,EAAU,IAAMnC,GAAc,EAAE,EAAE,EAE5C6B,CACP,GAAG,GACHwB,GAAI,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CACtC,IAAMxB,EAAWjF,GAAa,EAExBmF,EADWF,EAAS,WACA,YACpBG,EAAWD,EAAS,YAE1B,OAAAe,EAAiBf,EAAU,GAAG,EAC9Be,EAAiBd,EAAU,IAAM,KAAK,UAC1BpD,EAAa,EAAE,aAAa,EAC5B,CAAC0E,EAAGC,IAAWA,aAAiB,IAAM,MAAM,KAAKA,CAAK,EAAIA,EAC1D,CACF,CAAC,EAEJ1B,CACP,GAAG,GAAG,IAAM,CACZ,IAAMA,EAAWzE,GAAa,EAExB2E,EADWF,EAAS,WACA,YACpBG,EAAWD,EAAS,YAE1B,OAAAe,EAAiBf,EAAU,GAAG,EAC9Be,EAAiBd,EAAU,IAAM,KAAK,UAAU,CAAC,GAAGpD,EAAa,EAAE,gBAAgB,CAAC,EAAG,KAAM,CAAC,CAAC,EAExFiD,CACP,GAAG,GAAG,IAAM,CACZ,IAAMA,EAAW1E,GAAa,EAExB4E,EADWF,EAAS,WACA,YAE1B,OAAAiB,EAAiBf,EAAU,IAAM,KAAK,UAAUnD,EAAa,EAAE,UAAU,EAAG,KAAM,CAAC,CAAC,EAE7EiD,CACP,GAAG,GAAG,IAAM,CACZ,IAAMA,EAAW5E,GAAa,EAExB8E,EADWF,EAAS,WACA,YAE1B,OAAAiB,EAAiBf,EAAU,IAAM,KAAK,UAAUnD,EAAa,EAAE,WAAW,CAAC,CAAC,EAErEiD,CACP,GAAG,GAAG,IAAM,CACZ,IAAMA,EAAWxE,GAAa,EAExB0E,EADWF,EAAS,WACA,YAE1B,OAAAiB,EAAiBf,EAAU,IAAM,KAAK,UAAUnD,EAAa,EAAE,WAAW,CAAC,CAAC,EAErEiD,CACP,GAAG,GAAG,IAAM,CACZ,IAAMA,EAAWhF,GAAa,EAExBkF,EADWF,EAAS,WACA,YAE1B,OAAAiB,EAAiBf,EAAU,IAAM,KAAK,UAAU/B,GAAc,EAAG,KAAM,CAAC,CAAC,EAElE6B,CACP,GAAG,CAAC,CAAC,EACYwB,GAAI,CAAC,EAAGA,GAAI,OAAO,EAG9B,CAGN,CC3cA,IAAMG,GAAcC,EAAc,gEAAgE,EAC5FC,GAAcD,EAAc,iGAAiG,EAC7HE,GAAcF,EAAc,iFAAiF,EAC7GG,GAAcH,EAAc,+HAA0H,EACtJI,GAAcJ,EAAc,qGAAqG,EAEvI,OAAO,4BAA8B,OAAO,6BAA+BK,EAAuB,WAAW,EAC7G,OAAO,4BAA8B,OAAO,6BAA+BA,EAAuB,WAAW,EAC7G,OAAO,0BAA4B,OAAO,2BAA6BA,EAAuB,SAAS,EACvG,OAAO,2BAA6B,OAAO,4BAA8BA,EAAuB,UAAU,EAwB1G,IAAMC,GAAe,eAEN,SAARC,IAA4B,CACjC,GAAM,CAACC,EAAUC,CAAW,EAAIC,EAAI,CAClC,KAAM,CAAC,EACP,KAAM,CAAC,CACT,CAAC,EAED,SAASC,EACPC,EACAC,EACAC,EACQ,CACR,IAAIC,EAAU,EACVC,EAAQ,EACRC,EAAeL,EAEnB,KAAOG,EAAUF,EAAOC,EAAiBF,CAAU,GACjDG,GAAWD,EAAiBG,CAAY,EACxCA,IACAD,IAGF,OAAOA,CACT,CAEAE,EACE,IAAM,CACJC,EAAW,EACXC,EAAO,EACPC,EAAa,EAAE,WAAW,EAC1BA,EAAa,EAAE,WAAW,CAC5B,EACA,IAAM,CACJ,GAAM,CAAE,MAAAC,EAAO,OAAAC,CAAO,EAAIJ,EAAW,EAC/B,CAAE,MAAOK,CAAS,EAAIC,GAA0BL,EAAO,EAAE,CAAC,EAC1D,CAAE,MAAOM,CAAS,EAAIC,GAAuBP,EAAO,EAAE,CAAC,EAC7D,GAAII,EAAW,GAAKE,EAAW,EAAG,OAElC,IAAME,EAAWjB,EACfa,EACAF,EACAO,EACF,EACMC,EAAWnB,EACfe,EACAH,EACAQ,EACF,EAEAtB,EAAY,MAAOuB,GAAM,CACvB,GAAIR,GAAY,EAAG,CACjBQ,EAAE,KAAK,OAAS,EAChB,QAASC,EAAIT,EAAUS,EAAIT,EAAWI,EAAUK,IAC9CD,EAAE,KAAK,KAAKE,GAAaD,CAAC,CAAC,CAE/B,CACA,GAAIP,GAAY,EAAG,CACjBM,EAAE,KAAK,OAAS,EAChB,QAASC,EAAIP,EAAUO,EAAIP,EAAWI,EAAUG,IAC9CD,EAAE,KAAK,KAAKG,GAAaF,CAAC,CAAC,CAE/B,CACF,CAAC,CACH,CACF,EAEA,IAAIG,EAAU,CAAE,EAAG,EAAG,EAAG,CAAE,EACvBC,EAAa,GACjB,SAASC,EAAeC,EAA6BC,EAAe,CAClEJ,EAAUK,GAAiBF,CAAE,EAC7BF,EAAaK,GAAeF,CAAK,CACnC,CAEA,IAAIG,EAAa,GACjB,SAASC,EAAeL,EAA6BM,EAAe,CAClET,EAAUK,GAAiBF,CAAE,EAC7BI,EAAaG,GAAeD,CAAK,CACnC,CAEA,SAASE,EACPR,EACAS,EACAC,EACAC,EACA,CACA,GAAIF,IAAiB,GAAI,OACzB,IAAMG,EAAMV,GAAiBF,CAAE,EAC/BU,EAAYG,GAAY,CACtB,IAAMC,GACHD,EAAQJ,CAAY,GAAK,IACzBE,IAAaI,EAASH,EAAI,EAAIf,EAAQ,EAAIe,EAAI,EAAIf,EAAQ,GAC7DgB,EAAQJ,CAAY,EAAI,KAAK,IAAI,CAACE,EAAUG,CAAS,EACrDjB,EAAUe,CACZ,CAAC,CACH,CAEA,SAASI,GAAY,CACnBlB,EAAa,GACbM,EAAa,EACf,CAEA,IAAIa,EAAcpC,EAAO,EAAE,EACvBqC,EAAcrC,EAAO,EAAE,EACrB,CAACsC,EAAcC,CAAe,EAAIjD,EAAI,CAAC,EACvC,CAACkD,EAAaC,CAAc,EAAInD,EAAI,CAAC,EAC3CQ,EAAQE,EAAQ,IAAM,CACpB,GAAIA,EAAO,EAAE,IAAMoC,EAAa,CAC9B,IAAMM,EAASrC,GAA0BL,EAAO,EAAE,CAAC,EAAE,UACjD0C,GAAU,GAAGH,EAAgBG,CAAM,EACvCN,EAAcpC,EAAO,EAAE,CACzB,CACA,GAAIA,EAAO,EAAE,IAAMqC,EAAa,CAC9B,IAAMK,EAASnC,GAAuBP,EAAO,EAAE,CAAC,EAAE,UAC9C0C,GAAU,GAAGD,EAAeC,CAAM,EACtCL,EAAcrC,EAAO,EAAE,CACzB,CACF,CAAC,EAED,SAAS2C,EAAUxB,EAA6ByB,EAAa,CACvDzB,EAAG,SAAWA,EAAG,eACrBlB,EAAa,EAAE,uBAAuB,MAAO4C,GAAQ,CAC9CC,GAAY,GAAGD,EAAI,MAAM,EAC9BE,GAAYF,EAAKD,EAAK,EAAGA,EAAKI,EAAQ,CACxC,CAAC,CACH,CAEA,SAASC,EAAU9B,EAA6B+B,EAAa,CACvD/B,EAAG,SAAWA,EAAG,eACrBlB,EAAa,EAAE,uBAAuB,MAAO4C,GAAQ,CAC9CC,GAAY,GAAGD,EAAI,MAAM,EAC9BE,GAAYF,EAAK,EAAGK,EAAKC,EAAUD,CAAG,CACxC,CAAC,CACH,CAEA,MACE,EAAE,IAAM,CACZ,IAAME,EAAWrE,GAAY,EACvBsE,EAAWD,EAAS,WAE1B,OAAAE,EAAmBF,EAAU,QAAS,IAC5BG,GAAS,EAAE,SAAS,CAAE,IAAK,EAAG,KAAM,EAAG,SAAU,QAAS,CAAC,CAAC,EAE/DH,CACP,GAAG,GAAI,IAAM,CACb,IAAMA,EAAWpE,GAAY,EACvBqE,EAAWD,EAAS,WAE1B,OAAAI,EAAsBJ,EAAU,OAAQ,IAAM,IAAId,EAAa,CAAC,IAAI,EACpEmB,GAAI,QAAU,CAAC,EACfC,EAAiBL,EAAUI,GAAI,CAAC,IAAI,MAAO,CAAE,OAAOrE,EAAS,EAAE,IAAK,EAAG,GAAI,CAACwD,EAAK/B,KACpE,IAAM,CACnB,IAAMuC,EAAWzE,GAAY,EACvB0E,EAAWD,EAAS,WACpBO,EAAWN,EAAS,YAE1B,OAAAO,EAAoBR,EAAU,WAAY,IAAMvC,IAAMzB,EAAS,EAAE,KAAK,OAAS,EAAI,GAAK,MAAS,EACjGkE,EAAmBF,EAAU,QAAUjC,GAAOwB,EAAUxB,EAAIG,GAAesB,EAAI,CAAC,CAAC,CAAC,EAClFY,EAAsBJ,EAAU,QAAS,IAAM,GAAG3C,GAAsBa,GAAesB,EAAI,CAAC,CAAC,CAAC,IAAI,EAClGc,EAAiBL,EAAU,IAAMT,EAAI,CAAC,EACtCiB,EAAkBF,EAAU,QAAS,GAAGzE,EAAY,6CAA6C,EACjGoE,EAAmBK,EAAU,YAAcxC,GAAOD,EAAeC,EAAIyB,EAAI,CAAC,CAAC,EAC3EkB,EAAoB,OAAO,4BAA6BH,EAAWxC,GACjDQ,EACER,EACAF,EACAhB,EAAa,EAAE,cAAc,MAC7BiC,CACF,CAAC,EACnB4B,EAAoB,OAAO,0BAA2BH,EAAUxB,CAAS,EACzEmB,EAAmBK,EAAU,aAAexC,GAAOD,EAAeC,EAAIyB,EAAI,CAAC,CAAC,EAC5EkB,EAAoB,OAAO,4BAA6BH,EAAWxC,GACjDQ,EACER,EACAF,EACAhB,EAAa,EAAE,cAAc,MAC7BiC,CACF,CAAC,EACnB4B,EAAoB,OAAO,2BAA4BH,EAAUxB,CAAS,EAEnEiB,CACP,GAAG,CACU,CAAC,CAAC,EAERA,CACP,GAAG,GAAI,IAAM,CACb,IAAMA,EAAWtE,GAAY,EACvBuE,EAAWD,EAAS,WAE1B,OAAAI,EAAsBJ,EAAU,MAAO,IAAM,IAAIZ,EAAY,CAAC,IAAI,EAClEiB,GAAI,QAAU,CAAC,EACfC,EAAiBL,EAAUI,GAAI,CAAC,IAAI,MAAO,CAAE,OAAOrE,EAAS,EAAE,IAAK,EAAG,GAAI,CAAC8D,EAAKrC,KACpE,IAAM,CACnB,IAAMuC,EAAWvE,GAAY,EACvBwE,EAAWD,EAAS,WACpBO,EAAWN,EAAS,YAE1B,OAAAO,EAAoBR,EAAU,WAAY,IAAMvC,IAAMzB,EAAS,EAAE,KAAK,OAAS,EAAI,GAAK,MAAS,EACjGkE,EAAmBF,EAAU,QAAUjC,GAAO8B,EAAU9B,EAAIO,GAAewB,EAAI,CAAC,CAAC,CAAC,EAClFM,EAAsBJ,EAAU,SAAU,IAAM,GAAGzC,GAAuBe,GAAewB,EAAI,CAAC,CAAC,CAAC,IAAI,EACpGQ,EAAiBL,EAAU,IAAMH,EAAI,CAAC,EACtCW,EAAkBF,EAAU,QAAS,GAAGzE,EAAY,+CAA+C,EACnGoE,EAAmBK,EAAU,YAAcxC,GAAOK,EAAeL,EAAI+B,EAAI,CAAC,CAAC,EAC3EY,EAAoB,OAAO,4BAA6BH,EAAWxC,GACjDQ,EACER,EACAI,EACAtB,EAAa,EAAE,cAAc,MAC7B8D,CACF,CAAC,EACnBD,EAAoB,OAAO,0BAA2BH,EAAUxB,CAAS,EACzEmB,EAAmBK,EAAU,aAAexC,GAAOK,EAAeL,EAAI+B,EAAI,CAAC,CAAC,EAC5EY,EAAoB,OAAO,4BAA6BH,EAAWxC,GACjDQ,EACER,EACAI,EACAtB,EAAa,EAAE,cAAc,MAC7B8D,CACF,CAAC,EACnBD,EAAoB,OAAO,2BAA4BH,EAAUxB,CAAS,EAEnEiB,CACP,GAAG,CACU,CAAC,CAAC,EAERA,CACP,GAAG,CAAG,CAGN,CC3QA,IAAMY,GAAcC,EAAc,yLAAoL,EAgBvM,SAARC,IAA6B,CAClC,IAAIC,EAAa,GAEjB,SAASC,GAAc,CAGrB,GAFAC,GAAsB,EAAK,EAEvB,CAACF,EAAY,CACfA,EAAa,GACbG,GAAY,EAAE,EACd,MACF,CAEA,IAAMC,EAAOC,GAAS,EAChBC,EAAMC,GAAWC,GAAc,EAAE,IAAKA,GAAc,EAAE,GAAG,EAE3DJ,EACFK,EAAa,EAAE,aAAa,MAAOC,GAAU,CAC3CA,EAAMJ,CAAG,EAAI,CACX,KAAAF,EACA,SAAUA,EACV,MAAO,CAAE,GAAGO,EAAa,CAAE,CAC7B,EAEAC,GAAaF,CAAK,CACpB,CAAC,EAEDD,EAAa,EAAE,aAAa,MAAOC,GAAU,OAAOA,EAAMJ,CAAG,CAAC,EAGhEH,GAAY,EAAE,CAChB,CAEA,SAASU,GAAmC,CAC1CV,GAAY,KAAK,KAAK,EACtB,KAAK,MAAM,OAAS,GACpB,KAAK,MAAM,OAAS,GAAG,KAAK,YAAY,IAC1C,CAEA,SAASW,EAAoCC,EAAmB,CAC1DA,EAAG,MAAQ,SAAW,CAACA,EAAG,UAC5BA,EAAG,eAAe,EAClB,KAAK,KAAK,GACDA,EAAG,MAAQ,WACpBA,EAAG,eAAe,EAClBf,EAAa,GACb,KAAK,KAAK,EAEd,CAEA,SAASgB,EAAmCD,EAAmB,CAE3DA,EAAG,MAAQ,SACXA,EAAG,MAAQ,WACXA,EAAG,MAAQ,OACXA,EAAG,MAAQ,SAIbE,GAAkB,MAAQ,KAAK,eAC/BA,GAAkB,IAAM,KAAK,aAC7BA,GAAkB,KAAO,KAAK,MAChC,CAEA,SAASC,GAAU,CACjBC,GAAkB,EAClBjB,GAAsB,EAAI,CAC5B,CAEA,OACG,IAAM,CACX,IAAMkB,EAAWvB,GAAY,EACvBwB,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YAE1B,OAAAG,GAAeD,CAAQ,EACvBE,EAAoBF,EAAU,QAAS,IAAMlB,GAAS,CAAC,EACvDqB,EAAmBH,EAAU,UAAWT,CAAQ,EAChDY,EAAmBH,EAAU,QAASP,CAAO,EAC7CU,EAAmBH,EAAU,QAASV,CAAO,EAC7Ca,EAAmBH,EAAU,QAASL,CAAO,EAC7CQ,EAAmBH,EAAU,OAAQtB,CAAW,EAEzCmB,CACP,GAAG,CAEH,CCrGA,IAAMO,GAAcC,EAAc,oOAAoO,EAQvP,SAARC,GAAuBC,EAAmB,CAC/C,OAEFC,GAAO,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CACzC,IAAMC,EAAWL,GAAY,EACvBM,EAAWD,EAAS,WAE1B,OAAAE,EAAoBF,EAAU,OAAQ,IAAMF,EAAM,IAAI,EACtDK,EAAgBH,EAAU,OAAQ,IAAMF,EAAM,IAAI,EAClDM,EAAiBH,EAAU,UAAU,CAAC,GAAI,UAAa,CAAC,EAEjDD,CACP,GAAG,CAAC,CAAC,EACYD,GAAO,CAAC,GAAI,eAAiB,EAAGA,GAAO,OAAO,CAK/D,CCxBA,IAAMM,GAAcC,EAAc,8gBAA8gB,EAK1iBC,GAAc,CAClB,KAAM,qEACN,KAAM,8BACN,MAAO,2BACT,EAEMC,GAAa,CACjB,KAAM,SACN,KAAM,SACN,MAAO,QACT,EAQMC,GAAe,GACfC,GAAW,IAEF,SAARC,GAAuBC,EAAmB,CAC/C,GAAM,CAACC,EAAUC,CAAW,EAAIC,EAAI,CAAC,EAEjCC,EAAU,GACVC,EAAW,GACXC,EAAU,EAEdC,EACE,IAAMP,EAAM,KACZ,IAAM,CACCA,EAAM,OAEXE,EAAY,GAAG,EACfI,EAAU,EAEV,cAAcD,CAAQ,EACtBA,EAAW,YAAY,IAAM,CAC3BH,EAAY,IAAOI,EAAUR,GAAY,GAAG,EAC5CQ,GAAWT,GACPS,GAAWR,IAAU,cAAcO,CAAQ,CACjD,EAAGR,EAAY,EAEf,aAAaO,CAAO,EACpBA,EAAU,WAAWI,EAAOV,EAAQ,EACtC,CACF,EAEA,SAASU,GAAQ,CACfR,EAAM,SAAS,EAAK,EACpBM,EAAU,EACV,cAAcD,CAAQ,EACtB,aAAaD,CAAO,CACtB,CAEA,OAEFK,GAAO,QAAU,CAAC,QAAS,IAAM,CAEhBC,GAAsB,SAAS,cAAc,EAAE,EAAI,IAAM,CAC1E,IAAMC,EAAWlB,GAAY,EACvBmB,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,YACpBE,EAAWD,EAAS,WACpBE,EAAWN,EAAS,YACpBO,EAAWD,EAAS,WAEpBE,EADWF,EAAS,YACC,WAE3B,OAAAG,EAAkBT,EAAU,QAAS,+BAA+BjB,GAAYK,EAAM,KAAK,CAAC,EAAE,EAC9FsB,EAAiBR,EAAU,IAAMlB,GAAWI,EAAM,KAAK,CAAC,EACxDsB,EAAiBP,EAAU,UAAU,CAAC,GAAI,SAAY,CAAC,EACvDQ,EAAmBP,EAAU,QAASR,CAAK,EAC3Cc,EAAiBH,EAAU,UAAU,CAAC,GAAI,UAAa,CAAC,EACxDE,EAAkBD,EAAW,QAAS,UAAUzB,GAAYK,EAAM,KAAK,CAAC,EAAE,EAC1EwB,EAAsBJ,EAAW,QAAS,IAAM,GAAGnB,EAAS,CAAC,GAAG,EAEzDU,CACP,EAAI,IAAMX,EAAM,KAAM,OAAO,CAGzB,CAAC,EACYS,GAAO,CAAC,GAAI,eAAiB,EAAGA,GAAO,OAAO,CAK/D,CC9FA,IAAMgB,GAAeC,EAAc,uFAAuF,EACpHC,GAAcD,EAAc,gEAAgE,EAC5FE,GAAeF,EAAc,mBAAmB,EAChDG,GAAeH,EAAc,8ZAA8Z,EAC3bI,GAAeJ,EAAc,+ZAA+Z,EAC5bK,GAAcL,EAAc,iUAA4T,EACxVM,GAAeN,EAAc,gCAAgC,EAgBpD,SAARO,IAAwB,CAC7B,IAAIC,EACE,CAACC,EAAWC,CAAY,EAAIC,EAAI,CAAE,QAAS,GAAO,EAAG,EAAG,EAAG,CAAE,CAAC,EAC9D,CAACC,EAAcC,CAAe,EAAIF,EAAIG,EAAa,EAAE,KAAK,EAAE,OAAS,CAAC,EACtE,CAACC,EAAWC,CAAY,EAAIL,EAAI,CAAC,EACjC,CAACM,EAAqBC,CAAsB,EAAIP,EAAI,EAAK,EACzD,CAACQ,EAAWC,CAAY,EAAIT,EAAI,EAAK,EAE3C,SAASU,GAAgB,CACvB,GAAI,CAACb,EAAY,cAAc,EAAG,OAAOY,EAAa,EAAI,EAE1DV,EAAa,MAAOY,GAAU,CAC5BA,EAAM,QAAU,EAClB,CAAC,EAEGd,EAAY,OAASA,EAAY,QAAUM,EAAa,EAAE,KAAK,GACjEA,EAAa,EAAE,QAAQN,EAAY,KAAK,CAE5C,CAEA,SAASe,EAAUC,EAAa,CAC9BR,EAAaQ,CAAG,EAChBN,EAAuB,EAAI,CAC7B,CAEA,SAASO,GAAgB,CACvBP,EAAuB,EAAK,EAC5BQ,GAASX,EAAU,CAAC,CACtB,CAEA,SAASY,GAAW,CAClBC,GAAS,CACX,CAEA,cAAO,iBAAiB,aAAc,IAAM,CAC1C,IAAMC,EAAO,mBAAmB,SAAS,IAAI,EAAE,MAAM,CAAC,EAChDC,EAAQC,GAAO,EAAE,KAAMC,GAAMA,EAAE,KAAK,IAAMH,CAAI,EAChDC,GAAOG,GAAgBH,CAAK,CAClC,CAAC,GAGE,IAAM,CACX,IAAMI,EAAW/B,GAAa,EACxBgC,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWD,EAAS,WACpBE,EAAWD,EAAS,YACpBE,EAAWH,EAAS,YACpBI,EAAWD,EAAS,YACpBE,EAAWD,EAAS,YAE1B,OAAAE,EAAmBR,EAAU,QAASR,CAAQ,EAC9CiB,GAAI,QAAU,CAAC,EACfC,EAAiBP,EAAUM,GAAI,CAAC,IAAI,MAAO,CAAE,OAAOb,GAAO,CAAE,EAAG,GAAI,CAACD,EAAOgB,KAC/D,IAAM,CACnB,IAAMZ,EAAW7B,GAAY,EACvB8B,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,GAAWF,EAAS,YACpBG,EAAWD,GAAS,WAE1B,OAAAU,EAAgBb,EAAU,WAAY,IAAMpB,EAAa,IAAMgB,EAAM,CAAC,EACtEkB,EAAoBb,EAAU,OAAQ,IAAM,IAAI,mBAAmBL,EAAM,EAAE,KAAK,CAAC,CAAC,EAAE,EACpFa,EAAmBR,EAAU,WAAac,IAAO,CAC/BvC,EAAa,MAAOY,IAAU,CAC5BA,GAAM,QAAU,GAChBA,GAAM,EAAI2B,GAAG,cAAc,WAC3B3B,GAAM,EAAI2B,GAAG,cAAc,SAC7B,CAAC,EACDzC,EAAY,MAAM,CACpB,CAAC,EACjBqC,EAAiBT,EAAU,IAAMN,EAAM,EAAE,KAAK,CAAC,EAC/Ca,EAAmBN,GAAU,QAAS,IAAMd,EAAUuB,CAAC,CAAC,EACxDE,EAAoBX,GAAU,WAAY,IAAMN,GAAO,EAAE,SAAW,CAAC,EAE9DG,CACP,GAAG,CACU,CAAC,CAAC,EACf1B,EAAc+B,EACdQ,EAAgBR,EAAU,SAAU,IAAM,CAAC9B,EAAU,EAAE,OAAO,EAC9DuC,EAAoBT,EAAU,QAAS,IAAMzB,EAAa,EAAE,KAAK,CAAC,EAClEoC,EAAsBX,EAAU,OAAQ,IAAM,GAAG9B,EAAU,EAAE,CAAC,IAAI,EAClEyC,EAAsBX,EAAU,MAAO,IAAM,GAAG9B,EAAU,EAAE,CAAC,IAAI,EACjEyC,EAAsBX,EAAU,YAAa,IAAM,GAAGzB,EAAa,EAAE,KAAK,EAAE,OAAS,CAAC,IAAI,EAC1FoC,EAAsBX,EAAU,QAAS,IAAM,GAAG3B,EAAa,CAAC,IAAI,EACpEuC,EAAkBZ,EAAU,UAAW,IAAIa,EAAsB,IAAI,EACrET,EAAmBJ,EAAU,OAAQlB,CAAa,EAClDsB,EAAmBJ,EAAU,SAAUlB,CAAa,EACpDsB,EAAmBJ,EAAU,QAAUU,GAAOpC,EAAgBoC,EAAG,cAAc,MAAM,OAAS,CAAC,CAAC,EAChGI,GAAM,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CACxC,IAAMnB,EAAWjC,GAAY,EAEvBmC,EADWF,EAAS,WACA,YACpBG,EAAWD,EAAS,YACpBE,EAAWD,EAAS,WACpBE,GAAWF,EAAS,YAE1B,OAAAQ,EAAiBT,EAAU,GAAG,EAC9BS,EAAiBP,EAAU,IAAMP,GAAO,EAAEhB,EAAU,CAAC,GAAG,KAAK,CAAC,EAEvDmB,CACP,GAAG,GAAG,IAAM,CACZ,IAAMA,EAAW9B,GAAa,EACxB+B,EAAWD,EAAS,WAEpBG,EADWF,EAAS,WACA,WACpBG,EAAWH,EAAS,YAEpBK,EADWF,EAAS,WACA,WAE1B,OAAAK,EAAmBR,EAAU,QAASV,CAAa,EACnDkB,EAAmBL,EAAU,QAAS,IAAMpB,EAAuB,EAAK,CAAC,EAElEgB,CACP,GAAG,CAAC,CAAC,EACLW,EAAiBL,EAAUa,GAAM,CAAC,IAAI,MAAO,CAAE,OAAOpC,EAAoB,CAAE,CAAG,EAAGoC,GAAM,OAAO,CAAC,EAChGC,GAAM,QAAU,CAAC,OAAS,IAAM,CAChC,IAAMpB,EAAW5B,GAAa,EACxB6B,EAAWD,EAAS,WAG1B,OAAOA,CACP,EAAI,QAAS,IAAM,EAAE,IAAM,CAC3B,IAAMA,EAAWnC,GAAa,EACxBoC,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACLW,EAAiBJ,EAAUa,GAAM,CAAC,IAAI,MAAO,CAAE,OAAOnC,EAAU,CAAE,EAAG,IAAI,UAAW,CAAE,OAAOC,CAAa,EAAG,MAAO,OAAS,EAAGkC,GAAM,OAAO,CAAC,EAC9IC,GAAI,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CACtC,IAAMrB,EAAWhC,GAAa,EAExBkC,EADWF,EAAS,WACA,YAE1B,OAAAW,EAAiBT,EAAU,IAAMnB,EAAoB,CAAC,EAE/CiB,CACP,GAAG,CAAC,CAAC,EACLW,EAAiBH,EAAUa,GAAI,CAAC,EAAGA,GAAI,OAAO,CAAC,EAExCrB,CACP,GAAG,CAEH,CC7KA,IAAMsB,GAAcC,EAAc,eAAU,EAiB7B,SAARC,IAAmC,CACxC,SAASC,EAAcC,EAAe,CAEpC,GADAC,GAAiBD,CAAK,EAClBE,EAAa,EAAE,gBAAgB,EAAE,OAAS,EAAG,OAEjD,IAAMC,EAAUD,EAAa,EAAE,aAAa,EAAEF,CAAK,GAAK,IAAI,IAC5D,QAAQ,IAAI,KAAK,UAAU,CAAC,GAAGG,CAAO,EAAG,KAAM,CAAC,CAAC,EACjD,QAAWC,KAAKF,EAAa,EAAE,gBAAgB,EAAG,CAChD,IAAMG,EAASC,EAAYF,CAAC,EAC5BG,GACEJ,EACAE,EAAO,SACPA,EAAO,SACPA,EAAO,OACPA,EAAO,MACT,CACF,CAEAH,EAAa,EAAE,gBAAgB,MAAOM,GAAM,CAC1C,QAAWC,KAAKD,EACd,GAAIC,IAAMT,EACV,QAAWU,KAAaP,EAAS,CAC/B,IAAME,EAASC,EAAYI,CAAS,EACpCC,GACEH,EAAEC,CAAC,EACHJ,EAAO,SACPA,EAAO,SACPA,EAAO,OACPA,EAAO,MACT,EACIG,EAAEC,CAAC,EAAE,OAAS,IAChB,OAAOD,EAAEC,CAAC,EACV,OAAOP,EAAa,EAAE,WAAW,EAAEO,CAAC,EAExC,CAEET,IAAUY,GAAiB,IAC7BJ,EAAER,CAAK,EAAIG,EAEXD,EAAa,EAAE,cAAc,MAAOW,GAAW,CAC7C,IAAMJ,EAAII,EAAOb,CAAK,GAAK,CAAC,EAC5BS,EAAE,OAAS,EACX,QAAWL,KAAKD,EACdM,EAAE,KAAK,GAAGK,GAAaR,EAAYF,CAAC,CAAC,CAAC,EAExCS,EAAOb,CAAK,EAAIS,CAClB,CAAC,EAEL,CAAC,CACH,CAEA,OAAAM,EACE,IAAM,CACJb,EAAa,EAAE,aAAa,EAC5BA,EAAa,EAAE,WAAW,EAC1BA,EAAa,EAAE,WAAW,CAC5B,EACA,IAAM,CACJA,EAAa,EAAE,cAAc,MAAOW,GAAW,CAC7C,QAAWJ,KAAKI,EAAQ,CACtB,GAAI,CAACX,EAAa,EAAE,aAAa,EAAEO,CAAC,EAAG,CACrC,OAAOI,EAAOJ,CAAC,EACf,QACF,CAEA,IAAMO,EAAQH,EAAOJ,CAAC,EACtBO,EAAM,OAAS,EACf,QAAW,KAAKd,EAAa,EAAE,aAAa,EAAEO,CAAC,EAC7CO,EAAM,KAAK,GAAGF,GAAaR,EAAY,CAAC,CAAC,CAAC,CAE9C,CACF,CAAC,CACH,CACF,EAIFW,GAAY,QAAU,CAAC,QAAS,IAAM,EAAE,IAAM,CAC9C,IAAMC,EAAWtB,GAAY,EACvBuB,EAAWD,EAAS,WAG1B,OAAOA,CACP,GAAG,CAAC,CAAC,EACYD,GAAY,CAAC,IAAI,cAAe,CAAE,OAAOL,GAAiB,CAAE,EAAG,IAAI,OAAQ,CAAE,OAAOQ,GAAc,CAAE,EAAG,IAAI,UAAW,CAAE,OAAOrB,CAAc,CAAG,EAAGkB,GAAY,OAAO,CAKvL,CC9FA,IAAMI,GAAa,OACbC,GAAe,EACfC,GAAe,GACfC,GAAQ,EACRC,GAAQ,EACRC,GAAmB,EACnBC,GAAoB,GACpBC,GAAoB,EAGpBC,GAAkB,EAClBC,GAAgB,EAChBC,GAAiB,EACjBC,GAAkB,EAWjB,SAASC,IAAkB,CAChC,IAAMC,EAAe,CAAC,EACtB,QAAWC,KAASC,GAAO,EACzBF,EAAKC,EAAM,KAAK,CAAC,EAAI,CACnB,QAASA,EAAM,aAAa,EAC5B,MAAOA,EAAM,UAAU,EACvB,WAAYA,EAAM,WAAW,EAC7B,WAAYA,EAAM,WAAW,CAC/B,EAEF,OAAOD,CACT,CAGO,SAASG,GAAeD,EAA4B,CACzD,IAAME,EAAU,IAAI,YAEdC,EAAW,IAAI,IACfC,EAAqC,CAAC,EAC5C,OAAW,CAAE,QAAAC,CAAQ,IAAK,OAAO,OAAOL,CAAM,EAC5C,QAAWM,KAAO,OAAO,KAAKD,CAAO,EACnC,GAAI,CAACF,EAAS,IAAIG,CAAG,EAAG,CACtB,GAAM,CAACC,EAAGC,EAAGC,CAAC,EAAIC,GAAUJ,CAAG,EAAE,IAAKK,GAAM,KAAK,MAAMA,EAAI,GAAG,CAAC,EAC/DR,EAAS,IAAIG,EAAKF,EAAO,MAAM,EAC/BA,EAAO,KAAK,CAACG,EAAGC,EAAGC,CAAC,CAAC,CACvB,CAwBJ,IAAMG,EAAmB,CAAC,EAC1B,OAAW,CACTC,EACA,CAAE,QAAAR,EAAS,MAAAS,EAAO,WAAAC,EAAY,WAAAC,CAAW,CAC3C,IAAK,OAAO,QAAQhB,CAAM,EAAG,CAC3B,IAAMiB,EAAYf,EAAQ,OAAOW,CAAI,EAC/BK,EAAe,OAAO,QAAQb,CAAO,EAAE,QAAQ,CAAC,CAACC,EAAKa,CAAG,IAAM,CACnE,IAAMC,EAAMjB,EAAS,IAAIG,CAAG,EAC5B,OAAO,MAAM,KAAKa,CAAG,EAAE,IAAKE,GAAQ,CAClC,GAAM,CACJ,SAAUC,EACV,SAAUC,EACV,OAAQC,EACR,OAAQC,CACV,EAAIC,EAAYL,CAAG,EACnB,MAAO,CAAE,IAAAD,EAAK,GAAAE,EAAI,GAAAC,EAAI,GAAIC,EAAKF,EAAK,EAAG,GAAIG,EAAKF,EAAK,CAAE,CACzD,CAAC,CACH,CAAC,EAEKI,EAAa,OAAO,QAAQb,CAAK,EAAE,IAAI,CAAC,CAACc,EAAGC,CAAI,IAAM,CAC1D,IAAMC,EAAM,CAACF,EACPG,EAAY7B,EAAQ,OAAO2B,EAAK,IAAI,EAEtCG,EAAQ,EACRH,EAAK,MAAM,OAAMG,GAAS,GAC1BH,EAAK,MAAM,SAAQG,GAAS,GAC5BH,EAAK,MAAM,YAAWG,GAAS,GAC/BH,EAAK,MAAM,gBAAeG,GAAS,GAEvC,IAAMC,EAAkC,CAAC,EACnCC,EAAqB,CAAC,EAG5B,GAAIL,EAAK,MAAM,SAAWM,GAAqB,CAC7CD,EAAS,KAAKzC,EAAe,EAC7B,IAAMgB,EAAIP,EAAQ,OAAO2B,EAAK,MAAM,MAAM,EAC1CI,EAAO,KAAK,IAAI,WAAW,CAACxB,EAAE,OAAQ,GAAGA,CAAC,CAAC,CAAC,CAC9C,CAOA,GALIoB,EAAK,MAAM,OAASO,KACtBF,EAAS,KAAKxC,EAAa,EAC3BuC,EAAO,KAAKJ,EAAK,MAAM,IAAI,GAGzBA,EAAK,MAAM,QAAUQ,GAAoB,CAC3CH,EAAS,KAAKvC,EAAc,EAC5B,IAAM2C,EAAIpC,EAAQ,OAAO2B,EAAK,MAAM,KAAK,EACzCI,EAAO,KAAK,IAAI,WAAW,CAACK,EAAE,OAAQ,GAAGA,CAAC,CAAC,CAAC,CAC9C,CAEA,GAAIT,EAAK,MAAM,QAAUA,EAAK,MAAM,SAAW,GAAI,CACjDK,EAAS,KAAKtC,EAAe,EAC7B,IAAM2C,EAAWrC,EAAQ,OAAO2B,EAAK,MAAM,MAAM,EACjDI,EAAO,KAAK,IAAI,WAAW,CAACM,EAAS,OAAQ,GAAGA,CAAQ,CAAC,CAAC,CAC5D,CAEA,MAAO,CAAE,IAAAT,EAAK,UAAAC,EAAW,MAAAC,EAAO,OAAAC,EAAQ,SAAAC,CAAS,CACnD,CAAC,EAEKM,EAAS,OAAO,QAAQzB,CAAU,EAAE,IAAI,CAAC,CAACa,EAAGjB,CAAC,KAAO,CACzD,EAAG,CAACiB,EACJ,EAAGjB,CACL,EAAE,EACI8B,EAAS,OAAO,QAAQzB,CAAU,EAAE,IAAI,CAAC,CAACY,EAAGjB,CAAC,KAAO,CACzD,EAAG,CAACiB,EACJ,EAAGjB,CACL,EAAE,EAEFC,EAAW,KAAK,CAAE,UAAAK,EAAW,aAAAC,EAAc,WAAAS,EAAY,OAAAa,EAAQ,OAAAC,CAAO,CAAC,CACzE,CAGA,IAAIC,EAAOvD,GAAeiB,EAAO,OAASd,GAC1C,QAAWqD,KAAK/B,EAAY,CAC1B8B,GAAQtD,GAAQuD,EAAE,UAAU,OAC5BD,GAAQrD,GAAQ,EAChBqD,GAAQC,EAAE,aAAa,OAASpD,GAChC,QAAWqD,KAAKD,EAAE,WAAY,CAC5BD,GAAQ,EAAQE,EAAE,UAAU,OAAS,EAAI,EACzC,QAASC,EAAI,EAAGA,EAAID,EAAE,OAAO,OAAQC,IAAK,CACxC,IAAM/C,EAAO8C,EAAE,OAAOC,CAAC,EACvBH,GAAQ,EACJ,OAAO5C,GAAS,SAClB4C,GAAQ,EAERA,GAAQ5C,EAAK,UAEjB,CACF,CACA4C,GAAQC,EAAE,OAAO,OAASnD,GAC1BkD,GAAQC,EAAE,OAAO,OAASnD,EAC5B,CAEA,IAAMsD,EAAM,IAAI,YAAYJ,CAAI,EAC1BK,EAAO,IAAI,SAASD,CAAG,EACvBE,EAAK,IAAI,WAAWF,CAAG,EACzBG,EAAI,EAGRD,EAAG,IACD,CAAC,GAAG/D,EAAU,EAAE,IAAKqD,GAAMA,EAAE,WAAW,CAAC,CAAC,EAC1CW,CACF,EACAA,GAAK,EACLF,EAAK,UAAUE,EAAG/D,GAAc,EAAI,EACpC+D,GAAK,EACLF,EAAK,UAAUE,EAAGrC,EAAW,OAAQ,EAAI,EACzCqC,GAAK,EACLF,EAAK,UAAUE,EAAG7C,EAAO,OAAQ,EAAI,EACrC6C,GAAK,EAGL7C,EAAO,QAAQ,CAAC8C,EAAKC,IAAM,CACzBJ,EAAK,SAASE,IAAKE,CAAC,EACpB,QAAWb,KAAKY,EAAKH,EAAK,SAASE,IAAKX,CAAC,CAC3C,CAAC,EAGD,QAAWK,KAAK/B,EAAY,CAC1BmC,EAAK,UAAUE,EAAGN,EAAE,UAAU,OAAQ,EAAI,EAC1CM,GAAK,EACLD,EAAG,IAAIL,EAAE,UAAWM,CAAC,EACrBA,GAAKN,EAAE,UAAU,OAEjBI,EAAK,UAAUE,EAAGN,EAAE,aAAa,OAAQ,EAAI,EAC7CM,GAAK,EACLF,EAAK,UAAUE,EAAGN,EAAE,WAAW,OAAQ,EAAI,EAC3CM,GAAK,EACLF,EAAK,UAAUE,EAAGN,EAAE,OAAO,OAAQ,EAAI,EACvCM,GAAK,EACLF,EAAK,UAAUE,EAAGN,EAAE,OAAO,OAAQ,EAAI,EACvCM,GAAK,EAEL,QAAW1C,KAAKoC,EAAE,aAChBI,EAAK,SAASE,IAAK1C,EAAE,GAAG,EACxBwC,EAAK,UAAUE,EAAG1C,EAAE,GAAI,EAAI,EAC5B0C,GAAK,EACLF,EAAK,UAAUE,EAAG1C,EAAE,GAAI,EAAI,EAC5B0C,GAAK,EACLF,EAAK,UAAUE,EAAG1C,EAAE,GAAI,EAAI,EAC5B0C,GAAK,EACLF,EAAK,UAAUE,EAAG1C,EAAE,GAAI,EAAI,EAC5B0C,GAAK,EAGP,QAAWL,KAAKD,EAAE,WAAY,CAC5BI,EAAK,UAAUE,EAAGL,EAAE,IAAK,EAAI,EAC7BK,GAAK,EACLF,EAAK,UAAUE,EAAGL,EAAE,UAAU,OAAQ,EAAI,EAC1CK,GAAK,EACLD,EAAG,IAAIJ,EAAE,UAAWK,CAAC,EACrBA,GAAKL,EAAE,UAAU,OAEjBG,EAAK,SAASE,EAAGL,EAAE,KAAK,EACxBK,GAAK,EACLF,EAAK,SAASE,EAAGL,EAAE,OAAO,MAAM,EAChCK,GAAK,EAEL,QAASJ,EAAI,EAAGA,EAAID,EAAE,OAAO,OAAQC,IAAK,CACxCE,EAAK,SAASE,EAAGL,EAAE,SAASC,CAAC,CAAC,EAC9BI,GAAK,EACL,IAAMnD,EAAO8C,EAAE,OAAOC,CAAC,EACnB,OAAO/C,GAAS,UAClBiD,EAAK,UAAUE,EAAGnD,EAAM,EAAI,EAC5BmD,GAAK,IAELD,EAAG,IAAIlD,EAAMmD,CAAC,EACdA,GAAKnD,EAAK,WAEd,CACF,CAEA,QAAWS,KAAKoC,EAAE,OAChBI,EAAK,UAAUE,EAAG1C,EAAE,EAAG,EAAI,EAC3B0C,GAAK,EACLF,EAAK,SAASE,EAAG1C,EAAE,EAAG,EAAI,EAC1B0C,GAAK,EAEP,QAAW,KAAKN,EAAE,OAChBI,EAAK,UAAUE,EAAG,EAAE,EAAG,EAAI,EAC3BA,GAAK,EACLF,EAAK,SAASE,EAAG,EAAE,EAAG,EAAI,EAC1BA,GAAK,CAET,CAEA,OAAO,IAAI,WAAWH,EAAK,EAAGG,CAAC,CACjC,CAGO,SAASG,GAAetD,EAA0B,CACvD,IAAMuD,EAAU,IAAI,YACdN,EAAO,IAAI,SAASjD,EAAK,OAAQA,EAAK,WAAYA,EAAK,UAAU,EACnE,EAAI,EAGR,GADcuD,EAAQ,OAAOvD,EAAK,SAAS,EAAG,EAAI,CAAC,CAAC,IACtCb,GAAY,MAAM,IAAI,MAAM,oBAAoB,EAC9D,GAAK,EACL,IAAMqE,EAAUP,EAAK,UAAU,EAAG,EAAI,EAEtC,GADA,GAAK,EACDO,IAAYpE,GAAc,MAAM,IAAI,MAAM,0BAA0B,EACxE,IAAMqE,EAAaR,EAAK,UAAU,EAAG,EAAI,EACzC,GAAK,EACL,IAAMS,EAAaT,EAAK,UAAU,EAAG,EAAI,EACzC,GAAK,EAEL,IAAMU,EAAuB,CAAC,EAC9B,QAASN,EAAI,EAAGA,EAAIK,EAAYL,IAAK,CACnC,IAAMO,EAAKX,EAAK,SAAS,GAAG,EACtBxC,EAAIwC,EAAK,SAAS,GAAG,EACrBvC,EAAIuC,EAAK,SAAS,GAAG,EACrBtC,EAAIsC,EAAK,SAAS,GAAG,EAC3BU,EAAWC,CAAE,EACX,IAAI,CAACnD,EAAGC,EAAGC,CAAC,EAAE,IAAKkD,GAAMA,EAAE,SAAS,EAAE,EAAE,SAAS,EAAG,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC,EACtE,CAEA,IAAMC,EAAiB,CAAC,EACxB,QAASjB,EAAI,EAAGA,EAAIY,EAAYZ,IAAK,CACnC,IAAMkB,EAAUd,EAAK,UAAU,EAAG,EAAI,EACtC,GAAK,EACL,IAAMlC,EAAOwC,EAAQ,OAAOvD,EAAK,SAAS,EAAG,EAAI+D,CAAO,CAAC,EACzD,GAAKA,EAEL,IAAMC,EAAOf,EAAK,UAAU,EAAG,EAAI,EACnC,GAAK,EACL,IAAMgB,EAAOhB,EAAK,UAAU,EAAG,EAAI,EACnC,GAAK,EACL,IAAMiB,EAAQjB,EAAK,UAAU,EAAG,EAAI,EACpC,GAAK,EACL,IAAMkB,EAAQlB,EAAK,UAAU,EAAG,EAAI,EACpC,GAAK,EAEL,IAAM1C,EAAqB,CAAC,EAC5B,QAAS8C,EAAI,EAAGA,EAAIW,EAAMX,IAAK,CAC7B,IAAM/B,EAAM2B,EAAK,SAAS,GAAG,EACvBzB,EAAKyB,EAAK,UAAU,EAAG,EAAI,EACjC,GAAK,EACL,IAAMxB,EAAKwB,EAAK,UAAU,EAAG,EAAI,EACjC,GAAK,EACL,IAAMmB,EAAKnB,EAAK,UAAU,EAAG,EAAI,EACjC,GAAK,EACL,IAAMoB,EAAKpB,EAAK,UAAU,EAAG,EAAI,EACjC,GAAK,EACL,IAAMvB,EAAKF,EAAK4C,EAAK,EACfzC,EAAKF,EAAK4C,EAAK,EACf9C,GAAM,GAAGE,CAAE,IAAID,CAAE,IAAIG,CAAE,IAAID,CAAE,GAC7BlB,EAAMmD,EAAWrC,CAAG,EACrBf,EAAQC,CAAG,IAAGD,EAAQC,CAAG,EAAI,IAAI,KACtCD,EAAQC,CAAG,EAAE,IAAIe,EAAG,CACtB,CAEA,IAAMP,EAAiB,CAAC,EACxB,QAASqC,EAAI,EAAGA,EAAIY,EAAMZ,IAAK,CAC7B,IAAMrB,EAAMiB,EAAK,UAAU,EAAG,EAAI,EAClC,GAAK,EACL,IAAMqB,EAAIrB,EAAK,UAAU,EAAG,EAAI,EAChC,GAAK,EACL,IAAMsB,EAAMhB,EAAQ,OAAOvD,EAAK,SAAS,EAAG,EAAIsE,CAAC,CAAC,EAClD,GAAKA,EACL,IAAMpC,EAAQe,EAAK,SAAS,GAAG,EACzBuB,EAAavB,EAAK,SAAS,GAAG,EAE9BwB,EAAmB,CACvB,OAAQpC,GACR,KAAMC,GACN,MAAOC,GACP,KAAM,CAAC,EAAEL,EAAQ,GACjB,OAAQ,CAAC,EAAEA,EAAQ,GACnB,UAAW,CAAC,EAAEA,EAAQ,GACtB,cAAe,CAAC,EAAEA,EAAQ,GAC1B,OAAQwC,EACV,EAEA,QAASC,EAAI,EAAGA,EAAIH,EAAYG,IAAK,CACnC,IAAMf,GAAKX,EAAK,SAAS,GAAG,EAC5B,GAAIW,KAAOjE,GAAiB,CAC1B,IAAMiF,EAAM3B,EAAK,SAAS,GAAG,EAC7BwB,EAAM,OAASlB,EAAQ,OAAOvD,EAAK,SAAS,EAAG,EAAI4E,CAAG,CAAC,EACvD,GAAKA,CACP,SAAWhB,KAAOhE,GAChB6E,EAAM,KAAOxB,EAAK,UAAU,EAAG,EAAI,EACnC,GAAK,UACIW,KAAO/D,GAAgB,CAChC,IAAM+E,EAAM3B,EAAK,SAAS,GAAG,EAC7BwB,EAAM,MAAQlB,EAAQ,OAAOvD,EAAK,SAAS,EAAG,EAAI4E,CAAG,CAAC,EACtD,GAAKA,CACP,SAAWhB,KAAO9D,GAAiB,CACjC,IAAM8E,EAAM3B,EAAK,SAAS,GAAG,EAC7BwB,EAAM,OAASlB,EAAQ,OAAOvD,EAAK,SAAS,EAAG,EAAI4E,CAAG,CAAC,EACvD,GAAKA,CACP,CACF,CAEA5D,EAAMgB,CAAG,EAAI,CAAE,KAAMuC,EAAK,MAAAE,EAAO,SAAU,EAAG,CAChD,CAEA,IAAMxD,EAAwB,CAAC,EAC/B,QAASoC,EAAI,EAAGA,EAAIa,EAAOb,IAAK,CAC9B,IAAMrB,EAAMiB,EAAK,UAAU,EAAG,EAAI,EAClC,GAAK,EACL,IAAM4B,EAAI5B,EAAK,SAAS,EAAG,EAAI,EAC/B,GAAK,EACLhC,EAAWe,CAAG,EAAI6C,CACpB,CACA,IAAM3D,EAAwB,CAAC,EAC/B,QAASmC,EAAI,EAAGA,EAAIc,EAAOd,IAAK,CAC9B,IAAMrB,EAAMiB,EAAK,UAAU,EAAG,EAAI,EAClC,GAAK,EACL,IAAM4B,EAAI5B,EAAK,SAAS,EAAG,EAAI,EAC/B,GAAK,EACL/B,EAAWc,CAAG,EAAI6C,CACpB,CAEAf,EAAO/C,CAAI,EAAI,CAAE,QAAAR,EAAS,MAAAS,EAAO,WAAAC,EAAY,WAAAC,CAAW,CAC1D,CAEA,OAAO4C,CACT,CC9YA,IAAMgB,GAAeC,EAAc,gzCAA8vC,EAwBpxC,CAACC,GAAKC,EAAM,EAAIC,EAAI,EAAK,EAEvB,SAARC,IAA0B,CAC/B,IAAIC,EAEJ,SAASC,EAAWC,EAAgBC,EAAe,CACjD,IAAMC,EAASC,GAAkB,EAC3BC,GAAYJ,EAAQE,EAAO,SAAWA,EAAO,UAAYD,EAEzDI,EAASL,EACVM,GAAc,KAAK,MAAMA,EAAIC,CAAQ,EACrCD,GAAcA,EAAIC,EAEjBC,EAAcR,EACfM,IACE,KAAK,MAAMA,EAAIC,CAAQ,EAAI,GAAKA,EAAYD,EAAIC,EAClDD,GACC,KAAK,MAAMA,EAAIC,CAAQ,EAAIA,GAAaD,EAAIC,EAAY,GAE9DE,EAAa,EAAE,aAAa,MAAOC,GAAc,CAC/C,IAAMC,EAAc,OAAO,KAAKD,CAAS,EACtC,IAAI,MAAM,EACV,KAAK,CAACE,EAAGC,IAAMA,EAAID,CAAC,EAEvB,QAAWN,KAAKK,EACd,GAAIN,EAAOC,CAAC,GAAKF,EAAU,CACzB,IAAMU,EAASN,EAAYF,CAAC,EAC5BI,EAAUI,CAAM,EAAIJ,EAAUJ,CAAC,EAC/B,OAAOI,EAAUJ,CAAC,CACpB,CAGF,QAAWS,KAAU,OAAO,KAAKL,CAAS,EAAG,CAC3C,IAAMM,EAAM,OAAOD,CAAM,EACrB,CAAE,KAAAE,EAAM,SAAAC,EAAU,MAAAC,CAAM,EAAIT,EAAUM,CAAG,EAE7C,GAAIC,EAAK,WAAW,GAAG,EAAG,CACxB,IAAMG,EAAM,IAAIC,GAAOJ,EAAK,MAAM,CAAC,CAAC,EAAE,gBAAgB,EAChDK,EAAUC,GAASH,EAAKpB,EAAOI,CAAQ,EAC7Ca,EAAO,IAAIO,GAAUF,CAAO,CAAC,GAC7BZ,EAAUM,CAAG,EAAI,CAAE,KAAAC,EAAM,SAAAC,EAAU,MAAAC,CAAM,CAC3C,CACF,CAEAM,GAAaf,CAAS,CACxB,CAAC,CACH,CAEA,SAASgB,GAAiB,CACxBjB,EAAa,EAAE,aAAa,MAAOC,GAAc,CAC/CiB,GAAwBjB,EAAW,CAACkB,EAAGZ,IAAQ,OAAON,EAAUM,CAAG,CAAC,EACpES,GAAaf,CAAS,CACxB,CAAC,CACH,CAEA,SAASmB,GAAa,CACpB,IAAMC,EAAUC,GAAeC,GAAgB,CAAC,EAC1CC,EAAO,IAAI,KAAK,CAACH,CAAO,EAAG,CAAE,KAAM,0BAA2B,CAAC,EAC/DI,EAAM,IAAI,gBAAgBD,CAAI,EAE9BrB,EAAI,SAAS,cAAc,GAAG,EACpCA,EAAE,KAAOsB,EACTtB,EAAE,SAAW,cACb,SAAS,KAAK,YAAYA,CAAC,EAC3BA,EAAE,MAAM,EACR,SAAS,KAAK,YAAYA,CAAC,EAC3B,IAAI,gBAAgBsB,CAAG,CACzB,CAEA,SAASC,GAAmC,CAC1C,IAAMC,EAAO,KAAK,QAAQ,CAAC,EAC3B,GAAI,CAACA,EAAM,OAEX,IAAMC,EAAS,IAAI,WACnBA,EAAO,OAAS,IAAM,CACpB,GAAI,EAAEA,EAAO,kBAAkB,aAAc,OAC7C,IAAMC,EAAO,IAAI,WAAWD,EAAO,MAAM,EACnCE,EAAUC,GAAeF,CAAI,EAEnCG,GAAU,MAAOC,GAAW,CAC1BA,EAAO,OAAS,EAChB,QAAWC,KAAQJ,EAAS,CAC1B,IAAMK,EAAIC,GAAYF,CAAI,EACpBG,EAAIP,EAAQI,CAAI,EAEtBC,EAAE,cAAcE,EAAE,UAAU,EAC5BF,EAAE,cAAcE,EAAE,UAAU,EAC5BF,EAAE,aAAaE,EAAE,KAAK,EACtBF,EAAE,gBAAgBE,EAAE,OAAO,EAE3BF,EAAE,cAAc,MAAOG,GAAW,CAChC,QAAWC,KAASF,EAAE,QACpB,GAAIE,IAAUC,GAAiB,EAAG,CAChC,IAAMC,EAAIH,EAAOC,CAAK,GAAK,CAAC,EAC5BE,EAAE,OAAS,EACX,QAAWC,KAAKL,EAAE,QAAQE,CAAK,EAC7BE,EAAE,KAAK,GAAGE,GAAaC,EAAYF,CAAC,CAAC,CAAC,EAExCJ,EAAOC,CAAK,EAAIE,CAClB,CAEJ,CAAC,EACDzB,GAAamB,EAAE,UAAU,CAAC,EAC1BF,EAAO,KAAKE,CAAC,CACf,CAEAnB,GAAaiB,EAAO,CAAC,EAAE,UAAU,CAAC,EAClCY,GAAgBZ,EAAO,CAAC,CAAC,CAC3B,CAAC,CACH,EAEAL,EAAO,kBAAkBD,CAAI,CAC/B,CAEA,OACG,IAAM,CACX,IAAMmB,EAAW/D,GAAa,EACxBgE,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YACpBG,EAAWJ,EAAS,YACpBK,EAAWD,EAAS,WACpBE,EAAWD,EAAS,WACpBE,EAAWF,EAAS,YAEpBG,EADWD,EAAS,WACC,YACrBE,EAAYF,EAAS,YACrBG,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,YACtBE,EAAYD,EAAU,WACtBE,EAAYF,EAAU,YACtBG,EAAYD,EAAU,WACtBE,EAAYF,EAAU,YACtBG,EAAYD,EAAU,WACtBE,EAAYF,EAAU,YACtBG,EAAYD,EAAU,WACtBE,EAAYF,EAAU,YACtBG,GAAYD,EAAU,WACtBE,EAAYF,EAAU,YACtBG,GAAYD,EAAU,YACtBE,GAAYD,GAAU,WACtBE,GAAYF,GAAU,YACtBG,GAAYD,GAAU,YACtBE,GAAYD,GAAU,WACtBE,GAAYzB,EAAS,YACrB0B,GAAYD,GAAU,WAE5B,OAAAvF,EAAa8D,EACb2B,EAAmB1B,EAAU,QAAShC,CAAU,EAChD0D,EAAmBvB,EAAW,SAAU7B,CAAU,EAClDqD,EAAkBvB,EAAW,QAASwB,EAAa,EACnDC,GAAa,QAAU,CAAC,EACxBC,EAAiBzB,EAAWwB,GAAa,CAAC,CAAC,CAAC,EAC5CE,GAAgB,QAAU,CAAC,EAC3BD,EAAiBxB,EAAWyB,GAAgB,CAAC,CAAC,CAAC,EAC/CJ,EAAkBpB,EAAW,QAASqB,EAAa,EACnDF,EAAmBlB,EAAW,QAAS3C,CAAc,EACrD6D,EAAmBhB,EAAW,QAAS,IAAMxE,EAAW,GAAO,CAAC,CAAC,EACjEwF,EAAmBd,EAAW,QAAS,IAAM1E,EAAW,GAAO,CAAC,CAAC,EACjEwF,EAAmBZ,EAAW,QAAS,IAAM5E,EAAW,GAAM,CAAC,CAAC,EAChEwF,EAAmBV,EAAW,QAAS,IAAM9E,EAAW,GAAM,CAAC,CAAC,EAChEyF,EAAkBT,EAAW,QAASU,EAAa,EACnDI,EAAgBb,GAAW,WAAY,IAAMtF,GAAI,CAAC,EAClD6F,EAAmBP,GAAW,QAAS,IAAMrF,GAAO,CAACD,GAAI,CAAC,CAAC,EAC3D8F,EAAkBN,GAAW,QAASO,EAAa,EACnDF,EAAmBJ,GAAW,QAAS,IAAMW,GAAe,CAACC,EAAY,CAAC,CAAC,EAC3EJ,EAAiBP,GAAW,IAAMW,EAAY,EAAI,SAAM,QAAG,EAC3DR,EAAmBF,GAAW,QAAS,IAC7BvF,EAAW,SAAS,CAClB,KAAMA,EAAW,YACjB,SAAU,QACZ,CAAC,CAAC,EAELyD,CACP,GAAG,CAEH,CC5MA,IAAMyC,GAAcC,EAAc,+EAA+E,EAC3GC,GAAcD,EAAc,uIAAuI,EACnKE,GAAeF,EAAc,qPAAqP,EAExR,OAAO,0BAA4B,OAAO,2BAA6BG,EAAuB,SAAS,EACvG,OAAO,wBAA0B,OAAO,yBAA2BA,EAAuB,OAAO,EAcjG,SAAS,KAAK,QAEdC,GAAO,QAAU,CAAC,EACDA,GAAO,CAAC,MAAO,WAAY,MAAO,QAAS,GAAI,MAAO,IAAI,MAAO,CAAE,OAAOC,GAAI,CAAE,EAAG,EAAG,IAAK,EAAG,IAAK,UAAW,GAAM,IAAI,SAAU,CAAE,OAAOC,EAAO,CAAG,CAAC,GAKtJL,GAAY,EAMZF,GAAY,CAK7B,EAEA,SAASQ,GAAUC,EAAmB,CAChCA,EAAG,MAAQ,IACbF,GAAO,CAACD,GAAI,CAAC,EACJG,EAAG,MAAQ,WAAa,CAACC,GAClCC,GAAe,EAAI,EACV,CAACD,IAAiBD,EAAG,IAAI,YAAY,IAAM,KAAOG,GAAY,GACvEC,EAAa,EAAE,uBAAuB,MAAOC,GAAQ,CACnDA,EAAI,MAAM,EACVA,EAAI,IACFC,GAAgB,CACd,SAAU,EACV,SAAU,EACV,OAAQC,EACR,OAAQC,EACV,CAAC,CACH,CACF,CAAC,CAEL,CAEA,SAASC,GAAQT,EAAmB,CAC9BA,EAAG,MAAQ,WAAa,CAACC,IAC3BC,GAAe,EAAK,CAExB,CAEA,SAAS,KAAK,SACX,IAAM,CACT,IAAMQ,EAAWhB,GAAa,EACxBiB,EAAWD,EAAS,WACpBE,EAAWD,EAAS,YACpBE,EAAWD,EAAS,YACpBE,EAAWD,EAAS,WACpBE,EAAWD,EAAS,YACpBE,EAAWD,EAAS,YACpBE,EAAWJ,EAAS,YAE1B,OAAAK,EAAoB,OAAO,0BAA2BR,EAAUX,EAAS,EACzEmB,EAAoB,OAAO,wBAAyBR,EAAUD,EAAO,EACrEU,GAAO,QAAU,CAAC,EAClBC,EAAiBT,EAAUQ,GAAO,CAAC,CAAC,CAAC,EACrCE,GAAU,QAAU,CAAC,EACrBD,EAAiBR,EAAUS,GAAU,CAAC,CAAC,CAAC,EACxCC,GAAS,QAAU,CAAC,EACpBF,EAAiBN,EAAUQ,GAAS,CAAC,CAAC,CAAC,EACvCC,GAAa,QAAU,CAAC,EACxBH,EAAiBL,EAAUQ,GAAa,CAAC,CAAC,CAAC,EAC3CC,GAAO,QAAU,CAAC,EAClBJ,EAAiBJ,EAAUQ,GAAO,CAAC,CAAC,CAAC,EACrCC,GAAK,QAAU,CAAC,EAChBL,EAAiBH,EAAUQ,GAAK,CAAC,CAAC,CAAC,EAE5Bf,CACP,GAAG,CACH",
  "names": ["context", "watch", "fn", "execute", "value", "cleanup", "running", "watchOnly", "deps", "dep", "subscribe", "watchFn", "ref", "listeners", "v", "get", "set", "newV", "prev", "sub", "mutFn", "reactive", "objValue", "obj", "k", "isReactiveObject", "subscriptions", "swapRemove", "a", "i", "iterChildNodesDeep", "node", "fn", "createElementPosition", "elem", "self", "element", "nodes", "template", "html", "needsXml", "xmlToHtml", "node", "el", "name", "value", "child", "createNode", "xml", "xmlNode", "templ", "cached", "createGlobalEvent", "evName", "listeners", "e", "i", "l", "swapRemove", "destroyNode", "iterChildNodesDeep", "t", "addGlobalEvent", "listeners", "target", "value", "added", "i", "l", "swapRemove", "addLocalEvent", "evName", "applyToNodes", "node", "action", "conditionalRender", "anchor", "createNode", "condition", "destroyNode", "cleanup", "running", "create", "n", "watchFn", "setAttribute", "attr", "trackAttribute", "watch", "trackClass", "className", "trackCssProperty", "rule", "insertChild", "child", "textNode", "next", "a", "c", "createTransition", "cond", "name", "t", "enterActive", "enterFrom", "enterTo", "leaveActive", "leaveFrom", "leaveTo", "nextFrame", "res", "removeClasses", "firstRun", "toAlphaUpper", "fromAlphaUpper", "asciiNumParser", "toAlphaLower", "fromAlphaLower", "getCellId", "col", "row", "getCellIdx", "MAX_COLS", "totalOffsetsRange", "from", "to", "offsets", "sum", "k", "n", "totalOffsets", "cum", "isTouchscreen", "isSafari", "ua", "isAppleDevice", "isWebKit", "isTouchDevice", "aligned2", "v", "alignment", "aligned", "asciiNumParser", "base", "asciiStart", "num", "result", "remainder", "s", "i", "getMousePosition", "ev", "clientX", "clientY", "touch", "hexToRgba", "hexColor", "hex", "x", "r", "g", "b", "a", "GRID_LINE_SIZE", "COLOR_GRID_LINE_DARK", "COLOR_GRID_LINE_LIGHT", "COLOR_SELECTED_CELL_DARK", "COLOR_SELECTED_CELL_LIGHT", "COLOR_CELL_DARK_HEX", "COLOR_CELL_LIGHT_HEX", "COLOR_CELL_DARK", "hexToRgba", "COLOR_CELL_LIGHT", "DIVIDER_STYLE", "MAX_COLS", "MAX_ROWS", "CELL_W", "CELL_H", "DEFAULT_FONT_FAMILY", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_COLOR", "DEFAULT_BOLD", "DEFAULT_ITALIC", "DEFAULT_UNDERLINE", "DEFAULT_STRIKETHROUGH", "DEFAULT_FONT_FORMAT", "SHEET_NAME_PATTERN_STR", "SHEET_NAME_PATTERN", "Mat4", "left", "right", "bottom", "top", "nearZ", "farZ", "dest", "rl", "tb", "f_n", "tx", "ty", "tz", "tw", "s", "m4", "sx", "sy", "sz", "data", "rows", "cols", "decimals", "colWidths", "row", "formatted", "result", "c", "column", "_", "r", "NUM_INST_ATTRS", "INST_ATTR_SIZE", "INST_STRIDE", "initData", "data", "len", "i", "Mat4", "initInstances", "size", "index", "start", "NUM_VERT_ATTRS", "VERT_ATTR_SIZE", "VERT_STRIDE", "QUAD_MESH", "addRegionToSet", "set", "startCol", "startRow", "endCol", "endRow", "newRegion", "allRegions", "parseRegion", "minimized", "fullyMergeRegion", "r", "serializeRegion", "removeRegionFromSet", "cut", "updated", "s", "regionsOverlap", "subtractRect", "merged", "carveRegion", "input", "existing", "existingFragments", "overlaps", "mergedOverlaps", "inputFragments", "u", "f", "result", "regionToQuad", "region", "offsetSX", "totalOffsetsRange", "currentSheet", "offsetSY", "sx", "CELL_W", "sy", "CELL_H", "offsetEX", "offsetEY", "ex", "getEffectiveCellWidth", "ey", "getEffectiveCellHeight", "start", "end", "sc", "sr", "ec", "er", "a", "b", "base", "parts", "midTop", "midBottom", "regions", "changed", "mergeTwo", "adjacentOrOverlap", "out", "curr", "mergedAny", "i", "TokenType", "lex", "input", "tokens", "i", "c", "num", "id", "SHEET_NAME_PATTERN", "PRECEDENCE", "Parser", "input", "lex", "rbp", "t", "left", "token", "sheetName", "nextTok", "cellId", "endTok", "name", "args", "expr", "prec", "right", "start", "sheet", "type", "tok", "TokenType", "flatten", "arg", "FUNCTIONS", "args", "sum", "v", "all", "evaluateFormula", "formula", "sheetName", "sheets", "ast", "Parser", "result", "evaluate", "node", "c", "parseCellId", "targetSheet", "sheet", "idx", "getCellIdx", "cell", "flattenRange", "L", "R", "rawArgs", "arg", "name", "fn", "FUNCTIONS", "fullColumn", "fullRow", "sc", "ec", "sr", "er", "fromAlphaUpper", "fromAlphaLower", "scParsed", "srParsed", "ecParsed", "erParsed", "out", "r", "val", "stringify", "toAlphaUpper", "toAlphaLower", "start", "end", "shiftAST", "isRow", "insertAt", "shiftCoord", "id", "c0", "r0", "m", "canvasRect", "setCanvasRect", "ref", "selectedColor", "setSelectedColor", "ctrlPressed", "setCtrlPressed", "scrollEl", "setScrollEl", "scroll", "setScroll", "touchSelecting", "setTouchSelecting", "cellText", "setCellText", "cellInputEl", "setCellInputEl", "isCellInputVisible", "setIsCellInputVisible", "cellInputInfo", "setCellInputInfo", "CELL_W", "CELL_H", "lastFormulaRegion", "getSelectedRegion", "parseRegion", "currentSheet", "positionCellInput", "pos", "region", "getCellId", "quad", "regionToQuad", "prefersDark", "setPrefersDark", "defaultCellColor", "setDefaultCellColor", "watch", "COLOR_CELL_DARK_HEX", "COLOR_CELL_LIGHT_HEX", "instances", "setInstances", "initInstances", "projection", "setProjection", "Mat4", "createSheet", "sheetName", "name", "setName", "lastSelectedRegions", "setLastSelectedRegions", "selectedRegions", "setSelectedRegions", "selectedQuads", "setSelectedQuads", "colorRegions", "setColorRegions", "colorQuads", "setColorQuads", "textCells", "setTextCells", "textQuads", "setTextQuads", "colOffsets", "setColOffsets", "rowOffsets", "setRowOffsets", "computeCells", "cells", "sheetRecord", "sheet", "sheets", "value", "evaluateFormula", "e", "forEachSelectedTextCell", "callback", "parsedRegions", "t", "idx", "col", "MAX_COLS", "row", "s", "regionsOverlap", "lastSheetIdx", "setSheets", "setCurrentSheet", "watchFn", "addSheet", "delSheet", "watch", "prefersDark", "getEffectiveCellWidth", "index", "CELL_W", "currentSheet", "getEffectiveCellHeight", "CELL_H", "computeFirstVisible", "scroll", "offsets", "cellSize", "getEffectiveSize", "nonDefault", "a", "b", "i", "cum", "idx", "gapSize", "defaultIndexOffset", "effective", "defaultCells", "computeFirstVisibleColumn", "scrollX", "computeFirstVisibleRow", "scrollY", "createCanvas2d", "canvas", "ctx", "imgCanvas", "imgCtx", "loadTextureAtlas", "gl", "texture", "atlasCanvas", "atlasCtx", "createCanvas2d", "compileShader", "gl", "source", "type", "shader", "compileLog", "glEnumToString", "initWebGL", "canvas", "vsSource", "fsSource", "vert", "frag", "program", "mapShader", "projection", "initShaderSystem", "data", "result", "loadTextureAtlas", "inputs", "staticBuf", "indexBuf", "dynamicBuf", "staticBufSize", "indexBufSize", "aligned2", "NUM_INST_ATTRS", "VERT_STRIDE", "self", "INST_STRIDE", "initDynamicBuffer", "resizeDynamicBuffer", "resizeInstances", "requestRedraw", "draw", "render", "newSize", "usage", "buffer", "newBuffer", "i", "loc", "INST_ATTR_SIZE", "instances", "glEnum", "_jsx$templ0", "template", "canvas", "shaderSys", "shader", "resizeInstances", "data", "shader", "shaderSys", "Canvas", "setCanvasRect", "canvas", "initShaderSystem", "instances", "QUAD_MESH", "updateProjection", "watch", "prefersDark", "watchOnly", "projection", "canvasRect", "scroll", "width", "height", "setProjection", "proj", "Mat4", "s", "_jsx$el0", "_jsx$templ0", "watchFn", "canvasRect", "currentSheet", "scroll", "prefersDark", "width", "height", "w", "CELL_W", "h", "CELL_H", "cols", "rows", "lineColor", "COLOR_GRID_LINE_DARK", "cellColor", "COLOR_CELL_DARK", "COLOR_GRID_LINE_LIGHT", "COLOR_CELL_LIGHT", "offsetX", "aligned", "offsetY", "firstCol", "computeFirstVisibleColumn", "firstRow", "computeFirstVisibleRow", "visibleRange", "filterVisibleRegions", "regions", "quads", "i", "numQuads", "visibleRegions", "r", "range", "parseRegion", "regionsOverlap", "colors", "numColors", "color", "numRegions", "setInstances", "inst", "numCells", "t", "n", "instOffset", "colIdx", "offset", "totalOffsetsRange", "model", "Mat4", "GRID_LINE_SIZE", "rowIdx", "drawRegions", "hexToRgba", "resizeInstances", "cellMap", "z", "x", "y", "COLOR_SELECTED_CELL_DARK", "COLOR_SELECTED_CELL_LIGHT", "_jsx$templ5", "template", "createGlobalEvent", "Dialog", "props", "cursor", "reactive", "cursorStart", "cursorEnd", "dragging", "setDragging", "ref", "startDrag", "e", "pos", "getMousePosition", "drag", "stopDrag", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el6", "_jsx$el7", "trackAttribute", "trackClass", "trackCssProperty", "addGlobalEvent", "addLocalEvent", "insertChild", "setAttribute", "Portal", "props", "slots", "parent", "anchor", "children", "destroyNode", "watch", "_jsx$templ1", "template", "Dbg", "Portal", "_jsx$el0", "_jsx$el1", "insertChild", "For", "props", "initialPosition", "createElementPosition", "anchor", "refs", "list", "createNode", "length", "n", "i", "lastElem", "insertNode", "data", "item", "setItem", "ref", "currentItem", "isReactiveObject", "reactive", "removed", "watch", "newItem", "removeNode", "destroyNode", "node", "FixedFor", "props", "_", "i", "item", "setItem", "ref", "currentItem", "isReactiveObject", "reactive", "watch", "newItem", "_jsx$templ5", "template", "ColorPicker", "props", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el5", "_jsx$el6", "addLocalEvent", "trackAttribute", "ev", "insertChild", "trackCssProperty", "_jsx$templ2", "template", "Checkbox", "props", "_jsx$el0", "_jsx$el1", "_jsx$el2", "setAttribute", "addLocalEvent", "ev", "insertChild", "_jsx$templ11", "template", "_jsx$templ15", "_jsx$templ17", "_jsx$templ20", "_jsx$templ22", "_jsx$templ0", "_jsx$templ3", "_jsx$templ13", "FontSelector", "updateFont", "k", "v", "setSelectedFont", "f", "currentSheet", "textCells", "forEachSelectedTextCell", "tc", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el6", "_jsx$el7", "_jsx$el8", "_jsx$el9", "_jsx$el10", "_jsx$el11", "_jsx$el12", "_jsx$el13", "_jsx$el14", "_jsx$el15", "_jsx$el16", "_jsx$el17", "setAttribute", "isSafari", "addLocalEvent", "ev", "FixedFor", "insertChild", "fontList", "selectedFont", "formatList", "trackAttribute", "DIVIDER_STYLE", "Checkbox", "ColorPicker", "currencyFormatter", "parseNumCell", "s", "cb", "formatMap", "n", "ref", "DEFAULT_FONT_FAMILY", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_COLOR", "DEFAULT_BOLD", "DEFAULT_ITALIC", "DEFAULT_UNDERLINE", "DEFAULT_STRIKETHROUGH", "DEFAULT_FONT_FORMAT", "_jsx$templ2", "template", "_jsx$templ1", "_jsx$templ11", "_jsx$templ16", "_jsx$templ10", "_jsx$templ6", "_jsx$templ5", "_jsx$templ14", "_jsx$templ0", "_jsx$templ13", "_jsx$templ12", "_jsx$templ15", "createGlobalEvent", "GridControls", "isSelecting", "firstCol", "firstRow", "areaLeft", "areaTop", "areaStart", "watchFn", "scroll", "computeFirstVisibleColumn", "computeFirstVisibleRow", "doSelection", "ev", "updateSelection", "startSelection", "getCellAtCursor", "prefersDark", "updateSelectedColor", "cellColor", "cellRegion", "color", "currentSheet", "r", "region", "parseRegion", "regionsOverlap", "setSelectedColor", "defaultCellColor", "areaEnd", "startCol", "endCol", "startRow", "endRow", "ctrlPressed", "sel", "carveRegion", "cellText", "cellInputEl", "selections", "text", "selection", "cellInputInfo", "getCellId", "setCellText", "lastFormulaRegion", "c", "positionCell", "quads", "quad", "regionToQuad", "cellIdx", "idx", "col", "MAX_COLS", "row", "endSelection", "isTouchscreen", "setTouchSelecting", "cursor", "getMousePosition", "canvasRect", "CELL_W", "totalOffsetsRange", "CELL_H", "showCellInput", "positionCellInput", "updateText", "isCellInputVisible", "getSelectedRegion", "getCellIdx", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el7", "setScrollEl", "trackClass", "touchSelecting", "trackCssProperty", "addLocalEvent", "setScroll", "totalOffsets", "MAX_ROWS", "addGlobalEvent", "For", "insertChild", "t", "conditionalRender", "trackAttribute", "formatMap", "q", "selectedFont", "Dbg", "_", "value", "_jsx$templ2", "template", "_jsx$templ6", "_jsx$templ8", "_jsx$templ0", "_jsx$templ4", "createGlobalEvent", "RESIZE_STYLE", "GridAxes", "cellKeys", "setCellKeys", "ref", "computeVisibleRange", "firstIndex", "size", "getEffectiveSize", "cumSize", "count", "currentIndex", "watchFn", "canvasRect", "scroll", "currentSheet", "width", "height", "firstCol", "computeFirstVisibleColumn", "firstRow", "computeFirstVisibleRow", "colCount", "getEffectiveCellWidth", "rowCount", "getEffectiveCellHeight", "k", "i", "toAlphaUpper", "toAlphaLower", "lastPos", "resizedCol", "startColResize", "ev", "colId", "getMousePosition", "fromAlphaUpper", "resizedRow", "startRowResize", "rowId", "fromAlphaLower", "resizeCell", "resizedIndex", "setOffsets", "cellSize", "pos", "offsets", "newOffset", "CELL_W", "endResize", "lastScrollX", "lastScrollY", "headerOffset", "setHeaderOffset", "asideOffset", "setAsideOffset", "offset", "selectCol", "col", "sel", "ctrlPressed", "carveRegion", "MAX_ROWS", "selectRow", "row", "MAX_COLS", "_jsx$el0", "_jsx$el1", "addLocalEvent", "scrollEl", "trackCssProperty", "For", "insertChild", "_jsx$el2", "trackAttribute", "setAttribute", "addGlobalEvent", "CELL_H", "_jsx$templ2", "template", "CellInput", "shouldSave", "addTextCell", "setIsCellInputVisible", "setCellText", "text", "cellText", "idx", "getCellIdx", "cellInputInfo", "currentSheet", "cells", "selectedFont", "computeCells", "onInput", "onSubmit", "ev", "onKeyUp", "lastFormulaRegion", "onFocus", "positionCellInput", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "setCellInputEl", "trackAttribute", "addLocalEvent", "_jsx$templ1", "template", "Alert", "props", "Portal", "_jsx$el0", "_jsx$el1", "trackAttribute", "trackClass", "insertChild", "_jsx$templ8", "template", "levelColors", "levelIcons", "intervalStep", "duration", "Toast", "props", "progress", "setProgress", "ref", "timeout", "interval", "elapsed", "watchFn", "close", "Portal", "createTransition", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el6", "_jsx$el7", "_jsx$el8", "_jsx$el10", "setAttribute", "insertChild", "addLocalEvent", "trackCssProperty", "_jsx$templ16", "template", "_jsx$templ8", "_jsx$templ18", "_jsx$templ20", "_jsx$templ13", "_jsx$templ3", "_jsx$templ15", "Tabs", "nameInputEl", "nameInput", "setNameInput", "ref", "nameInputLen", "setNameInputLen", "currentSheet", "deleteIdx", "setDeleteIdx", "confirmationVisible", "setConfirmationVisible", "toastOpen", "setToastOpen", "hideNameInput", "input", "askDelete", "idx", "confirmDelete", "delSheet", "newSheet", "addSheet", "name", "sheet", "sheets", "s", "setCurrentSheet", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el6", "_jsx$el7", "_jsx$el8", "addLocalEvent", "For", "insertChild", "i", "trackClass", "trackAttribute", "ev", "trackCssProperty", "setAttribute", "SHEET_NAME_PATTERN_STR", "Alert", "Toast", "Dbg", "_jsx$templ0", "template", "CellColorPicker", "onColorChange", "color", "setSelectedColor", "currentSheet", "regions", "k", "region", "parseRegion", "addRegionToSet", "r", "c", "regionStr", "removeRegionFromSet", "defaultCellColor", "colors", "regionToQuad", "watchFn", "quads", "ColorPicker", "_jsx$el0", "_jsx$el1", "selectedColor", "XLSX_MAGIC", "XLSX_VERSION", "HEADER_FIXED", "LEN16", "CNT32", "COLOR_ENTRY_SIZE", "REGION_BLOCK_SIZE", "OFFSET_ENTRY_SIZE", "STYLE_ID_FAMILY", "STYLE_ID_SIZE", "STYLE_ID_COLOR", "STYLE_ID_FORMAT", "formatSheetData", "data", "sheet", "sheets", "encodeXLSXData", "encoder", "colorMap", "colors", "regions", "hex", "r", "g", "b", "hexToRgba", "v", "sheetsData", "name", "texts", "rowOffsets", "colOffsets", "nameBytes", "regionBlocks", "set", "cid", "key", "sr", "sc", "er", "ec", "parseRegion", "textBlocks", "k", "cell", "idx", "textBytes", "flags", "extras", "extraIDs", "DEFAULT_FONT_FAMILY", "DEFAULT_FONT_SIZE", "DEFAULT_FONT_COLOR", "c", "fmtBytes", "rowOff", "colOff", "size", "s", "t", "j", "buf", "view", "u8", "o", "rgb", "i", "decodeXLSXData", "decoder", "version", "sheetCount", "colorCount", "colorTable", "id", "x", "result", "nameLen", "rCnt", "tCnt", "roCnt", "coCnt", "rs", "cs", "L", "str", "extraCount", "style", "DEFAULT_FONT_FORMAT", "e", "len", "d", "_jsx$templ20", "template", "dbg", "setDbg", "ref", "Header", "controlsEl", "insertLine", "isRow", "delta", "region", "getSelectedRegion", "insertAt", "getDim", "i", "MAX_COLS", "getNewIndex", "currentSheet", "textCells", "cellIndices", "a", "b", "newIdx", "idxStr", "idx", "text", "computed", "style", "ast", "Parser", "shifted", "shiftAST", "stringify", "computeCells", "clearSelection", "forEachSelectedTextCell", "_", "exportData", "encoded", "encodeXLSXData", "formatSheetData", "blob", "url", "importData", "file", "reader", "data", "decoded", "decodeXLSXData", "setSheets", "sheets", "name", "s", "createSheet", "d", "colors", "color", "defaultCellColor", "c", "k", "regionToQuad", "parseRegion", "setCurrentSheet", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el6", "_jsx$el7", "_jsx$el8", "_jsx$el10", "_jsx$el11", "_jsx$el12", "_jsx$el13", "_jsx$el14", "_jsx$el15", "_jsx$el16", "_jsx$el17", "_jsx$el18", "_jsx$el19", "_jsx$el20", "_jsx$el21", "_jsx$el22", "_jsx$el23", "_jsx$el24", "_jsx$el25", "_jsx$el26", "_jsx$el27", "_jsx$el28", "_jsx$el29", "_jsx$el30", "_jsx$el31", "_jsx$el32", "addLocalEvent", "setAttribute", "DIVIDER_STYLE", "FontSelector", "insertChild", "CellColorPicker", "trackClass", "setPrefersDark", "prefersDark", "_jsx$templ2", "template", "_jsx$templ1", "_jsx$templ10", "createGlobalEvent", "Dialog", "dbg", "setDbg", "onKeyDown", "ev", "isTouchscreen", "setCtrlPressed", "ctrlPressed", "currentSheet", "sel", "serializeRegion", "MAX_COLS", "MAX_ROWS", "onKeyUp", "_jsx$el0", "_jsx$el1", "_jsx$el2", "_jsx$el3", "_jsx$el4", "_jsx$el5", "_jsx$el6", "_jsx$el7", "addGlobalEvent", "Header", "insertChild", "CellInput", "GridAxes", "GridControls", "Canvas", "Tabs"]
}
